{"ast":null,"code":"var UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction parse(stackString) {\n  var lines = stackString.split('\\n');\n  return lines.reduce(function (stack, line) {\n    var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n\n    return stack;\n  }, []);\n}\n\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nfunction parseChrome(line) {\n  var parts = chromeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  var submatch = chromeEvalRe.exec(parts[2]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseWinjs(line) {\n  var parts = winjsRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nfunction parseGecko(line) {\n  var parts = geckoRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  var submatch = geckoEvalRe.exec(parts[3]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n\nfunction parseJSC(line) {\n  var parts = javaScriptCoreRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseNode(line) {\n  var parts = nodeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nexport { parse };","map":{"version":3,"names":["UNKNOWN_FUNCTION","parse","stackString","lines","split","reduce","stack","line","parseResult","parseChrome","parseWinjs","parseGecko","parseNode","parseJSC","push","chromeRe","chromeEvalRe","parts","exec","isNative","indexOf","isEval","submatch","file","methodName","arguments","lineNumber","column","winjsRe","geckoRe","geckoEvalRe","javaScriptCoreRe","nodeRe"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js"],"sourcesContent":["var UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction parse(stackString) {\n  var lines = stackString.split('\\n');\n  return lines.reduce(function (stack, line) {\n    var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n\n    return stack;\n  }, []);\n}\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nfunction parseChrome(line) {\n  var parts = chromeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  var submatch = chromeEvalRe.exec(parts[2]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseWinjs(line) {\n  var parts = winjsRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nfunction parseGecko(line) {\n  var parts = geckoRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  var submatch = geckoEvalRe.exec(parts[3]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n\nfunction parseJSC(line) {\n  var parts = javaScriptCoreRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseNode(line) {\n  var parts = nodeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nexport { parse };\n"],"mappings":"AAAA,IAAIA,gBAAgB,GAAG,WAAvB;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAT,CAAeC,WAAf,EAA4B;EAC1B,IAAIC,KAAK,GAAGD,WAAW,CAACE,KAAZ,CAAkB,IAAlB,CAAZ;EACA,OAAOD,KAAK,CAACE,MAAN,CAAa,UAAUC,KAAV,EAAiBC,IAAjB,EAAuB;IACzC,IAAIC,WAAW,GAAGC,WAAW,CAACF,IAAD,CAAX,IAAqBG,UAAU,CAACH,IAAD,CAA/B,IAAyCI,UAAU,CAACJ,IAAD,CAAnD,IAA6DK,SAAS,CAACL,IAAD,CAAtE,IAAgFM,QAAQ,CAACN,IAAD,CAA1G;;IAEA,IAAIC,WAAJ,EAAiB;MACfF,KAAK,CAACQ,IAAN,CAAWN,WAAX;IACD;;IAED,OAAOF,KAAP;EACD,CARM,EAQJ,EARI,CAAP;AASD;;AACD,IAAIS,QAAQ,GAAG,2IAAf;AACA,IAAIC,YAAY,GAAG,+BAAnB;;AAEA,SAASP,WAAT,CAAqBF,IAArB,EAA2B;EACzB,IAAIU,KAAK,GAAGF,QAAQ,CAACG,IAAT,CAAcX,IAAd,CAAZ;;EAEA,IAAI,CAACU,KAAL,EAAY;IACV,OAAO,IAAP;EACD;;EAED,IAAIE,QAAQ,GAAGF,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASG,OAAT,CAAiB,QAAjB,MAA+B,CAA1D,CAPyB,CAOoC;;EAE7D,IAAIC,MAAM,GAAGJ,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASG,OAAT,CAAiB,MAAjB,MAA6B,CAAtD,CATyB,CASgC;;EAEzD,IAAIE,QAAQ,GAAGN,YAAY,CAACE,IAAb,CAAkBD,KAAK,CAAC,CAAD,CAAvB,CAAf;;EAEA,IAAII,MAAM,IAAIC,QAAQ,IAAI,IAA1B,EAAgC;IAC9B;IACAL,KAAK,CAAC,CAAD,CAAL,GAAWK,QAAQ,CAAC,CAAD,CAAnB,CAF8B,CAEN;;IAExBL,KAAK,CAAC,CAAD,CAAL,GAAWK,QAAQ,CAAC,CAAD,CAAnB,CAJ8B,CAIN;;IAExBL,KAAK,CAAC,CAAD,CAAL,GAAWK,QAAQ,CAAC,CAAD,CAAnB,CAN8B,CAMN;EACzB;;EAED,OAAO;IACLC,IAAI,EAAE,CAACJ,QAAD,GAAYF,KAAK,CAAC,CAAD,CAAjB,GAAuB,IADxB;IAELO,UAAU,EAAEP,KAAK,CAAC,CAAD,CAAL,IAAYjB,gBAFnB;IAGLyB,SAAS,EAAEN,QAAQ,GAAG,CAACF,KAAK,CAAC,CAAD,CAAN,CAAH,GAAgB,EAH9B;IAILS,UAAU,EAAET,KAAK,CAAC,CAAD,CAAL,GAAW,CAACA,KAAK,CAAC,CAAD,CAAjB,GAAuB,IAJ9B;IAKLU,MAAM,EAAEV,KAAK,CAAC,CAAD,CAAL,GAAW,CAACA,KAAK,CAAC,CAAD,CAAjB,GAAuB;EAL1B,CAAP;AAOD;;AAED,IAAIW,OAAO,GAAG,+GAAd;;AAEA,SAASlB,UAAT,CAAoBH,IAApB,EAA0B;EACxB,IAAIU,KAAK,GAAGW,OAAO,CAACV,IAAR,CAAaX,IAAb,CAAZ;;EAEA,IAAI,CAACU,KAAL,EAAY;IACV,OAAO,IAAP;EACD;;EAED,OAAO;IACLM,IAAI,EAAEN,KAAK,CAAC,CAAD,CADN;IAELO,UAAU,EAAEP,KAAK,CAAC,CAAD,CAAL,IAAYjB,gBAFnB;IAGLyB,SAAS,EAAE,EAHN;IAILC,UAAU,EAAE,CAACT,KAAK,CAAC,CAAD,CAJb;IAKLU,MAAM,EAAEV,KAAK,CAAC,CAAD,CAAL,GAAW,CAACA,KAAK,CAAC,CAAD,CAAjB,GAAuB;EAL1B,CAAP;AAOD;;AAED,IAAIY,OAAO,GAAG,iIAAd;AACA,IAAIC,WAAW,GAAG,+CAAlB;;AAEA,SAASnB,UAAT,CAAoBJ,IAApB,EAA0B;EACxB,IAAIU,KAAK,GAAGY,OAAO,CAACX,IAAR,CAAaX,IAAb,CAAZ;;EAEA,IAAI,CAACU,KAAL,EAAY;IACV,OAAO,IAAP;EACD;;EAED,IAAII,MAAM,GAAGJ,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASG,OAAT,CAAiB,SAAjB,IAA8B,CAAC,CAAxD;EACA,IAAIE,QAAQ,GAAGQ,WAAW,CAACZ,IAAZ,CAAiBD,KAAK,CAAC,CAAD,CAAtB,CAAf;;EAEA,IAAII,MAAM,IAAIC,QAAQ,IAAI,IAA1B,EAAgC;IAC9B;IACAL,KAAK,CAAC,CAAD,CAAL,GAAWK,QAAQ,CAAC,CAAD,CAAnB;IACAL,KAAK,CAAC,CAAD,CAAL,GAAWK,QAAQ,CAAC,CAAD,CAAnB;IACAL,KAAK,CAAC,CAAD,CAAL,GAAW,IAAX,CAJ8B,CAIb;EAClB;;EAED,OAAO;IACLM,IAAI,EAAEN,KAAK,CAAC,CAAD,CADN;IAELO,UAAU,EAAEP,KAAK,CAAC,CAAD,CAAL,IAAYjB,gBAFnB;IAGLyB,SAAS,EAAER,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAL,CAASb,KAAT,CAAe,GAAf,CAAX,GAAiC,EAHvC;IAILsB,UAAU,EAAET,KAAK,CAAC,CAAD,CAAL,GAAW,CAACA,KAAK,CAAC,CAAD,CAAjB,GAAuB,IAJ9B;IAKLU,MAAM,EAAEV,KAAK,CAAC,CAAD,CAAL,GAAW,CAACA,KAAK,CAAC,CAAD,CAAjB,GAAuB;EAL1B,CAAP;AAOD;;AAED,IAAIc,gBAAgB,GAAG,8DAAvB;;AAEA,SAASlB,QAAT,CAAkBN,IAAlB,EAAwB;EACtB,IAAIU,KAAK,GAAGc,gBAAgB,CAACb,IAAjB,CAAsBX,IAAtB,CAAZ;;EAEA,IAAI,CAACU,KAAL,EAAY;IACV,OAAO,IAAP;EACD;;EAED,OAAO;IACLM,IAAI,EAAEN,KAAK,CAAC,CAAD,CADN;IAELO,UAAU,EAAEP,KAAK,CAAC,CAAD,CAAL,IAAYjB,gBAFnB;IAGLyB,SAAS,EAAE,EAHN;IAILC,UAAU,EAAE,CAACT,KAAK,CAAC,CAAD,CAJb;IAKLU,MAAM,EAAEV,KAAK,CAAC,CAAD,CAAL,GAAW,CAACA,KAAK,CAAC,CAAD,CAAjB,GAAuB;EAL1B,CAAP;AAOD;;AAED,IAAIe,MAAM,GAAG,+FAAb;;AAEA,SAASpB,SAAT,CAAmBL,IAAnB,EAAyB;EACvB,IAAIU,KAAK,GAAGe,MAAM,CAACd,IAAP,CAAYX,IAAZ,CAAZ;;EAEA,IAAI,CAACU,KAAL,EAAY;IACV,OAAO,IAAP;EACD;;EAED,OAAO;IACLM,IAAI,EAAEN,KAAK,CAAC,CAAD,CADN;IAELO,UAAU,EAAEP,KAAK,CAAC,CAAD,CAAL,IAAYjB,gBAFnB;IAGLyB,SAAS,EAAE,EAHN;IAILC,UAAU,EAAE,CAACT,KAAK,CAAC,CAAD,CAJb;IAKLU,MAAM,EAAEV,KAAK,CAAC,CAAD,CAAL,GAAW,CAACA,KAAK,CAAC,CAAD,CAAjB,GAAuB;EAL1B,CAAP;AAOD;;AAED,SAAShB,KAAT"},"metadata":{},"sourceType":"module"}