{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { isInstanceOf, SyncPromise } from '@sentry/utils';\nimport { getExceptionFromError } from '../parsers';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\n\nvar LinkedErrors =\n/** @class */\nfunction () {\n  /**\n   * @inheritDoc\n   */\n  function LinkedErrors(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    /**\n     * @inheritDoc\n     */\n\n\n    this.name = LinkedErrors.id;\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  LinkedErrors.prototype.setupOnce = function () {\n    addGlobalEventProcessor(function (event, hint) {\n      var self = getCurrentHub().getIntegration(LinkedErrors);\n\n      if (self) {\n        var handler = self._handler && self._handler.bind(self);\n\n        return typeof handler === 'function' ? handler(event, hint) : event;\n      }\n\n      return event;\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LinkedErrors.prototype._handler = function (event, hint) {\n    var _this = this;\n\n    if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n      return SyncPromise.resolve(event);\n    }\n\n    return new SyncPromise(function (resolve) {\n      _this._walkErrorTree(hint.originalException, _this._key).then(function (linkedErrors) {\n        if (event && event.exception && event.exception.values) {\n          event.exception.values = __spread(linkedErrors, event.exception.values);\n        }\n\n        resolve(event);\n      }).then(null, function () {\n        resolve(event);\n      });\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n    var _this = this;\n\n    if (stack === void 0) {\n      stack = [];\n    }\n\n    if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n      return SyncPromise.resolve(stack);\n    }\n\n    return new SyncPromise(function (resolve, reject) {\n      getExceptionFromError(error[key]).then(function (exception) {\n        _this._walkErrorTree(error[key], key, __spread([exception], stack)).then(resolve).then(null, function () {\n          reject();\n        });\n      }).then(null, function () {\n        reject();\n      });\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LinkedErrors.id = 'LinkedErrors';\n  return LinkedErrors;\n}();\n\nexport { LinkedErrors };","map":{"version":3,"mappings":"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","names":["addGlobalEventProcessor","getCurrentHub","isInstanceOf","SyncPromise","getExceptionFromError","DEFAULT_KEY","DEFAULT_LIMIT","options","LinkedErrors","id","_key","key","_limit","limit","event","hint","self","getIntegration","handler","_handler","bind","exception","values","originalException","Error","resolve","_this","_walkErrorTree","then","linkedErrors","__spread","error","stack","length","reject"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\node\\src\\integrations\\linkederrors.ts"],"sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration } from '@sentry/types';\nimport { isInstanceOf, SyncPromise } from '@sentry/utils';\n\nimport { getExceptionFromError } from '../parsers';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        const handler = self._handler && self._handler.bind(self);\n        return typeof handler === 'function' ? handler(event, hint) : event;\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _handler(event: Event, hint?: EventHint): PromiseLike<Event> {\n    if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n      return SyncPromise.resolve(event);\n    }\n\n    return new SyncPromise<Event>(resolve => {\n      this._walkErrorTree(hint.originalException as Error, this._key)\n        .then((linkedErrors: Exception[]) => {\n          if (event && event.exception && event.exception.values) {\n            event.exception.values = [...linkedErrors, ...event.exception.values];\n          }\n          resolve(event);\n        })\n        .then(null, () => {\n          resolve(event);\n        });\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _walkErrorTree(error: ExtendedError, key: string, stack: Exception[] = []): PromiseLike<Exception[]> {\n    if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n      return SyncPromise.resolve(stack);\n    }\n    return new SyncPromise<Exception[]>((resolve, reject) => {\n      getExceptionFromError(error[key])\n        .then((exception: Exception) => {\n          this._walkErrorTree(error[key], key, [exception, ...stack])\n            .then(resolve)\n            .then(null, () => {\n              reject();\n            });\n        })\n        .then(null, () => {\n          reject();\n        });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}