{"ast":null,"code":"/**\n * stack-trace - Parses node.js stack traces\n *\n * This was originally forked to fix this issue:\n * https://github.com/felixge/node-stack-trace/issues/31\n *\n * Mar 19,2019 - #4fd379e\n *\n * https://github.com/felixge/node-stack-trace/\n * @license MIT\n */\n\n/** Extracts StackFrames from the Error */\nexport function parse(err) {\n  if (!err.stack) {\n    return [];\n  }\n\n  var lines = err.stack.split('\\n').slice(1);\n  return lines.map(function (line) {\n    if (line.match(/^\\s*[-]{4,}$/)) {\n      return {\n        columnNumber: null,\n        fileName: line,\n        functionName: null,\n        lineNumber: null,\n        methodName: null,\n        native: null,\n        typeName: null\n      };\n    }\n\n    var lineMatch = line.match(/at (?:(.+?)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/);\n\n    if (!lineMatch) {\n      return undefined;\n    }\n\n    var object = null;\n    var method = null;\n    var functionName = null;\n    var typeName = null;\n    var methodName = null;\n    var isNative = lineMatch[5] === 'native';\n\n    if (lineMatch[1]) {\n      functionName = lineMatch[1];\n      var methodStart = functionName.lastIndexOf('.');\n\n      if (functionName[methodStart - 1] === '.') {\n        // eslint-disable-next-line no-plusplus\n        methodStart--;\n      }\n\n      if (methodStart > 0) {\n        object = functionName.substr(0, methodStart);\n        method = functionName.substr(methodStart + 1);\n        var objectEnd = object.indexOf('.Module');\n\n        if (objectEnd > 0) {\n          functionName = functionName.substr(objectEnd + 1);\n          object = object.substr(0, objectEnd);\n        }\n      }\n\n      typeName = null;\n    }\n\n    if (method) {\n      typeName = object;\n      methodName = method;\n    }\n\n    if (method === '<anonymous>') {\n      methodName = null;\n      functionName = null;\n    }\n\n    var properties = {\n      columnNumber: parseInt(lineMatch[4], 10) || null,\n      fileName: lineMatch[2] || null,\n      functionName: functionName,\n      lineNumber: parseInt(lineMatch[3], 10) || null,\n      methodName: methodName,\n      native: isNative,\n      typeName: typeName\n    };\n    return properties;\n  }).filter(function (callSite) {\n    return !!callSite;\n  });\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;AAuBA;AACA,OAAM,SAAUA,KAAV,CAAgBC,GAAhB,EAA0B;EAC9B,IAAI,CAACA,GAAG,CAACC,KAAT,EAAgB;IACd,OAAO,EAAP;EACD;;EAED,IAAMC,KAAK,GAAGF,GAAG,CAACC,KAAJ,CAAUE,KAAV,CAAgB,IAAhB,EAAsBC,KAAtB,CAA4B,CAA5B,CAAd;EAEA,OAAOF,KAAK,CACTG,GADI,CACA,gBAAI;IACP,IAAIC,IAAI,CAACC,KAAL,CAAW,cAAX,CAAJ,EAAgC;MAC9B,OAAO;QACLC,YAAY,EAAE,IADT;QAELC,QAAQ,EAAEH,IAFL;QAGLI,YAAY,EAAE,IAHT;QAILC,UAAU,EAAE,IAJP;QAKLC,UAAU,EAAE,IALP;QAMLC,MAAM,EAAE,IANH;QAOLC,QAAQ,EAAE;MAPL,CAAP;IASD;;IAED,IAAMC,SAAS,GAAGT,IAAI,CAACC,KAAL,CAAW,yDAAX,CAAlB;;IACA,IAAI,CAACQ,SAAL,EAAgB;MACd,OAAOC,SAAP;IACD;;IAED,IAAIC,MAAM,GAAG,IAAb;IACA,IAAIC,MAAM,GAAG,IAAb;IACA,IAAIR,YAAY,GAAG,IAAnB;IACA,IAAII,QAAQ,GAAG,IAAf;IACA,IAAIF,UAAU,GAAG,IAAjB;IACA,IAAMO,QAAQ,GAAGJ,SAAS,CAAC,CAAD,CAAT,KAAiB,QAAlC;;IAEA,IAAIA,SAAS,CAAC,CAAD,CAAb,EAAkB;MAChBL,YAAY,GAAGK,SAAS,CAAC,CAAD,CAAxB;MACA,IAAIK,WAAW,GAAGV,YAAY,CAACW,WAAb,CAAyB,GAAzB,CAAlB;;MACA,IAAIX,YAAY,CAACU,WAAW,GAAG,CAAf,CAAZ,KAAkC,GAAtC,EAA2C;QACzC;QACAA,WAAW;MACZ;;MACD,IAAIA,WAAW,GAAG,CAAlB,EAAqB;QACnBH,MAAM,GAAGP,YAAY,CAACY,MAAb,CAAoB,CAApB,EAAuBF,WAAvB,CAAT;QACAF,MAAM,GAAGR,YAAY,CAACY,MAAb,CAAoBF,WAAW,GAAG,CAAlC,CAAT;QACA,IAAMG,SAAS,GAAGN,MAAM,CAACO,OAAP,CAAe,SAAf,CAAlB;;QACA,IAAID,SAAS,GAAG,CAAhB,EAAmB;UACjBb,YAAY,GAAGA,YAAY,CAACY,MAAb,CAAoBC,SAAS,GAAG,CAAhC,CAAf;UACAN,MAAM,GAAGA,MAAM,CAACK,MAAP,CAAc,CAAd,EAAiBC,SAAjB,CAAT;QACD;MACF;;MACDT,QAAQ,GAAG,IAAX;IACD;;IAED,IAAII,MAAJ,EAAY;MACVJ,QAAQ,GAAGG,MAAX;MACAL,UAAU,GAAGM,MAAb;IACD;;IAED,IAAIA,MAAM,KAAK,aAAf,EAA8B;MAC5BN,UAAU,GAAG,IAAb;MACAF,YAAY,GAAG,IAAf;IACD;;IAED,IAAMe,UAAU,GAAG;MACjBjB,YAAY,EAAEkB,QAAQ,CAACX,SAAS,CAAC,CAAD,CAAV,EAAe,EAAf,CAAR,IAA8B,IAD3B;MAEjBN,QAAQ,EAAEM,SAAS,CAAC,CAAD,CAAT,IAAgB,IAFT;MAGjBL,YAAY,cAHK;MAIjBC,UAAU,EAAEe,QAAQ,CAACX,SAAS,CAAC,CAAD,CAAV,EAAe,EAAf,CAAR,IAA8B,IAJzB;MAKjBH,UAAU,YALO;MAMjBC,MAAM,EAAEM,QANS;MAOjBL,QAAQ;IAPS,CAAnB;IAUA,OAAOW,UAAP;EACD,CAlEI,EAmEJE,MAnEI,CAmEG,oBAAQ;IAAI,QAAC,CAACC,QAAF;EAAU,CAnEzB,CAAP;AAoED","names":["parse","err","stack","lines","split","slice","map","line","match","columnNumber","fileName","functionName","lineNumber","methodName","native","typeName","lineMatch","undefined","object","method","isNative","methodStart","lastIndexOf","substr","objectEnd","indexOf","properties","parseInt","filter","callSite"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\node\\src\\stacktrace.ts"],"sourcesContent":["/**\n * stack-trace - Parses node.js stack traces\n *\n * This was originally forked to fix this issue:\n * https://github.com/felixge/node-stack-trace/issues/31\n *\n * Mar 19,2019 - #4fd379e\n *\n * https://github.com/felixge/node-stack-trace/\n * @license MIT\n */\n\n/** Decoded StackFrame */\nexport interface StackFrame {\n  fileName: string;\n  lineNumber: number;\n  functionName: string;\n  typeName: string;\n  methodName: string;\n  native: boolean;\n  columnNumber: number;\n}\n\n/** Extracts StackFrames from the Error */\nexport function parse(err: Error): StackFrame[] {\n  if (!err.stack) {\n    return [];\n  }\n\n  const lines = err.stack.split('\\n').slice(1);\n\n  return lines\n    .map(line => {\n      if (line.match(/^\\s*[-]{4,}$/)) {\n        return {\n          columnNumber: null,\n          fileName: line,\n          functionName: null,\n          lineNumber: null,\n          methodName: null,\n          native: null,\n          typeName: null,\n        };\n      }\n\n      const lineMatch = line.match(/at (?:(.+?)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/);\n      if (!lineMatch) {\n        return undefined;\n      }\n\n      let object = null;\n      let method = null;\n      let functionName = null;\n      let typeName = null;\n      let methodName = null;\n      const isNative = lineMatch[5] === 'native';\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          // eslint-disable-next-line no-plusplus\n          methodStart--;\n        }\n        if (methodStart > 0) {\n          object = functionName.substr(0, methodStart);\n          method = functionName.substr(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.substr(objectEnd + 1);\n            object = object.substr(0, objectEnd);\n          }\n        }\n        typeName = null;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = null;\n        functionName = null;\n      }\n\n      const properties = {\n        columnNumber: parseInt(lineMatch[4], 10) || null,\n        fileName: lineMatch[2] || null,\n        functionName,\n        lineNumber: parseInt(lineMatch[3], 10) || null,\n        methodName,\n        native: isNative,\n        typeName,\n      };\n\n      return properties;\n    })\n    .filter(callSite => !!callSite) as StackFrame[];\n}\n"]},"metadata":{},"sourceType":"module"}