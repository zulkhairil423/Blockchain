{"ast":null,"code":"/** The status of an Span. */\n// eslint-disable-next-line import/export\nexport var SpanStatus;\n\n(function (SpanStatus) {\n  /** The operation completed successfully. */\n  SpanStatus[\"Ok\"] = \"ok\";\n  /** Deadline expired before operation could complete. */\n\n  SpanStatus[\"DeadlineExceeded\"] = \"deadline_exceeded\";\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n\n  SpanStatus[\"Unauthenticated\"] = \"unauthenticated\";\n  /** 403 Forbidden */\n\n  SpanStatus[\"PermissionDenied\"] = \"permission_denied\";\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n\n  SpanStatus[\"NotFound\"] = \"not_found\";\n  /** 429 Too Many Requests */\n\n  SpanStatus[\"ResourceExhausted\"] = \"resource_exhausted\";\n  /** Client specified an invalid argument. 4xx. */\n\n  SpanStatus[\"InvalidArgument\"] = \"invalid_argument\";\n  /** 501 Not Implemented */\n\n  SpanStatus[\"Unimplemented\"] = \"unimplemented\";\n  /** 503 Service Unavailable */\n\n  SpanStatus[\"Unavailable\"] = \"unavailable\";\n  /** Other/generic 5xx. */\n\n  SpanStatus[\"InternalError\"] = \"internal_error\";\n  /** Unknown. Any non-standard HTTP status code. */\n\n  SpanStatus[\"UnknownError\"] = \"unknown_error\";\n  /** The operation was cancelled (typically by the user). */\n\n  SpanStatus[\"Cancelled\"] = \"cancelled\";\n  /** Already exists (409) */\n\n  SpanStatus[\"AlreadyExists\"] = \"already_exists\";\n  /** Operation was rejected because the system is not in a state required for the operation's */\n\n  SpanStatus[\"FailedPrecondition\"] = \"failed_precondition\";\n  /** The operation was aborted, typically due to a concurrency issue. */\n\n  SpanStatus[\"Aborted\"] = \"aborted\";\n  /** Operation was attempted past the valid range. */\n\n  SpanStatus[\"OutOfRange\"] = \"out_of_range\";\n  /** Unrecoverable data loss or corruption */\n\n  SpanStatus[\"DataLoss\"] = \"data_loss\";\n})(SpanStatus || (SpanStatus = {})); // eslint-disable-next-line @typescript-eslint/no-namespace, import/export\n\n\n(function (SpanStatus) {\n  /**\n   * Converts a HTTP status code into a {@link SpanStatus}.\n   *\n   * @param httpStatus The HTTP response status code.\n   * @returns The span status or {@link SpanStatus.UnknownError}.\n   */\n  function fromHttpCode(httpStatus) {\n    if (httpStatus < 400) {\n      return SpanStatus.Ok;\n    }\n\n    if (httpStatus >= 400 && httpStatus < 500) {\n      switch (httpStatus) {\n        case 401:\n          return SpanStatus.Unauthenticated;\n\n        case 403:\n          return SpanStatus.PermissionDenied;\n\n        case 404:\n          return SpanStatus.NotFound;\n\n        case 409:\n          return SpanStatus.AlreadyExists;\n\n        case 413:\n          return SpanStatus.FailedPrecondition;\n\n        case 429:\n          return SpanStatus.ResourceExhausted;\n\n        default:\n          return SpanStatus.InvalidArgument;\n      }\n    }\n\n    if (httpStatus >= 500 && httpStatus < 600) {\n      switch (httpStatus) {\n        case 501:\n          return SpanStatus.Unimplemented;\n\n        case 503:\n          return SpanStatus.Unavailable;\n\n        case 504:\n          return SpanStatus.DeadlineExceeded;\n\n        default:\n          return SpanStatus.InternalError;\n      }\n    }\n\n    return SpanStatus.UnknownError;\n  }\n\n  SpanStatus.fromHttpCode = fromHttpCode;\n})(SpanStatus || (SpanStatus = {}));","map":{"version":3,"mappings":"AAAA;AACA;AACA,WAAYA,UAAZ;;AAAA,WAAYA,UAAZ,EAAsB;EACpB;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;EACA;;EACAA;AACD,CAnCD,EAAYA,UAAU,KAAVA,UAAU,MAAtB,E,CAqCA;;;AACA,WAAiBA,UAAjB,EAA2B;EACzB;;;;;;EAMA,SAAgBC,YAAhB,CAA6BC,UAA7B,EAA+C;IAC7C,IAAIA,UAAU,GAAG,GAAjB,EAAsB;MACpB,OAAOF,UAAU,CAACG,EAAlB;IACD;;IAED,IAAID,UAAU,IAAI,GAAd,IAAqBA,UAAU,GAAG,GAAtC,EAA2C;MACzC,QAAQA,UAAR;QACE,KAAK,GAAL;UACE,OAAOF,UAAU,CAACI,eAAlB;;QACF,KAAK,GAAL;UACE,OAAOJ,UAAU,CAACK,gBAAlB;;QACF,KAAK,GAAL;UACE,OAAOL,UAAU,CAACM,QAAlB;;QACF,KAAK,GAAL;UACE,OAAON,UAAU,CAACO,aAAlB;;QACF,KAAK,GAAL;UACE,OAAOP,UAAU,CAACQ,kBAAlB;;QACF,KAAK,GAAL;UACE,OAAOR,UAAU,CAACS,iBAAlB;;QACF;UACE,OAAOT,UAAU,CAACU,eAAlB;MAdJ;IAgBD;;IAED,IAAIR,UAAU,IAAI,GAAd,IAAqBA,UAAU,GAAG,GAAtC,EAA2C;MACzC,QAAQA,UAAR;QACE,KAAK,GAAL;UACE,OAAOF,UAAU,CAACW,aAAlB;;QACF,KAAK,GAAL;UACE,OAAOX,UAAU,CAACY,WAAlB;;QACF,KAAK,GAAL;UACE,OAAOZ,UAAU,CAACa,gBAAlB;;QACF;UACE,OAAOb,UAAU,CAACc,aAAlB;MARJ;IAUD;;IAED,OAAOd,UAAU,CAACe,YAAlB;EACD;;EAtCef,0BAAYC,YAAZ;AAuCjB,CA9CD,EAAiBD,UAAU,KAAVA,UAAU,MAA3B","names":["SpanStatus","fromHttpCode","httpStatus","Ok","Unauthenticated","PermissionDenied","NotFound","AlreadyExists","FailedPrecondition","ResourceExhausted","InvalidArgument","Unimplemented","Unavailable","DeadlineExceeded","InternalError","UnknownError"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\tracing\\src\\spanstatus.ts"],"sourcesContent":["/** The status of an Span. */\n// eslint-disable-next-line import/export\nexport enum SpanStatus {\n  /** The operation completed successfully. */\n  Ok = 'ok',\n  /** Deadline expired before operation could complete. */\n  DeadlineExceeded = 'deadline_exceeded',\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  Unauthenticated = 'unauthenticated',\n  /** 403 Forbidden */\n  PermissionDenied = 'permission_denied',\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  NotFound = 'not_found',\n  /** 429 Too Many Requests */\n  ResourceExhausted = 'resource_exhausted',\n  /** Client specified an invalid argument. 4xx. */\n  InvalidArgument = 'invalid_argument',\n  /** 501 Not Implemented */\n  Unimplemented = 'unimplemented',\n  /** 503 Service Unavailable */\n  Unavailable = 'unavailable',\n  /** Other/generic 5xx. */\n  InternalError = 'internal_error',\n  /** Unknown. Any non-standard HTTP status code. */\n  UnknownError = 'unknown_error',\n  /** The operation was cancelled (typically by the user). */\n  Cancelled = 'cancelled',\n  /** Already exists (409) */\n  AlreadyExists = 'already_exists',\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  FailedPrecondition = 'failed_precondition',\n  /** The operation was aborted, typically due to a concurrency issue. */\n  Aborted = 'aborted',\n  /** Operation was attempted past the valid range. */\n  OutOfRange = 'out_of_range',\n  /** Unrecoverable data loss or corruption */\n  DataLoss = 'data_loss',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace SpanStatus {\n  /**\n   * Converts a HTTP status code into a {@link SpanStatus}.\n   *\n   * @param httpStatus The HTTP response status code.\n   * @returns The span status or {@link SpanStatus.UnknownError}.\n   */\n  export function fromHttpCode(httpStatus: number): SpanStatus {\n    if (httpStatus < 400) {\n      return SpanStatus.Ok;\n    }\n\n    if (httpStatus >= 400 && httpStatus < 500) {\n      switch (httpStatus) {\n        case 401:\n          return SpanStatus.Unauthenticated;\n        case 403:\n          return SpanStatus.PermissionDenied;\n        case 404:\n          return SpanStatus.NotFound;\n        case 409:\n          return SpanStatus.AlreadyExists;\n        case 413:\n          return SpanStatus.FailedPrecondition;\n        case 429:\n          return SpanStatus.ResourceExhausted;\n        default:\n          return SpanStatus.InvalidArgument;\n      }\n    }\n\n    if (httpStatus >= 500 && httpStatus < 600) {\n      switch (httpStatus) {\n        case 501:\n          return SpanStatus.Unimplemented;\n        case 503:\n          return SpanStatus.Unavailable;\n        case 504:\n          return SpanStatus.DeadlineExceeded;\n        default:\n          return SpanStatus.InternalError;\n      }\n    }\n\n    return SpanStatus.UnknownError;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}