{"ast":null,"code":"'use strict';\n/**\n * @module Min\n */\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\nvar inherits = require('../utils').inherits;\n\nvar constants = require('../runner').constants;\n\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n/**\n * Expose `Min`.\n */\n\nexports = module.exports = Min;\n/**\n * Constructs a new `Min` reporter instance.\n *\n * @description\n * This minimal test reporter is best used with '--watch'.\n *\n * @public\n * @class\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\n\nfunction Min(runner, options) {\n  Base.call(this, runner, options);\n  runner.on(EVENT_RUN_BEGIN, function () {\n    // clear screen\n    process.stdout.write('\\u001b[2J'); // set cursor position\n\n    process.stdout.write('\\u001b[1;3H');\n  });\n  runner.once(EVENT_RUN_END, this.epilogue.bind(this));\n}\n/**\n * Inherit from `Base.prototype`.\n */\n\n\ninherits(Min, Base);\nMin.description = 'essentially just a summary';","map":{"version":3,"names":["Base","require","inherits","constants","EVENT_RUN_END","EVENT_RUN_BEGIN","exports","module","Min","runner","options","call","on","process","stdout","write","once","epilogue","bind","description"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/mocha/lib/reporters/min.js"],"sourcesContent":["'use strict';\n/**\n * @module Min\n */\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar inherits = require('../utils').inherits;\nvar constants = require('../runner').constants;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n\n/**\n * Expose `Min`.\n */\n\nexports = module.exports = Min;\n\n/**\n * Constructs a new `Min` reporter instance.\n *\n * @description\n * This minimal test reporter is best used with '--watch'.\n *\n * @public\n * @class\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction Min(runner, options) {\n  Base.call(this, runner, options);\n\n  runner.on(EVENT_RUN_BEGIN, function () {\n    // clear screen\n    process.stdout.write('\\u001b[2J');\n    // set cursor position\n    process.stdout.write('\\u001b[1;3H');\n  });\n\n  runner.once(EVENT_RUN_END, this.epilogue.bind(this));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Min, Base);\n\nMin.description = 'essentially just a summary';\n"],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAP,CAAoBC,QAAnC;;AACA,IAAIC,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAP,CAAqBE,SAArC;;AACA,IAAIC,aAAa,GAAGD,SAAS,CAACC,aAA9B;AACA,IAAIC,eAAe,GAAGF,SAAS,CAACE,eAAhC;AAEA;AACA;AACA;;AAEAC,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiBE,GAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,GAAT,CAAaC,MAAb,EAAqBC,OAArB,EAA8B;EAC5BV,IAAI,CAACW,IAAL,CAAU,IAAV,EAAgBF,MAAhB,EAAwBC,OAAxB;EAEAD,MAAM,CAACG,EAAP,CAAUP,eAAV,EAA2B,YAAY;IACrC;IACAQ,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,WAArB,EAFqC,CAGrC;;IACAF,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,aAArB;EACD,CALD;EAOAN,MAAM,CAACO,IAAP,CAAYZ,aAAZ,EAA2B,KAAKa,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAA3B;AACD;AAED;AACA;AACA;;;AACAhB,QAAQ,CAACM,GAAD,EAAMR,IAAN,CAAR;AAEAQ,GAAG,CAACW,WAAJ,GAAkB,4BAAlB"},"metadata":{},"sourceType":"script"}