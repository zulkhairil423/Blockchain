{"ast":null,"code":"import { isNodeEnv } from './node';\nimport { snipLine } from './string';\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\n\nexport function getGlobalObject() {\n  return isNodeEnv() ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : fallbackGlobalObject;\n}\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\n\nexport function uuid4() {\n  var global = getGlobalObject();\n  var crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr); // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n\n    arr[3] = arr[3] & 0xfff | 0x4000; // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n\n    arr[4] = arr[4] & 0x3fff | 0x8000;\n\n    var pad = function (num) {\n      var v = num.toString(16);\n\n      while (v.length < 4) {\n        v = \"0\" + v;\n      }\n\n      return v;\n    };\n\n    return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\n  } // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n\n\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    // eslint-disable-next-line no-bitwise\n    var r = Math.random() * 16 | 0; // eslint-disable-next-line no-bitwise\n\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\n\nexport function parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  } // coerce to undefined values to empty string so we don't get 'undefined'\n\n\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment\n  };\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\n\nexport function getEventDescription(event) {\n  if (event.message) {\n    return event.message;\n  }\n\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    var exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return exception.type + \": \" + exception.value;\n    }\n\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n\n  return event.event_id || '<unknown>';\n}\n/** JSDoc */\n\nexport function consoleSandbox(callback) {\n  var global = getGlobalObject();\n  var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  } // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n\n  var originalConsole = global.console;\n  var wrappedLevels = {}; // Restore all wrapped console methods\n\n  levels.forEach(function (level) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (level in global.console && originalConsole[level].__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level];\n      originalConsole[level] = originalConsole[level].__sentry_original__;\n    }\n  }); // Perform callback manipulations\n\n  var result = callback(); // Revert restoration to wrapped state\n\n  Object.keys(wrappedLevels).forEach(function (level) {\n    originalConsole[level] = wrappedLevels[level];\n  });\n  return result;\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\n\nexport function addExceptionTypeValue(event, value, type) {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\n\nexport function addExceptionMechanism(event, mechanism) {\n  if (mechanism === void 0) {\n    mechanism = {};\n  } // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n\n\n  try {\n    // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values[0].mechanism = event.exception.values[0].mechanism || {};\n    Object.keys(mechanism).forEach(function (key) {\n      // @ts-ignore Mechanism has no index signature\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {// no-empty\n  }\n}\n/**\n * A safe form of location.href\n */\n\nexport function getLocationHref() {\n  try {\n    return document.location.href;\n  } catch (oO) {\n    return '';\n  }\n} // https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\n\nvar SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\n\nexport function parseSemver(input) {\n  var match = input.match(SEMVER_REGEXP) || [];\n  var major = parseInt(match[1], 10);\n  var minor = parseInt(match[2], 10);\n  var patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4]\n  };\n}\nvar defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\n\nexport function parseRetryAfterHeader(now, header) {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  var headerDelay = parseInt(\"\" + header, 10);\n\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  var headerDate = Date.parse(\"\" + header);\n\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\n\nexport function addContextToFrame(lines, frame, linesOfContext) {\n  if (linesOfContext === void 0) {\n    linesOfContext = 5;\n  }\n\n  var lineno = frame.lineno || 0;\n  var maxLines = lines.length;\n  var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n  frame.pre_context = lines.slice(Math.max(0, sourceLine - linesOfContext), sourceLine).map(function (line) {\n    return snipLine(line, 0);\n  });\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n  frame.post_context = lines.slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext).map(function (line) {\n    return snipLine(line, 0);\n  });\n}\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\n\nexport function stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}","map":{"version":3,"mappings":"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","names":["isNodeEnv","snipLine","fallbackGlobalObject","getGlobalObject","global","window","self","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","toString","length","replace","r","Math","random","c","parseUrl","url","match","query","fragment","host","path","protocol","relative","getEventDescription","event","message","exception","values","type","value","event_id","consoleSandbox","callback","levels","originalConsole","console","wrappedLevels","forEach","level","__sentry_original__","result","Object","keys","addExceptionTypeValue","addExceptionMechanism","mechanism","key","_oO","getLocationHref","document","location","href","oO","SEMVER_REGEXP","parseSemver","input","major","parseInt","minor","patch","buildmetadata","isNaN","undefined","prerelease","defaultRetryAfter","parseRetryAfterHeader","now","header","headerDelay","headerDate","Date","parse","addContextToFrame","lines","frame","linesOfContext","lineno","maxLines","sourceLine","max","min","pre_context","slice","map","line","context_line","colno","post_context","stripUrlQueryAndFragment","urlPath","split"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\utils\\src\\misc.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Integration, StackFrame, WrappedFunction } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\nimport { snipLine } from './string';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const originalConsole = (global as any).console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (level in (global as any).console && (originalConsole[level] as WrappedFunction).__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level] as WrappedFunction;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(\n  event: Event,\n  mechanism: {\n    [key: string]: any;\n  } = {},\n): void {\n  // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n  try {\n    // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values![0].mechanism = event.exception!.values![0].mechanism || {};\n    Object.keys(mechanism).forEach(key => {\n      // @ts-ignore Mechanism has no index signature\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception!.values![0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {\n    // no-empty\n  }\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\nconst defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now: number, header?: string | number | null): number {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n"]},"metadata":{},"sourceType":"module"}