{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar isUnloading = false;\nvar listenersAdded = false;\n\nvar onPageHide = function (event) {\n  isUnloading = !event.persisted;\n};\n\nvar addListeners = function () {\n  addEventListener('pagehide', onPageHide); // `beforeunload` is needed to fix this bug:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=987409\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n  addEventListener('beforeunload', function () {});\n};\n\nexport var onHidden = function (cb, once) {\n  if (once === void 0) {\n    once = false;\n  }\n\n  if (!listenersAdded) {\n    addListeners();\n    listenersAdded = true;\n  }\n\n  addEventListener('visibilitychange', function (_a) {\n    var timeStamp = _a.timeStamp;\n\n    if (document.visibilityState === 'hidden') {\n      cb({\n        timeStamp: timeStamp,\n        isUnloading: isUnloading\n      });\n    }\n  }, {\n    capture: true,\n    once: once\n  });\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAqBA,IAAIA,WAAW,GAAG,KAAlB;AACA,IAAIC,cAAc,GAAG,KAArB;;AAEA,IAAMC,UAAU,GAAG,UAACC,KAAD,EAA2B;EAC5CH,WAAW,GAAG,CAACG,KAAK,CAACC,SAArB;AACD,CAFD;;AAIA,IAAMC,YAAY,GAAG;EACnBC,gBAAgB,CAAC,UAAD,EAAaJ,UAAb,CAAhB,CADmB,CAGnB;EACA;EACA;;EACAI,gBAAgB,CAAC,cAAD,EAAiB,aAAQ,CAAzB,CAAhB;AACD,CAPD;;AASA,OAAO,IAAMC,QAAQ,GAAG,UAACC,EAAD,EAAuBC,IAAvB,EAAmC;EAAZ;IAAAA;EAAY;;EACzD,IAAI,CAACR,cAAL,EAAqB;IACnBI,YAAY;IACZJ,cAAc,GAAG,IAAjB;EACD;;EAEDK,gBAAgB,CACd,kBADc,EAEd,UAACI,EAAD,EAAc;QAAXC;;IACD,IAAIC,QAAQ,CAACC,eAAT,KAA6B,QAAjC,EAA2C;MACzCL,EAAE,CAAC;QAAEG,SAAS,WAAX;QAAaX,WAAW;MAAxB,CAAD,CAAF;IACD;EACF,CANa,EAOd;IAAEc,OAAO,EAAE,IAAX;IAAiBL,IAAI;EAArB,CAPc,CAAhB;AASD,CAfM","names":["isUnloading","listenersAdded","onPageHide","event","persisted","addListeners","addEventListener","onHidden","cb","once","_a","timeStamp","document","visibilityState","capture"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\tracing\\src\\browser\\web-vitals\\lib\\onHidden.ts"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface OnHiddenCallback {\n  // TODO(philipwalton): add `isPersisted` if needed for bfcache.\n  ({ timeStamp, isUnloading }: { timeStamp: number; isUnloading: boolean }): void;\n}\n\nlet isUnloading = false;\nlet listenersAdded = false;\n\nconst onPageHide = (event: PageTransitionEvent): void => {\n  isUnloading = !event.persisted;\n};\n\nconst addListeners = (): void => {\n  addEventListener('pagehide', onPageHide);\n\n  // `beforeunload` is needed to fix this bug:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=987409\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  addEventListener('beforeunload', () => {});\n};\n\nexport const onHidden = (cb: OnHiddenCallback, once = false): void => {\n  if (!listenersAdded) {\n    addListeners();\n    listenersAdded = true;\n  }\n\n  addEventListener(\n    'visibilitychange',\n    ({ timeStamp }) => {\n      if (document.visibilityState === 'hidden') {\n        cb({ timeStamp, isUnloading });\n      }\n    },\n    { capture: true, once },\n  );\n};\n"]},"metadata":{},"sourceType":"module"}