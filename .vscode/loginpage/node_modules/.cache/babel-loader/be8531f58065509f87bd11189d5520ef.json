{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RLP_EMPTY_STRING = exports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.SECP256K1_ORDER_DIV_2 = exports.SECP256K1_ORDER = exports.MAX_INTEGER_BIGINT = exports.MAX_INTEGER = exports.MAX_UINT64 = void 0;\n\nconst buffer_1 = require(\"buffer\");\n/**\n * 2^64-1\n */\n\n\nexports.MAX_UINT64 = BigInt('0xffffffffffffffff');\n/**\n * The max integer that the evm can handle (2^256-1)\n */\n\nexports.MAX_INTEGER = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n */\n\nexports.MAX_INTEGER_BIGINT = BigInt(2) ** BigInt(256) - BigInt(1);\nexports.SECP256K1_ORDER = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nexports.SECP256K1_ORDER_DIV_2 = exports.SECP256K1_ORDER / BigInt(2);\n/**\n * 2^256\n */\n\nexports.TWO_POW256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\n/**\n * Keccak-256 hash of null\n */\n\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\n\nexports.KECCAK256_NULL = buffer_1.Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\n\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\n\nexports.KECCAK256_RLP_ARRAY = buffer_1.Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\n\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\n\nexports.KECCAK256_RLP = buffer_1.Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n/**\n *  RLP encoded empty string\n */\n\nexports.RLP_EMPTY_STRING = buffer_1.Buffer.from([0x80]);","map":{"version":3,"mappings":";;;;;;;AAAA;AAEA;;;;;AAGaA,qBAAaC,MAAM,CAAC,oBAAD,CAAnB;AAEb;;;;AAGaD,sBAAcC,MAAM,CAC/B,oEAD+B,CAApB;AAIb;;;;AAGaD,6BAAqBC,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,GAAD,CAAnB,GAA2BA,MAAM,CAAC,CAAD,CAAtD;AAEAD,0BAAkBC,MAAM,CACnC,oEADmC,CAAxB;AAGAD,gCAAwBA,0BAAkBC,MAAM,CAAC,CAAD,CAAhD;AAEb;;;;AAGaD,qBAAaC,MAAM,CAC9B,qEAD8B,CAAnB;AAIb;;;;AAGaD,2BAAmB,kEAAnB;AAEb;;;;AAGaA,yBAAiBE,gBAAOC,IAAP,CAAYH,wBAAZ,EAA8B,KAA9B,CAAjB;AAEb;;;;AAGaA,gCACX,kEADW;AAGb;;;;AAGaA,8BAAsBE,gBAAOC,IAAP,CAAYH,6BAAZ,EAAmC,KAAnC,CAAtB;AAEb;;;;AAGaA,0BAAkB,kEAAlB;AAEb;;;;AAGaA,wBAAgBE,gBAAOC,IAAP,CAAYH,uBAAZ,EAA6B,KAA7B,CAAhB;AAEb;;;;AAGaA,2BAAmBE,gBAAOC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAAnB","names":["exports","BigInt","buffer_1","from"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@nomicfoundation\\ethereumjs-util\\src\\constants.ts"],"sourcesContent":["import { Buffer } from 'buffer'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff')\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt(\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n)\n\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n */\nexport const MAX_INTEGER_BIGINT = BigInt(2) ** BigInt(256) - BigInt(1)\n\nexport const SECP256K1_ORDER = BigInt(\n  '0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'\n)\nexport const SECP256K1_ORDER_DIV_2 = SECP256K1_ORDER / BigInt(2)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = BigInt(\n  '0x10000000000000000000000000000000000000000000000000000000000000000'\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n\n/**\n *  RLP encoded empty string\n */\nexport const RLP_EMPTY_STRING = Buffer.from([0x80])\n"]},"metadata":{},"sourceType":"script"}