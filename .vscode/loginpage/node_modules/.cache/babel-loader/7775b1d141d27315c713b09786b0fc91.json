{"ast":null,"code":"export var setPrototypeOf = Object.setPrototypeOf || ({\n  __proto__: []\n} instanceof Array ? setProtoOf : mixinProperties);\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nfunction setProtoOf(obj, proto) {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj;\n}\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction mixinProperties(obj, proto) {\n  for (var prop in proto) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!obj.hasOwnProperty(prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj;\n}","map":{"version":3,"mappings":"AAAA,OAAO,IAAMA,cAAc,GACzBC,MAAM,CAACD,cAAP,KAA0B;EAAEE,SAAS,EAAE;AAAb,aAA6BC,KAA7B,GAAqCC,UAArC,GAAkDC,eAA5E,CADK;AAGP;;;AAGA;;AACA,SAASD,UAAT,CAAoDE,GAApD,EAAkEC,KAAlE,EAA+E;EAC7E;EACAD,GAAG,CAACJ,SAAJ,GAAgBK,KAAhB;EACA,OAAOD,GAAP;AACD;AAED;;;AAGA;;;AACA,SAASD,eAAT,CAAyDC,GAAzD,EAAuEC,KAAvE,EAAoF;EAClF,KAAK,IAAMC,IAAX,IAAmBD,KAAnB,EAA0B;IACxB;IACA,IAAI,CAACD,GAAG,CAACG,cAAJ,CAAmBD,IAAnB,CAAL,EAA+B;MAC7B;MACAF,GAAG,CAACE,IAAD,CAAH,GAAYD,KAAK,CAACC,IAAD,CAAjB;IACD;EACF;;EAED,OAAOF,GAAP;AACD","names":["setPrototypeOf","Object","__proto__","Array","setProtoOf","mixinProperties","obj","proto","prop","hasOwnProperty"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\utils\\src\\polyfill.ts"],"sourcesContent":["export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!obj.hasOwnProperty(prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n"]},"metadata":{},"sourceType":"module"}