{"ast":null,"code":"'use strict';\n/**\n @module interfaces/common\n*/\n\nvar Suite = require('../suite');\n\nvar errors = require('../errors');\n\nvar createMissingArgumentError = errors.createMissingArgumentError;\nvar createUnsupportedError = errors.createUnsupportedError;\nvar createForbiddenExclusivityError = errors.createForbiddenExclusivityError;\n/**\n * Functions common to more than one interface.\n *\n * @private\n * @param {Suite[]} suites\n * @param {Context} context\n * @param {Mocha} mocha\n * @return {Object} An object containing common functions.\n */\n\nmodule.exports = function (suites, context, mocha) {\n  /**\n   * Check if the suite should be tested.\n   *\n   * @private\n   * @param {Suite} suite - suite to check\n   * @returns {boolean}\n   */\n  function shouldBeTested(suite) {\n    return !mocha.options.grep || mocha.options.grep && mocha.options.grep.test(suite.fullTitle()) && !mocha.options.invert;\n  }\n\n  return {\n    /**\n     * This is only present if flag --delay is passed into Mocha. It triggers\n     * root suite execution.\n     *\n     * @param {Suite} suite The root suite.\n     * @return {Function} A function which runs the root suite\n     */\n    runWithSuite: function runWithSuite(suite) {\n      return function run() {\n        suite.run();\n      };\n    },\n\n    /**\n     * Execute before running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    before: function (name, fn) {\n      suites[0].beforeAll(name, fn);\n    },\n\n    /**\n     * Execute after running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    after: function (name, fn) {\n      suites[0].afterAll(name, fn);\n    },\n\n    /**\n     * Execute before each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    beforeEach: function (name, fn) {\n      suites[0].beforeEach(name, fn);\n    },\n\n    /**\n     * Execute after each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    afterEach: function (name, fn) {\n      suites[0].afterEach(name, fn);\n    },\n    suite: {\n      /**\n       * Create an exclusive Suite; convenience function\n       * See docstring for create() below.\n       *\n       * @param {Object} opts\n       * @returns {Suite}\n       */\n      only: function only(opts) {\n        if (mocha.options.forbidOnly) {\n          throw createForbiddenExclusivityError(mocha);\n        }\n\n        opts.isOnly = true;\n        return this.create(opts);\n      },\n\n      /**\n       * Create a Suite, but skip it; convenience function\n       * See docstring for create() below.\n       *\n       * @param {Object} opts\n       * @returns {Suite}\n       */\n      skip: function skip(opts) {\n        opts.pending = true;\n        return this.create(opts);\n      },\n\n      /**\n       * Creates a suite.\n       *\n       * @param {Object} opts Options\n       * @param {string} opts.title Title of Suite\n       * @param {Function} [opts.fn] Suite Function (not always applicable)\n       * @param {boolean} [opts.pending] Is Suite pending?\n       * @param {string} [opts.file] Filepath where this Suite resides\n       * @param {boolean} [opts.isOnly] Is Suite exclusive?\n       * @returns {Suite}\n       */\n      create: function create(opts) {\n        var suite = Suite.create(suites[0], opts.title);\n        suite.pending = Boolean(opts.pending);\n        suite.file = opts.file;\n        suites.unshift(suite);\n\n        if (opts.isOnly) {\n          suite.markOnly();\n        }\n\n        if (suite.pending && mocha.options.forbidPending && shouldBeTested(suite)) {\n          throw createUnsupportedError('Pending test forbidden');\n        }\n\n        if (typeof opts.fn === 'function') {\n          opts.fn.call(suite);\n          suites.shift();\n        } else if (typeof opts.fn === 'undefined' && !suite.pending) {\n          throw createMissingArgumentError('Suite \"' + suite.fullTitle() + '\" was defined but no callback was supplied. ' + 'Supply a callback or explicitly skip the suite.', 'callback', 'function');\n        } else if (!opts.fn && suite.pending) {\n          suites.shift();\n        }\n\n        return suite;\n      }\n    },\n    test: {\n      /**\n       * Exclusive test-case.\n       *\n       * @param {Object} mocha\n       * @param {Function} test\n       * @returns {*}\n       */\n      only: function (mocha, test) {\n        if (mocha.options.forbidOnly) {\n          throw createForbiddenExclusivityError(mocha);\n        }\n\n        test.markOnly();\n        return test;\n      },\n\n      /**\n       * Pending test case.\n       *\n       * @param {string} title\n       */\n      skip: function (title) {\n        context.test(title);\n      }\n    }\n  };\n};","map":{"version":3,"names":["Suite","require","errors","createMissingArgumentError","createUnsupportedError","createForbiddenExclusivityError","module","exports","suites","context","mocha","shouldBeTested","suite","options","grep","test","fullTitle","invert","runWithSuite","run","before","name","fn","beforeAll","after","afterAll","beforeEach","afterEach","only","opts","forbidOnly","isOnly","create","skip","pending","title","Boolean","file","unshift","markOnly","forbidPending","call","shift"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/mocha/lib/interfaces/common.js"],"sourcesContent":["'use strict';\n\n/**\n @module interfaces/common\n*/\n\nvar Suite = require('../suite');\nvar errors = require('../errors');\nvar createMissingArgumentError = errors.createMissingArgumentError;\nvar createUnsupportedError = errors.createUnsupportedError;\nvar createForbiddenExclusivityError = errors.createForbiddenExclusivityError;\n\n/**\n * Functions common to more than one interface.\n *\n * @private\n * @param {Suite[]} suites\n * @param {Context} context\n * @param {Mocha} mocha\n * @return {Object} An object containing common functions.\n */\nmodule.exports = function (suites, context, mocha) {\n  /**\n   * Check if the suite should be tested.\n   *\n   * @private\n   * @param {Suite} suite - suite to check\n   * @returns {boolean}\n   */\n  function shouldBeTested(suite) {\n    return (\n      !mocha.options.grep ||\n      (mocha.options.grep &&\n        mocha.options.grep.test(suite.fullTitle()) &&\n        !mocha.options.invert)\n    );\n  }\n\n  return {\n    /**\n     * This is only present if flag --delay is passed into Mocha. It triggers\n     * root suite execution.\n     *\n     * @param {Suite} suite The root suite.\n     * @return {Function} A function which runs the root suite\n     */\n    runWithSuite: function runWithSuite(suite) {\n      return function run() {\n        suite.run();\n      };\n    },\n\n    /**\n     * Execute before running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    before: function (name, fn) {\n      suites[0].beforeAll(name, fn);\n    },\n\n    /**\n     * Execute after running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    after: function (name, fn) {\n      suites[0].afterAll(name, fn);\n    },\n\n    /**\n     * Execute before each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    beforeEach: function (name, fn) {\n      suites[0].beforeEach(name, fn);\n    },\n\n    /**\n     * Execute after each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    afterEach: function (name, fn) {\n      suites[0].afterEach(name, fn);\n    },\n\n    suite: {\n      /**\n       * Create an exclusive Suite; convenience function\n       * See docstring for create() below.\n       *\n       * @param {Object} opts\n       * @returns {Suite}\n       */\n      only: function only(opts) {\n        if (mocha.options.forbidOnly) {\n          throw createForbiddenExclusivityError(mocha);\n        }\n        opts.isOnly = true;\n        return this.create(opts);\n      },\n\n      /**\n       * Create a Suite, but skip it; convenience function\n       * See docstring for create() below.\n       *\n       * @param {Object} opts\n       * @returns {Suite}\n       */\n      skip: function skip(opts) {\n        opts.pending = true;\n        return this.create(opts);\n      },\n\n      /**\n       * Creates a suite.\n       *\n       * @param {Object} opts Options\n       * @param {string} opts.title Title of Suite\n       * @param {Function} [opts.fn] Suite Function (not always applicable)\n       * @param {boolean} [opts.pending] Is Suite pending?\n       * @param {string} [opts.file] Filepath where this Suite resides\n       * @param {boolean} [opts.isOnly] Is Suite exclusive?\n       * @returns {Suite}\n       */\n      create: function create(opts) {\n        var suite = Suite.create(suites[0], opts.title);\n        suite.pending = Boolean(opts.pending);\n        suite.file = opts.file;\n        suites.unshift(suite);\n        if (opts.isOnly) {\n          suite.markOnly();\n        }\n        if (\n          suite.pending &&\n          mocha.options.forbidPending &&\n          shouldBeTested(suite)\n        ) {\n          throw createUnsupportedError('Pending test forbidden');\n        }\n        if (typeof opts.fn === 'function') {\n          opts.fn.call(suite);\n          suites.shift();\n        } else if (typeof opts.fn === 'undefined' && !suite.pending) {\n          throw createMissingArgumentError(\n            'Suite \"' +\n              suite.fullTitle() +\n              '\" was defined but no callback was supplied. ' +\n              'Supply a callback or explicitly skip the suite.',\n            'callback',\n            'function'\n          );\n        } else if (!opts.fn && suite.pending) {\n          suites.shift();\n        }\n\n        return suite;\n      }\n    },\n\n    test: {\n      /**\n       * Exclusive test-case.\n       *\n       * @param {Object} mocha\n       * @param {Function} test\n       * @returns {*}\n       */\n      only: function (mocha, test) {\n        if (mocha.options.forbidOnly) {\n          throw createForbiddenExclusivityError(mocha);\n        }\n        test.markOnly();\n        return test;\n      },\n\n      /**\n       * Pending test case.\n       *\n       * @param {string} title\n       */\n      skip: function (title) {\n        context.test(title);\n      }\n    }\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}