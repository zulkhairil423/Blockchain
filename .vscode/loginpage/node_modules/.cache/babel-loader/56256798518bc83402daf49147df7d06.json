{"ast":null,"code":"/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffArrays = diffArrays;\nexports.arrayDiff = void 0;\n/*istanbul ignore end*/\n\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n/*istanbul ignore start*/\n\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/*istanbul ignore end*/\n\n\nvar arrayDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n/*istanbul ignore start*/\n\nexports.arrayDiff = arrayDiff;\n/*istanbul ignore end*/\n\narrayDiff.tokenize = function (value) {\n  return value.slice();\n};\n\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\n  return value;\n};\n\nfunction diffArrays(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AAAA;AAAAA;AAAA;AAAA;;;;;;;;;;;;AAEO,IAAMC,SAAS,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAlB;;;;;;AACPD,SAAS,CAACE,QAAVF,GAAqB,UAASG,KAAT,EAAgB;EACnC,OAAOA,KAAK,CAACC,KAAND,EAAP;AADF;;AAGAH,SAAS,CAACK,IAAVL,GAAiBA,SAAS,CAACM,WAAVN,GAAwB,UAASG,KAAT,EAAgB;EACvD,OAAOA,KAAP;AADF;;AAIO,SAASI,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;EAAE,OAAOV,SAAS,CAACW,IAAVX,CAAeQ,MAAfR,EAAuBS,MAAvBT,EAA+BU,QAA/BV,CAAP;AAAkD","names":["_base","arrayDiff","Diff","tokenize","value","slice","join","removeEmpty","diffArrays","oldArr","newArr","callback","diff"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\diff\\src\\diff\\array.js"],"sourcesContent":["import Diff from './base';\n\nexport const arrayDiff = new Diff();\narrayDiff.tokenize = function(value) {\n  return value.slice();\n};\narrayDiff.join = arrayDiff.removeEmpty = function(value) {\n  return value;\n};\n\nexport function diffArrays(oldArr, newArr, callback) { return arrayDiff.diff(oldArr, newArr, callback); }\n"]},"metadata":{},"sourceType":"script"}