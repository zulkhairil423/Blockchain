{"ast":null,"code":"var debug = require('debug')('eventstore:snapshot');\n/**\n * Snapshot constructor\n * The snapshot object will be persisted to the store.\n * @param {String} id  the id of the snapshot\n * @param {Object} obj the snapshot object infos\n * @constructor\n */\n\n\nfunction Snapshot(id, obj) {\n  if (!id) {\n    var errIdMsg = 'id not injected!';\n    debug(errIdMsg);\n    throw new Error(errIdMsg);\n  }\n\n  if (!obj) {\n    var errObjMsg = 'object not injected!';\n    debug(errObjMsg);\n    throw new Error(errObjMsg);\n  }\n\n  if (!obj.aggregateId) {\n    var errAggIdMsg = 'object.aggregateId not injected!';\n    debug(errAggIdMsg);\n    throw new Error(errAggIdMsg);\n  }\n\n  if (!obj.data) {\n    var errDataMsg = 'object.data not injected!';\n    debug(errDataMsg);\n    throw new Error(errDataMsg);\n  }\n\n  this.id = id;\n  this.streamId = obj.aggregateId;\n  this.aggregateId = obj.aggregateId;\n  this.aggregate = obj.aggregate || null;\n  this.context = obj.context || null;\n  this.commitStamp = null;\n  this.revision = obj.revision;\n  this.version = obj.version;\n  this.data = obj.data;\n}\n\nmodule.exports = Snapshot;","map":{"version":3,"names":["debug","require","Snapshot","id","obj","errIdMsg","Error","errObjMsg","aggregateId","errAggIdMsg","data","errDataMsg","streamId","aggregate","context","commitStamp","revision","version","module","exports"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/eventstore/lib/snapshot.js"],"sourcesContent":["var debug = require('debug')('eventstore:snapshot');\n\n/**\n * Snapshot constructor\n * The snapshot object will be persisted to the store.\n * @param {String} id  the id of the snapshot\n * @param {Object} obj the snapshot object infos\n * @constructor\n */\nfunction Snapshot (id, obj) {\n  if (!id) {\n    var errIdMsg = 'id not injected!';\n    debug(errIdMsg);\n    throw new Error(errIdMsg);\n  }\n\n  if (!obj) {\n    var errObjMsg = 'object not injected!';\n    debug(errObjMsg);\n    throw new Error(errObjMsg);\n  }\n\n  if (!obj.aggregateId) {\n    var errAggIdMsg = 'object.aggregateId not injected!';\n    debug(errAggIdMsg);\n    throw new Error(errAggIdMsg);\n  }\n\n  if (!obj.data) {\n    var errDataMsg = 'object.data not injected!';\n    debug(errDataMsg);\n    throw new Error(errDataMsg);\n  }\n\n  this.id = id;\n  this.streamId = obj.aggregateId;\n  this.aggregateId = obj.aggregateId;\n  this.aggregate = obj.aggregate || null;\n  this.context = obj.context || null;\n  this.commitStamp = null;\n  this.revision = obj.revision;\n  this.version = obj.version;\n  this.data = obj.data;\n}\n\nmodule.exports = Snapshot;\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,qBAAjB,CAAZ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,QAAT,CAAmBC,EAAnB,EAAuBC,GAAvB,EAA4B;EAC1B,IAAI,CAACD,EAAL,EAAS;IACP,IAAIE,QAAQ,GAAG,kBAAf;IACAL,KAAK,CAACK,QAAD,CAAL;IACA,MAAM,IAAIC,KAAJ,CAAUD,QAAV,CAAN;EACD;;EAED,IAAI,CAACD,GAAL,EAAU;IACR,IAAIG,SAAS,GAAG,sBAAhB;IACAP,KAAK,CAACO,SAAD,CAAL;IACA,MAAM,IAAID,KAAJ,CAAUC,SAAV,CAAN;EACD;;EAED,IAAI,CAACH,GAAG,CAACI,WAAT,EAAsB;IACpB,IAAIC,WAAW,GAAG,kCAAlB;IACAT,KAAK,CAACS,WAAD,CAAL;IACA,MAAM,IAAIH,KAAJ,CAAUG,WAAV,CAAN;EACD;;EAED,IAAI,CAACL,GAAG,CAACM,IAAT,EAAe;IACb,IAAIC,UAAU,GAAG,2BAAjB;IACAX,KAAK,CAACW,UAAD,CAAL;IACA,MAAM,IAAIL,KAAJ,CAAUK,UAAV,CAAN;EACD;;EAED,KAAKR,EAAL,GAAUA,EAAV;EACA,KAAKS,QAAL,GAAgBR,GAAG,CAACI,WAApB;EACA,KAAKA,WAAL,GAAmBJ,GAAG,CAACI,WAAvB;EACA,KAAKK,SAAL,GAAiBT,GAAG,CAACS,SAAJ,IAAiB,IAAlC;EACA,KAAKC,OAAL,GAAeV,GAAG,CAACU,OAAJ,IAAe,IAA9B;EACA,KAAKC,WAAL,GAAmB,IAAnB;EACA,KAAKC,QAAL,GAAgBZ,GAAG,CAACY,QAApB;EACA,KAAKC,OAAL,GAAeb,GAAG,CAACa,OAAnB;EACA,KAAKP,IAAL,GAAYN,GAAG,CAACM,IAAhB;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBjB,QAAjB"},"metadata":{},"sourceType":"script"}