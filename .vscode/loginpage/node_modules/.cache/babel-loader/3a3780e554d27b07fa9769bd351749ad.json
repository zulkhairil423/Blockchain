{"ast":null,"code":"// Copied from https://github.com/nodejs/node/blob/v17.0.1/lib/internal/modules/cjs/helpers.js\n'use strict';\n\nconst {\n  ArrayPrototypeForEach,\n  ObjectDefineProperty,\n  ObjectPrototypeHasOwnProperty,\n  SafeSet,\n  StringPrototypeIncludes,\n  StringPrototypeStartsWith\n} = require('./node-primordials');\n\nconst {\n  getOptionValue\n} = require('./node-options');\n\nconst userConditions = getOptionValue('--conditions');\nconst noAddons = getOptionValue('--no-addons');\nconst addonConditions = noAddons ? [] : ['node-addons']; // TODO: Use this set when resolving pkg#exports conditions in loader.js.\n\nconst cjsConditions = new SafeSet(['require', 'node', ...addonConditions, ...userConditions]);\n/**\n * @param {any} object\n * @param {string} [dummyModuleName]\n * @return {void}\n */\n\nfunction addBuiltinLibsToObject(object, dummyModuleName) {\n  // Make built-in modules available directly (loaded lazily).\n  const Module = require('module').Module;\n\n  const {\n    builtinModules\n  } = Module; // To require built-in modules in user-land and ignore modules whose\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\n  // use `require()` directly.\n\n  const dummyModule = new Module(dummyModuleName);\n  ArrayPrototypeForEach(builtinModules, name => {\n    // Neither add underscored modules, nor ones that contain slashes (e.g.,\n    // 'fs/promises') or ones that are already defined.\n    if (StringPrototypeStartsWith(name, '_') || StringPrototypeIncludes(name, '/') || ObjectPrototypeHasOwnProperty(object, name)) {\n      return;\n    } // Goals of this mechanism are:\n    // - Lazy loading of built-in modules\n    // - Having all built-in modules available as non-enumerable properties\n    // - Allowing the user to re-assign these variables as if there were no\n    //   pre-existing globals with the same name.\n\n\n    const setReal = val => {\n      // Deleting the property before re-assigning it disables the\n      // getter/setter mechanism.\n      delete object[name];\n      object[name] = val;\n    };\n\n    ObjectDefineProperty(object, name, {\n      get: () => {\n        // Node 12 hack; remove when we drop node12 support\n        const lib = (dummyModule.require || require)(name); // Disable the current getter/setter and set up a new\n        // non-enumerable property.\n\n\n        delete object[name];\n        ObjectDefineProperty(object, name, {\n          get: () => lib,\n          set: setReal,\n          configurable: true,\n          enumerable: false\n        });\n        return lib;\n      },\n      set: setReal,\n      configurable: true,\n      enumerable: false\n    });\n  });\n}\n\nexports.addBuiltinLibsToObject = addBuiltinLibsToObject;\nexports.cjsConditions = cjsConditions;","map":{"version":3,"names":["ArrayPrototypeForEach","ObjectDefineProperty","ObjectPrototypeHasOwnProperty","SafeSet","StringPrototypeIncludes","StringPrototypeStartsWith","require","getOptionValue","userConditions","noAddons","addonConditions","cjsConditions","addBuiltinLibsToObject","object","dummyModuleName","Module","builtinModules","dummyModule","name","setReal","val","get","lib","set","configurable","enumerable","exports"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/ts-node/dist-raw/node-internal-modules-cjs-helpers.js"],"sourcesContent":["// Copied from https://github.com/nodejs/node/blob/v17.0.1/lib/internal/modules/cjs/helpers.js\n\n'use strict';\n\nconst {\n  ArrayPrototypeForEach,\n  ObjectDefineProperty,\n  ObjectPrototypeHasOwnProperty,\n  SafeSet,\n  StringPrototypeIncludes,\n  StringPrototypeStartsWith,\n} = require('./node-primordials');\n\nconst { getOptionValue } = require('./node-options');\nconst userConditions = getOptionValue('--conditions');\n\nconst noAddons = getOptionValue('--no-addons');\nconst addonConditions = noAddons ? [] : ['node-addons'];\n\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\nconst cjsConditions = new SafeSet([\n  'require',\n  'node',\n  ...addonConditions,\n  ...userConditions,\n]);\n\n/**\n * @param {any} object\n * @param {string} [dummyModuleName]\n * @return {void}\n */\nfunction addBuiltinLibsToObject(object, dummyModuleName) {\n  // Make built-in modules available directly (loaded lazily).\n  const Module = require('module').Module;\n  const { builtinModules } = Module;\n\n  // To require built-in modules in user-land and ignore modules whose\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\n  // use `require()` directly.\n  const dummyModule = new Module(dummyModuleName);\n\n  ArrayPrototypeForEach(builtinModules, (name) => {\n    // Neither add underscored modules, nor ones that contain slashes (e.g.,\n    // 'fs/promises') or ones that are already defined.\n    if (StringPrototypeStartsWith(name, '_') ||\n        StringPrototypeIncludes(name, '/') ||\n        ObjectPrototypeHasOwnProperty(object, name)) {\n      return;\n    }\n    // Goals of this mechanism are:\n    // - Lazy loading of built-in modules\n    // - Having all built-in modules available as non-enumerable properties\n    // - Allowing the user to re-assign these variables as if there were no\n    //   pre-existing globals with the same name.\n\n    const setReal = (val) => {\n      // Deleting the property before re-assigning it disables the\n      // getter/setter mechanism.\n      delete object[name];\n      object[name] = val;\n    };\n\n    ObjectDefineProperty(object, name, {\n      get: () => {\n        // Node 12 hack; remove when we drop node12 support\n        const lib = (dummyModule.require || require)(name);\n\n        // Disable the current getter/setter and set up a new\n        // non-enumerable property.\n        delete object[name];\n        ObjectDefineProperty(object, name, {\n          get: () => lib,\n          set: setReal,\n          configurable: true,\n          enumerable: false\n        });\n\n        return lib;\n      },\n      set: setReal,\n      configurable: true,\n      enumerable: false\n    });\n  });\n}\n\nexports.addBuiltinLibsToObject = addBuiltinLibsToObject;\nexports.cjsConditions = cjsConditions;\n"],"mappings":"AAAA;AAEA;;AAEA,MAAM;EACJA,qBADI;EAEJC,oBAFI;EAGJC,6BAHI;EAIJC,OAJI;EAKJC,uBALI;EAMJC;AANI,IAOFC,OAAO,CAAC,oBAAD,CAPX;;AASA,MAAM;EAAEC;AAAF,IAAqBD,OAAO,CAAC,gBAAD,CAAlC;;AACA,MAAME,cAAc,GAAGD,cAAc,CAAC,cAAD,CAArC;AAEA,MAAME,QAAQ,GAAGF,cAAc,CAAC,aAAD,CAA/B;AACA,MAAMG,eAAe,GAAGD,QAAQ,GAAG,EAAH,GAAQ,CAAC,aAAD,CAAxC,C,CAEA;;AACA,MAAME,aAAa,GAAG,IAAIR,OAAJ,CAAY,CAChC,SADgC,EAEhC,MAFgC,EAGhC,GAAGO,eAH6B,EAIhC,GAAGF,cAJ6B,CAAZ,CAAtB;AAOA;AACA;AACA;AACA;AACA;;AACA,SAASI,sBAAT,CAAgCC,MAAhC,EAAwCC,eAAxC,EAAyD;EACvD;EACA,MAAMC,MAAM,GAAGT,OAAO,CAAC,QAAD,CAAP,CAAkBS,MAAjC;;EACA,MAAM;IAAEC;EAAF,IAAqBD,MAA3B,CAHuD,CAKvD;EACA;EACA;;EACA,MAAME,WAAW,GAAG,IAAIF,MAAJ,CAAWD,eAAX,CAApB;EAEAd,qBAAqB,CAACgB,cAAD,EAAkBE,IAAD,IAAU;IAC9C;IACA;IACA,IAAIb,yBAAyB,CAACa,IAAD,EAAO,GAAP,CAAzB,IACAd,uBAAuB,CAACc,IAAD,EAAO,GAAP,CADvB,IAEAhB,6BAA6B,CAACW,MAAD,EAASK,IAAT,CAFjC,EAEiD;MAC/C;IACD,CAP6C,CAQ9C;IACA;IACA;IACA;IACA;;;IAEA,MAAMC,OAAO,GAAIC,GAAD,IAAS;MACvB;MACA;MACA,OAAOP,MAAM,CAACK,IAAD,CAAb;MACAL,MAAM,CAACK,IAAD,CAAN,GAAeE,GAAf;IACD,CALD;;IAOAnB,oBAAoB,CAACY,MAAD,EAASK,IAAT,EAAe;MACjCG,GAAG,EAAE,MAAM;QACT;QACA,MAAMC,GAAG,GAAG,CAACL,WAAW,CAACX,OAAZ,IAAuBA,OAAxB,EAAiCY,IAAjC,CAAZ,CAFS,CAIT;QACA;;;QACA,OAAOL,MAAM,CAACK,IAAD,CAAb;QACAjB,oBAAoB,CAACY,MAAD,EAASK,IAAT,EAAe;UACjCG,GAAG,EAAE,MAAMC,GADsB;UAEjCC,GAAG,EAAEJ,OAF4B;UAGjCK,YAAY,EAAE,IAHmB;UAIjCC,UAAU,EAAE;QAJqB,CAAf,CAApB;QAOA,OAAOH,GAAP;MACD,CAhBgC;MAiBjCC,GAAG,EAAEJ,OAjB4B;MAkBjCK,YAAY,EAAE,IAlBmB;MAmBjCC,UAAU,EAAE;IAnBqB,CAAf,CAApB;EAqBD,CA1CoB,CAArB;AA2CD;;AAEDC,OAAO,CAACd,sBAAR,GAAiCA,sBAAjC;AACAc,OAAO,CAACf,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}