{"ast":null,"code":"'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Pending = require('./pending');\n\nvar debug = require('debug')('mocha:runnable');\n\nvar milliseconds = require('ms');\n\nvar utils = require('./utils');\n\nconst {\n  createInvalidExceptionError,\n  createMultipleDoneError,\n  createTimeoutError\n} = require('./errors');\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n * @private\n */\n\n\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar clearTimeout = global.clearTimeout;\nvar toString = Object.prototype.toString;\nmodule.exports = Runnable;\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @class\n * @extends external:EventEmitter\n * @public\n * @param {String} title\n * @param {Function} fn\n */\n\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.body = (fn || '').toString();\n  this.async = fn && fn.length;\n  this.sync = !this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._retries = -1;\n  utils.assignNewMochaID(this);\n  Object.defineProperty(this, 'id', {\n    get() {\n      return utils.getMochaID(this);\n    }\n\n  });\n  this.reset();\n}\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\n\nutils.inherits(Runnable, EventEmitter);\n/**\n * Resets the state initially or for a next run.\n */\n\nRunnable.prototype.reset = function () {\n  this.timedOut = false;\n  this._currentRetry = 0;\n  this.pending = false;\n  delete this.state;\n  delete this.err;\n};\n/**\n * Get current timeout value in msecs.\n *\n * @private\n * @returns {number} current timeout threshold value\n */\n\n/**\n * @summary\n * Set timeout threshold value (msecs).\n *\n * @description\n * A string argument can use shorthand (e.g., \"2s\") and will be converted.\n * The value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].\n * If clamped value matches either range endpoint, timeouts will be disabled.\n *\n * @private\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}\n * @param {number|string} ms - Timeout threshold value.\n * @returns {Runnable} this\n * @chainable\n */\n\n\nRunnable.prototype.timeout = function (ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  } // Clamp to range\n\n\n  var INT_MAX = Math.pow(2, 31) - 1;\n  var range = [0, INT_MAX];\n  ms = utils.clamp(ms, range); // see #1652 for reasoning\n\n  if (ms === range[0] || ms === range[1]) {\n    this._timeout = 0;\n  } else {\n    this._timeout = ms;\n  }\n\n  debug('timeout %d', this._timeout);\n\n  if (this.timer) {\n    this.resetTimeout();\n  }\n\n  return this;\n};\n/**\n * Set or get slow `ms`.\n *\n * @private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\n\n\nRunnable.prototype.slow = function (ms) {\n  if (!arguments.length || typeof ms === 'undefined') {\n    return this._slow;\n  }\n\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n/**\n * Halt and mark as pending.\n *\n * @memberof Mocha.Runnable\n * @public\n */\n\n\nRunnable.prototype.skip = function () {\n  this.pending = true;\n  throw new Pending('sync skip; aborting execution');\n};\n/**\n * Check if this runnable or its parent suite is marked as pending.\n *\n * @private\n */\n\n\nRunnable.prototype.isPending = function () {\n  return this.pending || this.parent && this.parent.isPending();\n};\n/**\n * Return `true` if this Runnable has failed.\n * @return {boolean}\n * @private\n */\n\n\nRunnable.prototype.isFailed = function () {\n  return !this.isPending() && this.state === constants.STATE_FAILED;\n};\n/**\n * Return `true` if this Runnable has passed.\n * @return {boolean}\n * @private\n */\n\n\nRunnable.prototype.isPassed = function () {\n  return !this.isPending() && this.state === constants.STATE_PASSED;\n};\n/**\n * Set or get number of retries.\n *\n * @private\n */\n\n\nRunnable.prototype.retries = function (n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n\n  this._retries = n;\n};\n/**\n * Set or get current retry\n *\n * @private\n */\n\n\nRunnable.prototype.currentRetry = function (n) {\n  if (!arguments.length) {\n    return this._currentRetry;\n  }\n\n  this._currentRetry = n;\n};\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string}\n */\n\n\nRunnable.prototype.fullTitle = function () {\n  return this.titlePath().join(' ');\n};\n/**\n * Return the title path generated by concatenating the parent's title path with the title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string}\n */\n\n\nRunnable.prototype.titlePath = function () {\n  return this.parent.titlePath().concat([this.title]);\n};\n/**\n * Clear the timeout.\n *\n * @private\n */\n\n\nRunnable.prototype.clearTimeout = function () {\n  clearTimeout(this.timer);\n};\n/**\n * Reset the timeout.\n *\n * @private\n */\n\n\nRunnable.prototype.resetTimeout = function () {\n  var self = this;\n  var ms = this.timeout();\n\n  if (ms === 0) {\n    return;\n  }\n\n  this.clearTimeout();\n  this.timer = setTimeout(function () {\n    if (self.timeout() === 0) {\n      return;\n    }\n\n    self.callback(self._timeoutError(ms));\n    self.timedOut = true;\n  }, ms);\n};\n/**\n * Set or get a list of whitelisted globals for this test run.\n *\n * @private\n * @param {string[]} globals\n */\n\n\nRunnable.prototype.globals = function (globals) {\n  if (!arguments.length) {\n    return this._allowedGlobals;\n  }\n\n  this._allowedGlobals = globals;\n};\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @private\n */\n\n\nRunnable.prototype.run = function (fn) {\n  var self = this;\n  var start = new Date();\n  var ctx = this.ctx;\n  var finished;\n  var errorWasHandled = false;\n  if (this.isPending()) return fn(); // Sometimes the ctx exists, but it is not runnable\n\n  if (ctx && ctx.runnable) {\n    ctx.runnable(this);\n  } // called multiple times\n\n\n  function multiple(err) {\n    if (errorWasHandled) {\n      return;\n    }\n\n    errorWasHandled = true;\n    self.emit('error', createMultipleDoneError(self, err));\n  } // finished\n\n\n  function done(err) {\n    var ms = self.timeout();\n\n    if (self.timedOut) {\n      return;\n    }\n\n    if (finished) {\n      return multiple(err);\n    }\n\n    self.clearTimeout();\n    self.duration = new Date() - start;\n    finished = true;\n\n    if (!err && self.duration > ms && ms > 0) {\n      err = self._timeoutError(ms);\n    }\n\n    fn(err);\n  } // for .resetTimeout() and Runner#uncaught()\n\n\n  this.callback = done;\n\n  if (this.fn && typeof this.fn.call !== 'function') {\n    done(new TypeError('A runnable must be passed a function as its second argument.'));\n    return;\n  } // explicit async with `done` argument\n\n\n  if (this.async) {\n    this.resetTimeout(); // allows skip() to be used in an explicit async context\n\n    this.skip = function asyncSkip() {\n      this.pending = true;\n      done(); // halt execution, the uncaught handler will ignore the failure.\n\n      throw new Pending('async skip; aborting execution');\n    };\n\n    try {\n      callFnAsync(this.fn);\n    } catch (err) {\n      // handles async runnables which actually run synchronously\n      errorWasHandled = true;\n\n      if (err instanceof Pending) {\n        return; // done() is already called in this.skip()\n      } else if (this.allowUncaught) {\n        throw err;\n      }\n\n      done(Runnable.toValueOrError(err));\n    }\n\n    return;\n  } // sync or promise-returning\n\n\n  try {\n    callFn(this.fn);\n  } catch (err) {\n    errorWasHandled = true;\n\n    if (err instanceof Pending) {\n      return done();\n    } else if (this.allowUncaught) {\n      throw err;\n    }\n\n    done(Runnable.toValueOrError(err));\n  }\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(function () {\n        done(); // Return null so libraries like bluebird do not warn about\n        // subsequently constructed Promises.\n\n        return null;\n      }, function (reason) {\n        done(reason || new Error('Promise rejected with no or falsy reason'));\n      });\n    } else {\n      if (self.asyncOnly) {\n        return done(new Error('--async-only option in use without declaring `done()` or returning a promise'));\n      }\n\n      done();\n    }\n  }\n\n  function callFnAsync(fn) {\n    var result = fn.call(ctx, function (err) {\n      if (err instanceof Error || toString.call(err) === '[object Error]') {\n        return done(err);\n      }\n\n      if (err) {\n        if (Object.prototype.toString.call(err) === '[object Object]') {\n          return done(new Error('done() invoked with non-Error: ' + JSON.stringify(err)));\n        }\n\n        return done(new Error('done() invoked with non-Error: ' + err));\n      }\n\n      if (result && utils.isPromise(result)) {\n        return done(new Error('Resolution method is overspecified. Specify a callback *or* return a Promise; not both.'));\n      }\n\n      done();\n    });\n  }\n};\n/**\n * Instantiates a \"timeout\" error\n *\n * @param {number} ms - Timeout (in milliseconds)\n * @returns {Error} a \"timeout\" error\n * @private\n */\n\n\nRunnable.prototype._timeoutError = function (ms) {\n  let msg = `Timeout of ${ms}ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.`;\n\n  if (this.file) {\n    msg += ' (' + this.file + ')';\n  }\n\n  return createTimeoutError(msg, ms, this.file);\n};\n\nvar constants = utils.defineConstants(\n/**\n * {@link Runnable}-related constants.\n * @public\n * @memberof Runnable\n * @readonly\n * @static\n * @alias constants\n * @enum {string}\n */\n{\n  /**\n   * Value of `state` prop when a `Runnable` has failed\n   */\n  STATE_FAILED: 'failed',\n\n  /**\n   * Value of `state` prop when a `Runnable` has passed\n   */\n  STATE_PASSED: 'passed',\n\n  /**\n   * Value of `state` prop when a `Runnable` has been skipped by user\n   */\n  STATE_PENDING: 'pending'\n});\n/**\n * Given `value`, return identity if truthy, otherwise create an \"invalid exception\" error and return that.\n * @param {*} [value] - Value to return, if present\n * @returns {*|Error} `value`, otherwise an `Error`\n * @private\n */\n\nRunnable.toValueOrError = function (value) {\n  return value || createInvalidExceptionError('Runnable failed with falsy or undefined exception. Please throw an Error instead.', value);\n};\n\nRunnable.constants = constants;","map":{"version":3,"names":["EventEmitter","require","Pending","debug","milliseconds","utils","createInvalidExceptionError","createMultipleDoneError","createTimeoutError","Date","global","setTimeout","clearTimeout","toString","Object","prototype","module","exports","Runnable","title","fn","body","async","length","sync","_timeout","_slow","_retries","assignNewMochaID","defineProperty","get","getMochaID","reset","inherits","timedOut","_currentRetry","pending","state","err","timeout","ms","arguments","INT_MAX","Math","pow","range","clamp","timer","resetTimeout","slow","skip","isPending","parent","isFailed","constants","STATE_FAILED","isPassed","STATE_PASSED","retries","n","currentRetry","fullTitle","titlePath","join","concat","self","callback","_timeoutError","globals","_allowedGlobals","run","start","ctx","finished","errorWasHandled","runnable","multiple","emit","done","duration","call","TypeError","asyncSkip","callFnAsync","allowUncaught","toValueOrError","callFn","result","then","reason","Error","asyncOnly","JSON","stringify","isPromise","msg","file","defineConstants","STATE_PENDING","value"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/mocha/lib/runnable.js"],"sourcesContent":["'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\nvar Pending = require('./pending');\nvar debug = require('debug')('mocha:runnable');\nvar milliseconds = require('ms');\nvar utils = require('./utils');\nconst {\n  createInvalidExceptionError,\n  createMultipleDoneError,\n  createTimeoutError\n} = require('./errors');\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n * @private\n */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar clearTimeout = global.clearTimeout;\nvar toString = Object.prototype.toString;\n\nmodule.exports = Runnable;\n\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @class\n * @extends external:EventEmitter\n * @public\n * @param {String} title\n * @param {Function} fn\n */\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.body = (fn || '').toString();\n  this.async = fn && fn.length;\n  this.sync = !this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._retries = -1;\n  utils.assignNewMochaID(this);\n  Object.defineProperty(this, 'id', {\n    get() {\n      return utils.getMochaID(this);\n    }\n  });\n  this.reset();\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\nutils.inherits(Runnable, EventEmitter);\n\n/**\n * Resets the state initially or for a next run.\n */\nRunnable.prototype.reset = function () {\n  this.timedOut = false;\n  this._currentRetry = 0;\n  this.pending = false;\n  delete this.state;\n  delete this.err;\n};\n\n/**\n * Get current timeout value in msecs.\n *\n * @private\n * @returns {number} current timeout threshold value\n */\n/**\n * @summary\n * Set timeout threshold value (msecs).\n *\n * @description\n * A string argument can use shorthand (e.g., \"2s\") and will be converted.\n * The value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].\n * If clamped value matches either range endpoint, timeouts will be disabled.\n *\n * @private\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}\n * @param {number|string} ms - Timeout threshold value.\n * @returns {Runnable} this\n * @chainable\n */\nRunnable.prototype.timeout = function (ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  // Clamp to range\n  var INT_MAX = Math.pow(2, 31) - 1;\n  var range = [0, INT_MAX];\n  ms = utils.clamp(ms, range);\n\n  // see #1652 for reasoning\n  if (ms === range[0] || ms === range[1]) {\n    this._timeout = 0;\n  } else {\n    this._timeout = ms;\n  }\n  debug('timeout %d', this._timeout);\n\n  if (this.timer) {\n    this.resetTimeout();\n  }\n  return this;\n};\n\n/**\n * Set or get slow `ms`.\n *\n * @private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.slow = function (ms) {\n  if (!arguments.length || typeof ms === 'undefined') {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Halt and mark as pending.\n *\n * @memberof Mocha.Runnable\n * @public\n */\nRunnable.prototype.skip = function () {\n  this.pending = true;\n  throw new Pending('sync skip; aborting execution');\n};\n\n/**\n * Check if this runnable or its parent suite is marked as pending.\n *\n * @private\n */\nRunnable.prototype.isPending = function () {\n  return this.pending || (this.parent && this.parent.isPending());\n};\n\n/**\n * Return `true` if this Runnable has failed.\n * @return {boolean}\n * @private\n */\nRunnable.prototype.isFailed = function () {\n  return !this.isPending() && this.state === constants.STATE_FAILED;\n};\n\n/**\n * Return `true` if this Runnable has passed.\n * @return {boolean}\n * @private\n */\nRunnable.prototype.isPassed = function () {\n  return !this.isPending() && this.state === constants.STATE_PASSED;\n};\n\n/**\n * Set or get number of retries.\n *\n * @private\n */\nRunnable.prototype.retries = function (n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  this._retries = n;\n};\n\n/**\n * Set or get current retry\n *\n * @private\n */\nRunnable.prototype.currentRetry = function (n) {\n  if (!arguments.length) {\n    return this._currentRetry;\n  }\n  this._currentRetry = n;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string}\n */\nRunnable.prototype.fullTitle = function () {\n  return this.titlePath().join(' ');\n};\n\n/**\n * Return the title path generated by concatenating the parent's title path with the title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string}\n */\nRunnable.prototype.titlePath = function () {\n  return this.parent.titlePath().concat([this.title]);\n};\n\n/**\n * Clear the timeout.\n *\n * @private\n */\nRunnable.prototype.clearTimeout = function () {\n  clearTimeout(this.timer);\n};\n\n/**\n * Reset the timeout.\n *\n * @private\n */\nRunnable.prototype.resetTimeout = function () {\n  var self = this;\n  var ms = this.timeout();\n\n  if (ms === 0) {\n    return;\n  }\n  this.clearTimeout();\n  this.timer = setTimeout(function () {\n    if (self.timeout() === 0) {\n      return;\n    }\n    self.callback(self._timeoutError(ms));\n    self.timedOut = true;\n  }, ms);\n};\n\n/**\n * Set or get a list of whitelisted globals for this test run.\n *\n * @private\n * @param {string[]} globals\n */\nRunnable.prototype.globals = function (globals) {\n  if (!arguments.length) {\n    return this._allowedGlobals;\n  }\n  this._allowedGlobals = globals;\n};\n\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @private\n */\nRunnable.prototype.run = function (fn) {\n  var self = this;\n  var start = new Date();\n  var ctx = this.ctx;\n  var finished;\n  var errorWasHandled = false;\n\n  if (this.isPending()) return fn();\n\n  // Sometimes the ctx exists, but it is not runnable\n  if (ctx && ctx.runnable) {\n    ctx.runnable(this);\n  }\n\n  // called multiple times\n  function multiple(err) {\n    if (errorWasHandled) {\n      return;\n    }\n    errorWasHandled = true;\n    self.emit('error', createMultipleDoneError(self, err));\n  }\n\n  // finished\n  function done(err) {\n    var ms = self.timeout();\n    if (self.timedOut) {\n      return;\n    }\n\n    if (finished) {\n      return multiple(err);\n    }\n\n    self.clearTimeout();\n    self.duration = new Date() - start;\n    finished = true;\n    if (!err && self.duration > ms && ms > 0) {\n      err = self._timeoutError(ms);\n    }\n    fn(err);\n  }\n\n  // for .resetTimeout() and Runner#uncaught()\n  this.callback = done;\n\n  if (this.fn && typeof this.fn.call !== 'function') {\n    done(\n      new TypeError(\n        'A runnable must be passed a function as its second argument.'\n      )\n    );\n    return;\n  }\n\n  // explicit async with `done` argument\n  if (this.async) {\n    this.resetTimeout();\n\n    // allows skip() to be used in an explicit async context\n    this.skip = function asyncSkip() {\n      this.pending = true;\n      done();\n      // halt execution, the uncaught handler will ignore the failure.\n      throw new Pending('async skip; aborting execution');\n    };\n\n    try {\n      callFnAsync(this.fn);\n    } catch (err) {\n      // handles async runnables which actually run synchronously\n      errorWasHandled = true;\n      if (err instanceof Pending) {\n        return; // done() is already called in this.skip()\n      } else if (this.allowUncaught) {\n        throw err;\n      }\n      done(Runnable.toValueOrError(err));\n    }\n    return;\n  }\n\n  // sync or promise-returning\n  try {\n    callFn(this.fn);\n  } catch (err) {\n    errorWasHandled = true;\n    if (err instanceof Pending) {\n      return done();\n    } else if (this.allowUncaught) {\n      throw err;\n    }\n    done(Runnable.toValueOrError(err));\n  }\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function () {\n          done();\n          // Return null so libraries like bluebird do not warn about\n          // subsequently constructed Promises.\n          return null;\n        },\n        function (reason) {\n          done(reason || new Error('Promise rejected with no or falsy reason'));\n        }\n      );\n    } else {\n      if (self.asyncOnly) {\n        return done(\n          new Error(\n            '--async-only option in use without declaring `done()` or returning a promise'\n          )\n        );\n      }\n\n      done();\n    }\n  }\n\n  function callFnAsync(fn) {\n    var result = fn.call(ctx, function (err) {\n      if (err instanceof Error || toString.call(err) === '[object Error]') {\n        return done(err);\n      }\n      if (err) {\n        if (Object.prototype.toString.call(err) === '[object Object]') {\n          return done(\n            new Error('done() invoked with non-Error: ' + JSON.stringify(err))\n          );\n        }\n        return done(new Error('done() invoked with non-Error: ' + err));\n      }\n      if (result && utils.isPromise(result)) {\n        return done(\n          new Error(\n            'Resolution method is overspecified. Specify a callback *or* return a Promise; not both.'\n          )\n        );\n      }\n\n      done();\n    });\n  }\n};\n\n/**\n * Instantiates a \"timeout\" error\n *\n * @param {number} ms - Timeout (in milliseconds)\n * @returns {Error} a \"timeout\" error\n * @private\n */\nRunnable.prototype._timeoutError = function (ms) {\n  let msg = `Timeout of ${ms}ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.`;\n  if (this.file) {\n    msg += ' (' + this.file + ')';\n  }\n  return createTimeoutError(msg, ms, this.file);\n};\n\nvar constants = utils.defineConstants(\n  /**\n   * {@link Runnable}-related constants.\n   * @public\n   * @memberof Runnable\n   * @readonly\n   * @static\n   * @alias constants\n   * @enum {string}\n   */\n  {\n    /**\n     * Value of `state` prop when a `Runnable` has failed\n     */\n    STATE_FAILED: 'failed',\n    /**\n     * Value of `state` prop when a `Runnable` has passed\n     */\n    STATE_PASSED: 'passed',\n    /**\n     * Value of `state` prop when a `Runnable` has been skipped by user\n     */\n    STATE_PENDING: 'pending'\n  }\n);\n\n/**\n * Given `value`, return identity if truthy, otherwise create an \"invalid exception\" error and return that.\n * @param {*} [value] - Value to return, if present\n * @returns {*|Error} `value`, otherwise an `Error`\n * @private\n */\nRunnable.toValueOrError = function (value) {\n  return (\n    value ||\n    createInvalidExceptionError(\n      'Runnable failed with falsy or undefined exception. Please throw an Error instead.',\n      value\n    )\n  );\n};\n\nRunnable.constants = constants;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}