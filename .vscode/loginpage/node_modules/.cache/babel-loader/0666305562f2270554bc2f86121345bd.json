{"ast":null,"code":"'use strict';\n/**\n * Various utility functions used throughout Mocha's codebase.\n * @module utils\n */\n\n/**\n * Module dependencies.\n */\n\nconst {\n  nanoid\n} = require('nanoid/non-secure');\n\nvar path = require('path');\n\nvar util = require('util');\n\nvar he = require('he');\n\nconst MOCHA_ID_PROP_NAME = '__mocha_id__';\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * @param {function} ctor - Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor - Constructor function to inherit prototype from.\n * @throws {TypeError} if either constructor is null, or if super constructor\n *     lacks a prototype.\n */\n\nexports.inherits = util.inherits;\n/**\n * Escape special characters in the given string of html.\n *\n * @private\n * @param  {string} html\n * @return {string}\n */\n\nexports.escape = function (html) {\n  return he.encode(String(html), {\n    useNamedReferences: false\n  });\n};\n/**\n * Test if the given obj is type of string.\n *\n * @private\n * @param {Object} obj\n * @return {boolean}\n */\n\n\nexports.isString = function (obj) {\n  return typeof obj === 'string';\n};\n/**\n * Compute a slug from the given `str`.\n *\n * @private\n * @param {string} str\n * @return {string}\n */\n\n\nexports.slug = function (str) {\n  return str.toLowerCase().replace(/\\s+/g, '-').replace(/[^-\\w]/g, '').replace(/-{2,}/g, '-');\n};\n/**\n * Strip the function definition from `str`, and re-indent for pre whitespace.\n *\n * @param {string} str\n * @return {string}\n */\n\n\nexports.clean = function (str) {\n  str = str.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/^\\uFEFF/, '') // (traditional)->  space/name     parameters    body     (lambda)-> parameters       body   multi-statement/single          keep body content\n  .replace(/^function(?:\\s*|\\s[^(]*)\\([^)]*\\)\\s*\\{((?:.|\\n)*?)\\}$|^\\([^)]*\\)\\s*=>\\s*(?:\\{((?:.|\\n)*?)\\}|((?:.|\\n)*))$/, '$1$2$3');\n  var spaces = str.match(/^\\n?( *)/)[1].length;\n  var tabs = str.match(/^\\n?(\\t*)/)[1].length;\n  var re = new RegExp('^\\n?' + (tabs ? '\\t' : ' ') + '{' + (tabs || spaces) + '}', 'gm');\n  str = str.replace(re, '');\n  return str.trim();\n};\n/**\n * If a value could have properties, and has none, this function is called,\n * which returns a string representation of the empty value.\n *\n * Functions w/ no properties return `'[Function]'`\n * Arrays w/ length === 0 return `'[]'`\n * Objects w/ no properties return `'{}'`\n * All else: return result of `value.toString()`\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} typeHint The type of the value\n * @returns {string}\n */\n\n\nfunction emptyRepresentation(value, typeHint) {\n  switch (typeHint) {\n    case 'function':\n      return '[Function]';\n\n    case 'object':\n      return '{}';\n\n    case 'array':\n      return '[]';\n\n    default:\n      return value.toString();\n  }\n}\n/**\n * Takes some variable and asks `Object.prototype.toString()` what it thinks it\n * is.\n *\n * @private\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n * @param {*} value The value to test.\n * @returns {string} Computed type\n * @example\n * canonicalType({}) // 'object'\n * canonicalType([]) // 'array'\n * canonicalType(1) // 'number'\n * canonicalType(false) // 'boolean'\n * canonicalType(Infinity) // 'number'\n * canonicalType(null) // 'null'\n * canonicalType(new Date()) // 'date'\n * canonicalType(/foo/) // 'regexp'\n * canonicalType('type') // 'string'\n * canonicalType(global) // 'global'\n * canonicalType(new String('foo') // 'object'\n * canonicalType(async function() {}) // 'asyncfunction'\n * canonicalType(await import(name)) // 'module'\n */\n\n\nvar canonicalType = exports.canonicalType = function canonicalType(value) {\n  if (value === undefined) {\n    return 'undefined';\n  } else if (value === null) {\n    return 'null';\n  } else if (Buffer.isBuffer(value)) {\n    return 'buffer';\n  }\n\n  return Object.prototype.toString.call(value).replace(/^\\[.+\\s(.+?)]$/, '$1').toLowerCase();\n};\n/**\n *\n * Returns a general type or data structure of a variable\n * @private\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures\n * @param {*} value The value to test.\n * @returns {string} One of undefined, boolean, number, string, bigint, symbol, object\n * @example\n * type({}) // 'object'\n * type([]) // 'array'\n * type(1) // 'number'\n * type(false) // 'boolean'\n * type(Infinity) // 'number'\n * type(null) // 'null'\n * type(new Date()) // 'object'\n * type(/foo/) // 'object'\n * type('type') // 'string'\n * type(global) // 'object'\n * type(new String('foo') // 'string'\n */\n\n\nexports.type = function type(value) {\n  // Null is special\n  if (value === null) return 'null';\n  const primitives = new Set(['undefined', 'boolean', 'number', 'string', 'bigint', 'symbol']);\n\n  const _type = typeof value;\n\n  if (_type === 'function') return _type;\n  if (primitives.has(_type)) return _type;\n  if (value instanceof String) return 'string';\n  if (value instanceof Error) return 'error';\n  if (Array.isArray(value)) return 'array';\n  return _type;\n};\n/**\n * Stringify `value`. Different behavior depending on type of value:\n *\n * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.\n * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.\n * - If `value` is an *empty* object, function, or array, return result of function\n *   {@link emptyRepresentation}.\n * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of\n *   JSON.stringify().\n *\n * @private\n * @see exports.type\n * @param {*} value\n * @return {string}\n */\n\n\nexports.stringify = function (value) {\n  var typeHint = canonicalType(value);\n\n  if (!~['object', 'array', 'function'].indexOf(typeHint)) {\n    if (typeHint === 'buffer') {\n      var json = Buffer.prototype.toJSON.call(value); // Based on the toJSON result\n\n      return jsonStringify(json.data && json.type ? json.data : json, 2).replace(/,(\\n|$)/g, '$1');\n    } // IE7/IE8 has a bizarre String constructor; needs to be coerced\n    // into an array and back to obj.\n\n\n    if (typeHint === 'string' && typeof value === 'object') {\n      value = value.split('').reduce(function (acc, char, idx) {\n        acc[idx] = char;\n        return acc;\n      }, {});\n      typeHint = 'object';\n    } else {\n      return jsonStringify(value);\n    }\n  }\n\n  for (var prop in value) {\n    if (Object.prototype.hasOwnProperty.call(value, prop)) {\n      return jsonStringify(exports.canonicalize(value, null, typeHint), 2).replace(/,(\\n|$)/g, '$1');\n    }\n  }\n\n  return emptyRepresentation(value, typeHint);\n};\n/**\n * like JSON.stringify but more sense.\n *\n * @private\n * @param {Object}  object\n * @param {number=} spaces\n * @param {number=} depth\n * @returns {*}\n */\n\n\nfunction jsonStringify(object, spaces, depth) {\n  if (typeof spaces === 'undefined') {\n    // primitive types\n    return _stringify(object);\n  }\n\n  depth = depth || 1;\n  var space = spaces * depth;\n  var str = Array.isArray(object) ? '[' : '{';\n  var end = Array.isArray(object) ? ']' : '}';\n  var length = typeof object.length === 'number' ? object.length : Object.keys(object).length; // `.repeat()` polyfill\n\n  function repeat(s, n) {\n    return new Array(n).join(s);\n  }\n\n  function _stringify(val) {\n    switch (canonicalType(val)) {\n      case 'null':\n      case 'undefined':\n        val = '[' + val + ']';\n        break;\n\n      case 'array':\n      case 'object':\n        val = jsonStringify(val, spaces, depth + 1);\n        break;\n\n      case 'boolean':\n      case 'regexp':\n      case 'symbol':\n      case 'number':\n        val = val === 0 && 1 / val === -Infinity // `-0`\n        ? '-0' : val.toString();\n        break;\n\n      case 'bigint':\n        val = val.toString() + 'n';\n        break;\n\n      case 'date':\n        var sDate = isNaN(val.getTime()) ? val.toString() : val.toISOString();\n        val = '[Date: ' + sDate + ']';\n        break;\n\n      case 'buffer':\n        var json = val.toJSON(); // Based on the toJSON result\n\n        json = json.data && json.type ? json.data : json;\n        val = '[Buffer: ' + jsonStringify(json, 2, depth + 1) + ']';\n        break;\n\n      default:\n        val = val === '[Function]' || val === '[Circular]' ? val : JSON.stringify(val);\n      // string\n    }\n\n    return val;\n  }\n\n  for (var i in object) {\n    if (!Object.prototype.hasOwnProperty.call(object, i)) {\n      continue; // not my business\n    }\n\n    --length;\n    str += '\\n ' + repeat(' ', space) + (Array.isArray(object) ? '' : '\"' + i + '\": ') + // key\n    _stringify(object[i]) + ( // value\n    length ? ',' : ''); // comma\n  }\n\n  return str + ( // [], {}\n  str.length !== 1 ? '\\n' + repeat(' ', --space) + end : end);\n}\n/**\n * Return a new Thing that has the keys in sorted order. Recursive.\n *\n * If the Thing...\n * - has already been seen, return string `'[Circular]'`\n * - is `undefined`, return string `'[undefined]'`\n * - is `null`, return value `null`\n * - is some other primitive, return the value\n * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method\n * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.\n * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`\n *\n * @private\n * @see {@link exports.stringify}\n * @param {*} value Thing to inspect.  May or may not have properties.\n * @param {Array} [stack=[]] Stack of seen values\n * @param {string} [typeHint] Type hint\n * @return {(Object|Array|Function|string|undefined)}\n */\n\n\nexports.canonicalize = function canonicalize(value, stack, typeHint) {\n  var canonicalizedObj;\n  /* eslint-disable no-unused-vars */\n\n  var prop;\n  /* eslint-enable no-unused-vars */\n\n  typeHint = typeHint || canonicalType(value);\n\n  function withStack(value, fn) {\n    stack.push(value);\n    fn();\n    stack.pop();\n  }\n\n  stack = stack || [];\n\n  if (stack.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  switch (typeHint) {\n    case 'undefined':\n    case 'buffer':\n    case 'null':\n      canonicalizedObj = value;\n      break;\n\n    case 'array':\n      withStack(value, function () {\n        canonicalizedObj = value.map(function (item) {\n          return exports.canonicalize(item, stack);\n        });\n      });\n      break;\n\n    case 'function':\n      /* eslint-disable-next-line no-unused-vars, no-unreachable-loop */\n      for (prop in value) {\n        canonicalizedObj = {};\n        break;\n      }\n      /* eslint-enable guard-for-in */\n\n\n      if (!canonicalizedObj) {\n        canonicalizedObj = emptyRepresentation(value, typeHint);\n        break;\n      }\n\n    /* falls through */\n\n    case 'object':\n      canonicalizedObj = canonicalizedObj || {};\n      withStack(value, function () {\n        Object.keys(value).sort().forEach(function (key) {\n          canonicalizedObj[key] = exports.canonicalize(value[key], stack);\n        });\n      });\n      break;\n\n    case 'date':\n    case 'number':\n    case 'regexp':\n    case 'boolean':\n    case 'symbol':\n      canonicalizedObj = value;\n      break;\n\n    default:\n      canonicalizedObj = value + '';\n  }\n\n  return canonicalizedObj;\n};\n/**\n * @summary\n * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)\n * @description\n * When invoking this function you get a filter function that get the Error.stack as an input,\n * and return a prettify output.\n * (i.e: strip Mocha and internal node functions from stack trace).\n * @returns {Function}\n */\n\n\nexports.stackTraceFilter = function () {\n  // TODO: Replace with `process.browser`\n  var is = typeof document === 'undefined' ? {\n    node: true\n  } : {\n    browser: true\n  };\n  var slash = path.sep;\n  var cwd;\n\n  if (is.node) {\n    cwd = exports.cwd() + slash;\n  } else {\n    cwd = (typeof location === 'undefined' ? window.location : location).href.replace(/\\/[^/]*$/, '/');\n    slash = '/';\n  }\n\n  function isMochaInternal(line) {\n    return ~line.indexOf('node_modules' + slash + 'mocha' + slash) || ~line.indexOf(slash + 'mocha.js') || ~line.indexOf(slash + 'mocha.min.js');\n  }\n\n  function isNodeInternal(line) {\n    return ~line.indexOf('(timers.js:') || ~line.indexOf('(events.js:') || ~line.indexOf('(node.js:') || ~line.indexOf('(module.js:') || ~line.indexOf('GeneratorFunctionPrototype.next (native)') || false;\n  }\n\n  return function (stack) {\n    stack = stack.split('\\n');\n    stack = stack.reduce(function (list, line) {\n      if (isMochaInternal(line)) {\n        return list;\n      }\n\n      if (is.node && isNodeInternal(line)) {\n        return list;\n      } // Clean up cwd(absolute)\n\n\n      if (/:\\d+:\\d+\\)?$/.test(line)) {\n        line = line.replace('(' + cwd, '(');\n      }\n\n      list.push(line);\n      return list;\n    }, []);\n    return stack.join('\\n');\n  };\n};\n/**\n * Crude, but effective.\n * @public\n * @param {*} value\n * @returns {boolean} Whether or not `value` is a Promise\n */\n\n\nexports.isPromise = function isPromise(value) {\n  return typeof value === 'object' && value !== null && typeof value.then === 'function';\n};\n/**\n * Clamps a numeric value to an inclusive range.\n *\n * @param {number} value - Value to be clamped.\n * @param {number[]} range - Two element array specifying [min, max] range.\n * @returns {number} clamped value\n */\n\n\nexports.clamp = function clamp(value, range) {\n  return Math.min(Math.max(value, range[0]), range[1]);\n};\n/**\n * It's a noop.\n * @public\n */\n\n\nexports.noop = function () {};\n/**\n * Creates a map-like object.\n *\n * @description\n * A \"map\" is an object with no prototype, for our purposes. In some cases\n * this would be more appropriate than a `Map`, especially if your environment\n * doesn't support it. Recommended for use in Mocha's public APIs.\n *\n * @public\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Custom_and_Null_objects|MDN:Map}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Custom_and_Null_objects|MDN:Object.create - Custom objects}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Custom_and_Null_objects|MDN:Object.assign}\n * @param {...*} [obj] - Arguments to `Object.assign()`.\n * @returns {Object} An object with no prototype, having `...obj` properties\n */\n\n\nexports.createMap = function (obj) {\n  return Object.assign.apply(null, [Object.create(null)].concat(Array.prototype.slice.call(arguments)));\n};\n/**\n * Creates a read-only map-like object.\n *\n * @description\n * This differs from {@link module:utils.createMap createMap} only in that\n * the argument must be non-empty, because the result is frozen.\n *\n * @see {@link module:utils.createMap createMap}\n * @param {...*} [obj] - Arguments to `Object.assign()`.\n * @returns {Object} A frozen object with no prototype, having `...obj` properties\n * @throws {TypeError} if argument is not a non-empty object.\n */\n\n\nexports.defineConstants = function (obj) {\n  if (canonicalType(obj) !== 'object' || !Object.keys(obj).length) {\n    throw new TypeError('Invalid argument; expected a non-empty object');\n  }\n\n  return Object.freeze(exports.createMap(obj));\n};\n/**\n * Returns current working directory\n *\n * Wrapper around `process.cwd()` for isolation\n * @private\n */\n\n\nexports.cwd = function cwd() {\n  return process.cwd();\n};\n/**\n * Returns `true` if Mocha is running in a browser.\n * Checks for `process.browser`.\n * @returns {boolean}\n * @private\n */\n\n\nexports.isBrowser = function isBrowser() {\n  return Boolean(process.browser);\n};\n/*\n * Casts `value` to an array; useful for optionally accepting array parameters\n *\n * It follows these rules, depending on `value`.  If `value` is...\n * 1. `undefined`: return an empty Array\n * 2. `null`: return an array with a single `null` element\n * 3. Any other object: return the value of `Array.from()` _if_ the object is iterable\n * 4. otherwise: return an array with a single element, `value`\n * @param {*} value - Something to cast to an Array\n * @returns {Array<*>}\n */\n\n\nexports.castArray = function castArray(value) {\n  if (value === undefined) {\n    return [];\n  }\n\n  if (value === null) {\n    return [null];\n  }\n\n  if (typeof value === 'object' && (typeof value[Symbol.iterator] === 'function' || value.length !== undefined)) {\n    return Array.from(value);\n  }\n\n  return [value];\n};\n\nexports.constants = exports.defineConstants({\n  MOCHA_ID_PROP_NAME\n});\n/**\n * Creates a new unique identifier\n * @returns {string} Unique identifier\n */\n\nexports.uniqueID = () => nanoid();\n\nexports.assignNewMochaID = obj => {\n  const id = exports.uniqueID();\n  Object.defineProperty(obj, MOCHA_ID_PROP_NAME, {\n    get() {\n      return id;\n    }\n\n  });\n  return obj;\n};\n/**\n * Retrieves a Mocha ID from an object, if present.\n * @param {*} [obj] - Object\n * @returns {string|void}\n */\n\n\nexports.getMochaID = obj => obj && typeof obj === 'object' ? obj[MOCHA_ID_PROP_NAME] : undefined;","map":{"version":3,"names":["nanoid","require","path","util","he","MOCHA_ID_PROP_NAME","exports","inherits","escape","html","encode","String","useNamedReferences","isString","obj","slug","str","toLowerCase","replace","clean","spaces","match","length","tabs","re","RegExp","trim","emptyRepresentation","value","typeHint","toString","canonicalType","undefined","Buffer","isBuffer","Object","prototype","call","type","primitives","Set","_type","has","Error","Array","isArray","stringify","indexOf","json","toJSON","jsonStringify","data","split","reduce","acc","char","idx","prop","hasOwnProperty","canonicalize","object","depth","_stringify","space","end","keys","repeat","s","n","join","val","Infinity","sDate","isNaN","getTime","toISOString","JSON","i","stack","canonicalizedObj","withStack","fn","push","pop","map","item","sort","forEach","key","stackTraceFilter","is","document","node","browser","slash","sep","cwd","location","window","href","isMochaInternal","line","isNodeInternal","list","test","isPromise","then","clamp","range","Math","min","max","noop","createMap","assign","apply","create","concat","slice","arguments","defineConstants","TypeError","freeze","process","isBrowser","Boolean","castArray","Symbol","iterator","from","constants","uniqueID","assignNewMochaID","id","defineProperty","get","getMochaID"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/mocha/lib/utils.js"],"sourcesContent":["'use strict';\n\n/**\n * Various utility functions used throughout Mocha's codebase.\n * @module utils\n */\n\n/**\n * Module dependencies.\n */\n\nconst {nanoid} = require('nanoid/non-secure');\nvar path = require('path');\nvar util = require('util');\nvar he = require('he');\n\nconst MOCHA_ID_PROP_NAME = '__mocha_id__';\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * @param {function} ctor - Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor - Constructor function to inherit prototype from.\n * @throws {TypeError} if either constructor is null, or if super constructor\n *     lacks a prototype.\n */\nexports.inherits = util.inherits;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @private\n * @param  {string} html\n * @return {string}\n */\nexports.escape = function (html) {\n  return he.encode(String(html), {useNamedReferences: false});\n};\n\n/**\n * Test if the given obj is type of string.\n *\n * @private\n * @param {Object} obj\n * @return {boolean}\n */\nexports.isString = function (obj) {\n  return typeof obj === 'string';\n};\n\n/**\n * Compute a slug from the given `str`.\n *\n * @private\n * @param {string} str\n * @return {string}\n */\nexports.slug = function (str) {\n  return str\n    .toLowerCase()\n    .replace(/\\s+/g, '-')\n    .replace(/[^-\\w]/g, '')\n    .replace(/-{2,}/g, '-');\n};\n\n/**\n * Strip the function definition from `str`, and re-indent for pre whitespace.\n *\n * @param {string} str\n * @return {string}\n */\nexports.clean = function (str) {\n  str = str\n    .replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n')\n    .replace(/^\\uFEFF/, '')\n    // (traditional)->  space/name     parameters    body     (lambda)-> parameters       body   multi-statement/single          keep body content\n    .replace(\n      /^function(?:\\s*|\\s[^(]*)\\([^)]*\\)\\s*\\{((?:.|\\n)*?)\\}$|^\\([^)]*\\)\\s*=>\\s*(?:\\{((?:.|\\n)*?)\\}|((?:.|\\n)*))$/,\n      '$1$2$3'\n    );\n\n  var spaces = str.match(/^\\n?( *)/)[1].length;\n  var tabs = str.match(/^\\n?(\\t*)/)[1].length;\n  var re = new RegExp(\n    '^\\n?' + (tabs ? '\\t' : ' ') + '{' + (tabs || spaces) + '}',\n    'gm'\n  );\n\n  str = str.replace(re, '');\n\n  return str.trim();\n};\n\n/**\n * If a value could have properties, and has none, this function is called,\n * which returns a string representation of the empty value.\n *\n * Functions w/ no properties return `'[Function]'`\n * Arrays w/ length === 0 return `'[]'`\n * Objects w/ no properties return `'{}'`\n * All else: return result of `value.toString()`\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} typeHint The type of the value\n * @returns {string}\n */\nfunction emptyRepresentation(value, typeHint) {\n  switch (typeHint) {\n    case 'function':\n      return '[Function]';\n    case 'object':\n      return '{}';\n    case 'array':\n      return '[]';\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Takes some variable and asks `Object.prototype.toString()` what it thinks it\n * is.\n *\n * @private\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n * @param {*} value The value to test.\n * @returns {string} Computed type\n * @example\n * canonicalType({}) // 'object'\n * canonicalType([]) // 'array'\n * canonicalType(1) // 'number'\n * canonicalType(false) // 'boolean'\n * canonicalType(Infinity) // 'number'\n * canonicalType(null) // 'null'\n * canonicalType(new Date()) // 'date'\n * canonicalType(/foo/) // 'regexp'\n * canonicalType('type') // 'string'\n * canonicalType(global) // 'global'\n * canonicalType(new String('foo') // 'object'\n * canonicalType(async function() {}) // 'asyncfunction'\n * canonicalType(await import(name)) // 'module'\n */\nvar canonicalType = (exports.canonicalType = function canonicalType(value) {\n  if (value === undefined) {\n    return 'undefined';\n  } else if (value === null) {\n    return 'null';\n  } else if (Buffer.isBuffer(value)) {\n    return 'buffer';\n  }\n  return Object.prototype.toString\n    .call(value)\n    .replace(/^\\[.+\\s(.+?)]$/, '$1')\n    .toLowerCase();\n});\n\n/**\n *\n * Returns a general type or data structure of a variable\n * @private\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures\n * @param {*} value The value to test.\n * @returns {string} One of undefined, boolean, number, string, bigint, symbol, object\n * @example\n * type({}) // 'object'\n * type([]) // 'array'\n * type(1) // 'number'\n * type(false) // 'boolean'\n * type(Infinity) // 'number'\n * type(null) // 'null'\n * type(new Date()) // 'object'\n * type(/foo/) // 'object'\n * type('type') // 'string'\n * type(global) // 'object'\n * type(new String('foo') // 'string'\n */\nexports.type = function type(value) {\n  // Null is special\n  if (value === null) return 'null';\n  const primitives = new Set([\n    'undefined',\n    'boolean',\n    'number',\n    'string',\n    'bigint',\n    'symbol'\n  ]);\n  const _type = typeof value;\n  if (_type === 'function') return _type;\n  if (primitives.has(_type)) return _type;\n  if (value instanceof String) return 'string';\n  if (value instanceof Error) return 'error';\n  if (Array.isArray(value)) return 'array';\n\n  return _type;\n};\n\n/**\n * Stringify `value`. Different behavior depending on type of value:\n *\n * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.\n * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.\n * - If `value` is an *empty* object, function, or array, return result of function\n *   {@link emptyRepresentation}.\n * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of\n *   JSON.stringify().\n *\n * @private\n * @see exports.type\n * @param {*} value\n * @return {string}\n */\nexports.stringify = function (value) {\n  var typeHint = canonicalType(value);\n\n  if (!~['object', 'array', 'function'].indexOf(typeHint)) {\n    if (typeHint === 'buffer') {\n      var json = Buffer.prototype.toJSON.call(value);\n      // Based on the toJSON result\n      return jsonStringify(\n        json.data && json.type ? json.data : json,\n        2\n      ).replace(/,(\\n|$)/g, '$1');\n    }\n\n    // IE7/IE8 has a bizarre String constructor; needs to be coerced\n    // into an array and back to obj.\n    if (typeHint === 'string' && typeof value === 'object') {\n      value = value.split('').reduce(function (acc, char, idx) {\n        acc[idx] = char;\n        return acc;\n      }, {});\n      typeHint = 'object';\n    } else {\n      return jsonStringify(value);\n    }\n  }\n\n  for (var prop in value) {\n    if (Object.prototype.hasOwnProperty.call(value, prop)) {\n      return jsonStringify(\n        exports.canonicalize(value, null, typeHint),\n        2\n      ).replace(/,(\\n|$)/g, '$1');\n    }\n  }\n\n  return emptyRepresentation(value, typeHint);\n};\n\n/**\n * like JSON.stringify but more sense.\n *\n * @private\n * @param {Object}  object\n * @param {number=} spaces\n * @param {number=} depth\n * @returns {*}\n */\nfunction jsonStringify(object, spaces, depth) {\n  if (typeof spaces === 'undefined') {\n    // primitive types\n    return _stringify(object);\n  }\n\n  depth = depth || 1;\n  var space = spaces * depth;\n  var str = Array.isArray(object) ? '[' : '{';\n  var end = Array.isArray(object) ? ']' : '}';\n  var length =\n    typeof object.length === 'number'\n      ? object.length\n      : Object.keys(object).length;\n  // `.repeat()` polyfill\n  function repeat(s, n) {\n    return new Array(n).join(s);\n  }\n\n  function _stringify(val) {\n    switch (canonicalType(val)) {\n      case 'null':\n      case 'undefined':\n        val = '[' + val + ']';\n        break;\n      case 'array':\n      case 'object':\n        val = jsonStringify(val, spaces, depth + 1);\n        break;\n      case 'boolean':\n      case 'regexp':\n      case 'symbol':\n      case 'number':\n        val =\n          val === 0 && 1 / val === -Infinity // `-0`\n            ? '-0'\n            : val.toString();\n        break;\n      case 'bigint':\n        val = val.toString() + 'n';\n        break;\n      case 'date':\n        var sDate = isNaN(val.getTime()) ? val.toString() : val.toISOString();\n        val = '[Date: ' + sDate + ']';\n        break;\n      case 'buffer':\n        var json = val.toJSON();\n        // Based on the toJSON result\n        json = json.data && json.type ? json.data : json;\n        val = '[Buffer: ' + jsonStringify(json, 2, depth + 1) + ']';\n        break;\n      default:\n        val =\n          val === '[Function]' || val === '[Circular]'\n            ? val\n            : JSON.stringify(val); // string\n    }\n    return val;\n  }\n\n  for (var i in object) {\n    if (!Object.prototype.hasOwnProperty.call(object, i)) {\n      continue; // not my business\n    }\n    --length;\n    str +=\n      '\\n ' +\n      repeat(' ', space) +\n      (Array.isArray(object) ? '' : '\"' + i + '\": ') + // key\n      _stringify(object[i]) + // value\n      (length ? ',' : ''); // comma\n  }\n\n  return (\n    str +\n    // [], {}\n    (str.length !== 1 ? '\\n' + repeat(' ', --space) + end : end)\n  );\n}\n\n/**\n * Return a new Thing that has the keys in sorted order. Recursive.\n *\n * If the Thing...\n * - has already been seen, return string `'[Circular]'`\n * - is `undefined`, return string `'[undefined]'`\n * - is `null`, return value `null`\n * - is some other primitive, return the value\n * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method\n * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.\n * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`\n *\n * @private\n * @see {@link exports.stringify}\n * @param {*} value Thing to inspect.  May or may not have properties.\n * @param {Array} [stack=[]] Stack of seen values\n * @param {string} [typeHint] Type hint\n * @return {(Object|Array|Function|string|undefined)}\n */\nexports.canonicalize = function canonicalize(value, stack, typeHint) {\n  var canonicalizedObj;\n  /* eslint-disable no-unused-vars */\n  var prop;\n  /* eslint-enable no-unused-vars */\n  typeHint = typeHint || canonicalType(value);\n  function withStack(value, fn) {\n    stack.push(value);\n    fn();\n    stack.pop();\n  }\n\n  stack = stack || [];\n\n  if (stack.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  switch (typeHint) {\n    case 'undefined':\n    case 'buffer':\n    case 'null':\n      canonicalizedObj = value;\n      break;\n    case 'array':\n      withStack(value, function () {\n        canonicalizedObj = value.map(function (item) {\n          return exports.canonicalize(item, stack);\n        });\n      });\n      break;\n    case 'function':\n      /* eslint-disable-next-line no-unused-vars, no-unreachable-loop */\n      for (prop in value) {\n        canonicalizedObj = {};\n        break;\n      }\n      /* eslint-enable guard-for-in */\n      if (!canonicalizedObj) {\n        canonicalizedObj = emptyRepresentation(value, typeHint);\n        break;\n      }\n    /* falls through */\n    case 'object':\n      canonicalizedObj = canonicalizedObj || {};\n      withStack(value, function () {\n        Object.keys(value)\n          .sort()\n          .forEach(function (key) {\n            canonicalizedObj[key] = exports.canonicalize(value[key], stack);\n          });\n      });\n      break;\n    case 'date':\n    case 'number':\n    case 'regexp':\n    case 'boolean':\n    case 'symbol':\n      canonicalizedObj = value;\n      break;\n    default:\n      canonicalizedObj = value + '';\n  }\n\n  return canonicalizedObj;\n};\n\n/**\n * @summary\n * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)\n * @description\n * When invoking this function you get a filter function that get the Error.stack as an input,\n * and return a prettify output.\n * (i.e: strip Mocha and internal node functions from stack trace).\n * @returns {Function}\n */\nexports.stackTraceFilter = function () {\n  // TODO: Replace with `process.browser`\n  var is = typeof document === 'undefined' ? {node: true} : {browser: true};\n  var slash = path.sep;\n  var cwd;\n  if (is.node) {\n    cwd = exports.cwd() + slash;\n  } else {\n    cwd = (\n      typeof location === 'undefined' ? window.location : location\n    ).href.replace(/\\/[^/]*$/, '/');\n    slash = '/';\n  }\n\n  function isMochaInternal(line) {\n    return (\n      ~line.indexOf('node_modules' + slash + 'mocha' + slash) ||\n      ~line.indexOf(slash + 'mocha.js') ||\n      ~line.indexOf(slash + 'mocha.min.js')\n    );\n  }\n\n  function isNodeInternal(line) {\n    return (\n      ~line.indexOf('(timers.js:') ||\n      ~line.indexOf('(events.js:') ||\n      ~line.indexOf('(node.js:') ||\n      ~line.indexOf('(module.js:') ||\n      ~line.indexOf('GeneratorFunctionPrototype.next (native)') ||\n      false\n    );\n  }\n\n  return function (stack) {\n    stack = stack.split('\\n');\n\n    stack = stack.reduce(function (list, line) {\n      if (isMochaInternal(line)) {\n        return list;\n      }\n\n      if (is.node && isNodeInternal(line)) {\n        return list;\n      }\n\n      // Clean up cwd(absolute)\n      if (/:\\d+:\\d+\\)?$/.test(line)) {\n        line = line.replace('(' + cwd, '(');\n      }\n\n      list.push(line);\n      return list;\n    }, []);\n\n    return stack.join('\\n');\n  };\n};\n\n/**\n * Crude, but effective.\n * @public\n * @param {*} value\n * @returns {boolean} Whether or not `value` is a Promise\n */\nexports.isPromise = function isPromise(value) {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.then === 'function'\n  );\n};\n\n/**\n * Clamps a numeric value to an inclusive range.\n *\n * @param {number} value - Value to be clamped.\n * @param {number[]} range - Two element array specifying [min, max] range.\n * @returns {number} clamped value\n */\nexports.clamp = function clamp(value, range) {\n  return Math.min(Math.max(value, range[0]), range[1]);\n};\n\n/**\n * It's a noop.\n * @public\n */\nexports.noop = function () {};\n\n/**\n * Creates a map-like object.\n *\n * @description\n * A \"map\" is an object with no prototype, for our purposes. In some cases\n * this would be more appropriate than a `Map`, especially if your environment\n * doesn't support it. Recommended for use in Mocha's public APIs.\n *\n * @public\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Custom_and_Null_objects|MDN:Map}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Custom_and_Null_objects|MDN:Object.create - Custom objects}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Custom_and_Null_objects|MDN:Object.assign}\n * @param {...*} [obj] - Arguments to `Object.assign()`.\n * @returns {Object} An object with no prototype, having `...obj` properties\n */\nexports.createMap = function (obj) {\n  return Object.assign.apply(\n    null,\n    [Object.create(null)].concat(Array.prototype.slice.call(arguments))\n  );\n};\n\n/**\n * Creates a read-only map-like object.\n *\n * @description\n * This differs from {@link module:utils.createMap createMap} only in that\n * the argument must be non-empty, because the result is frozen.\n *\n * @see {@link module:utils.createMap createMap}\n * @param {...*} [obj] - Arguments to `Object.assign()`.\n * @returns {Object} A frozen object with no prototype, having `...obj` properties\n * @throws {TypeError} if argument is not a non-empty object.\n */\nexports.defineConstants = function (obj) {\n  if (canonicalType(obj) !== 'object' || !Object.keys(obj).length) {\n    throw new TypeError('Invalid argument; expected a non-empty object');\n  }\n  return Object.freeze(exports.createMap(obj));\n};\n\n/**\n * Returns current working directory\n *\n * Wrapper around `process.cwd()` for isolation\n * @private\n */\nexports.cwd = function cwd() {\n  return process.cwd();\n};\n\n/**\n * Returns `true` if Mocha is running in a browser.\n * Checks for `process.browser`.\n * @returns {boolean}\n * @private\n */\nexports.isBrowser = function isBrowser() {\n  return Boolean(process.browser);\n};\n\n/*\n * Casts `value` to an array; useful for optionally accepting array parameters\n *\n * It follows these rules, depending on `value`.  If `value` is...\n * 1. `undefined`: return an empty Array\n * 2. `null`: return an array with a single `null` element\n * 3. Any other object: return the value of `Array.from()` _if_ the object is iterable\n * 4. otherwise: return an array with a single element, `value`\n * @param {*} value - Something to cast to an Array\n * @returns {Array<*>}\n */\nexports.castArray = function castArray(value) {\n  if (value === undefined) {\n    return [];\n  }\n  if (value === null) {\n    return [null];\n  }\n  if (\n    typeof value === 'object' &&\n    (typeof value[Symbol.iterator] === 'function' || value.length !== undefined)\n  ) {\n    return Array.from(value);\n  }\n  return [value];\n};\n\nexports.constants = exports.defineConstants({\n  MOCHA_ID_PROP_NAME\n});\n\n/**\n * Creates a new unique identifier\n * @returns {string} Unique identifier\n */\nexports.uniqueID = () => nanoid();\n\nexports.assignNewMochaID = obj => {\n  const id = exports.uniqueID();\n  Object.defineProperty(obj, MOCHA_ID_PROP_NAME, {\n    get() {\n      return id;\n    }\n  });\n  return obj;\n};\n\n/**\n * Retrieves a Mocha ID from an object, if present.\n * @param {*} [obj] - Object\n * @returns {string|void}\n */\nexports.getMochaID = obj =>\n  obj && typeof obj === 'object' ? obj[MOCHA_ID_PROP_NAME] : undefined;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}