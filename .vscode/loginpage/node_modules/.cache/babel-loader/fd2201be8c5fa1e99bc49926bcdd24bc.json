{"ast":null,"code":"'use strict'; // This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\n\nconst u = require('universalify').fromCallback;\n\nconst fs = require('graceful-fs');\n\nconst api = ['access', 'appendFile', 'chmod', 'chown', 'close', 'copyFile', 'fchmod', 'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchown', 'lchmod', 'link', 'lstat', 'mkdir', 'mkdtemp', 'open', 'readFile', 'readdir', 'readlink', 'realpath', 'rename', 'rmdir', 'stat', 'symlink', 'truncate', 'unlink', 'utimes', 'writeFile'].filter(key => {\n  // Some commands are not available on some systems. Ex:\n  // fs.copyFile was added in Node.js v8.5.0\n  // fs.mkdtemp was added in Node.js v5.10.0\n  // fs.lchown is not available on at least some Linux\n  return typeof fs[key] === 'function';\n}); // Export all keys:\n\nObject.keys(fs).forEach(key => {\n  if (key === 'promises') {\n    // fs.promises is a getter property that triggers ExperimentalWarning\n    // Don't re-export it here, the getter is defined in \"lib/index.js\"\n    return;\n  }\n\n  exports[key] = fs[key];\n}); // Universalify async methods:\n\napi.forEach(method => {\n  exports[method] = u(fs[method]);\n}); // We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\n\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback);\n  }\n\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve);\n  });\n}; // fs.read() & fs.write need special treatment due to multiple callback args\n\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback);\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n      if (err) return reject(err);\n      resolve({\n        bytesRead,\n        buffer\n      });\n    });\n  });\n}; // Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// We need to handle both cases, so we use ...args\n\n\nexports.write = function (fd, buffer) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.write(fd, buffer, ...args);\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {\n      if (err) return reject(err);\n      resolve({\n        bytesWritten,\n        buffer\n      });\n    });\n  });\n};","map":{"version":3,"names":["u","require","fromCallback","fs","api","filter","key","Object","keys","forEach","exports","method","exists","filename","callback","Promise","resolve","read","fd","buffer","offset","length","position","reject","err","bytesRead","write","args","bytesWritten"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/hardhat/node_modules/fs-extra/lib/fs/index.js"],"sourcesContent":["'use strict'\n// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\n\nconst api = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'copyFile',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchown',\n  'lchmod',\n  'link',\n  'lstat',\n  'mkdir',\n  'mkdtemp',\n  'open',\n  'readFile',\n  'readdir',\n  'readlink',\n  'realpath',\n  'rename',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile'\n].filter(key => {\n  // Some commands are not available on some systems. Ex:\n  // fs.copyFile was added in Node.js v8.5.0\n  // fs.mkdtemp was added in Node.js v5.10.0\n  // fs.lchown is not available on at least some Linux\n  return typeof fs[key] === 'function'\n})\n\n// Export all keys:\nObject.keys(fs).forEach(key => {\n  if (key === 'promises') {\n    // fs.promises is a getter property that triggers ExperimentalWarning\n    // Don't re-export it here, the getter is defined in \"lib/index.js\"\n    return\n  }\n  exports[key] = fs[key]\n})\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method])\n})\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback)\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve)\n  })\n}\n\n// fs.read() & fs.write need special treatment due to multiple callback args\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback)\n  }\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesRead, buffer })\n    })\n  })\n}\n\n// Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// We need to handle both cases, so we use ...args\nexports.write = function (fd, buffer, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.write(fd, buffer, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesWritten, buffer })\n    })\n  })\n}\n"],"mappings":"AAAA,a,CACA;AACA;;AACA,MAAMA,CAAC,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,YAAlC;;AACA,MAAMC,EAAE,GAAGF,OAAO,CAAC,aAAD,CAAlB;;AAEA,MAAMG,GAAG,GAAG,CACV,QADU,EAEV,YAFU,EAGV,OAHU,EAIV,OAJU,EAKV,OALU,EAMV,UANU,EAOV,QAPU,EAQV,QARU,EASV,WATU,EAUV,OAVU,EAWV,OAXU,EAYV,WAZU,EAaV,SAbU,EAcV,QAdU,EAeV,QAfU,EAgBV,MAhBU,EAiBV,OAjBU,EAkBV,OAlBU,EAmBV,SAnBU,EAoBV,MApBU,EAqBV,UArBU,EAsBV,SAtBU,EAuBV,UAvBU,EAwBV,UAxBU,EAyBV,QAzBU,EA0BV,OA1BU,EA2BV,MA3BU,EA4BV,SA5BU,EA6BV,UA7BU,EA8BV,QA9BU,EA+BV,QA/BU,EAgCV,WAhCU,EAiCVC,MAjCU,CAiCHC,GAAG,IAAI;EACd;EACA;EACA;EACA;EACA,OAAO,OAAOH,EAAE,CAACG,GAAD,CAAT,KAAmB,UAA1B;AACD,CAvCW,CAAZ,C,CAyCA;;AACAC,MAAM,CAACC,IAAP,CAAYL,EAAZ,EAAgBM,OAAhB,CAAwBH,GAAG,IAAI;EAC7B,IAAIA,GAAG,KAAK,UAAZ,EAAwB;IACtB;IACA;IACA;EACD;;EACDI,OAAO,CAACJ,GAAD,CAAP,GAAeH,EAAE,CAACG,GAAD,CAAjB;AACD,CAPD,E,CASA;;AACAF,GAAG,CAACK,OAAJ,CAAYE,MAAM,IAAI;EACpBD,OAAO,CAACC,MAAD,CAAP,GAAkBX,CAAC,CAACG,EAAE,CAACQ,MAAD,CAAH,CAAnB;AACD,CAFD,E,CAIA;AACA;;AACAD,OAAO,CAACE,MAAR,GAAiB,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;EAC7C,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;IAClC,OAAOX,EAAE,CAACS,MAAH,CAAUC,QAAV,EAAoBC,QAApB,CAAP;EACD;;EACD,OAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;IAC5B,OAAOb,EAAE,CAACS,MAAH,CAAUC,QAAV,EAAoBG,OAApB,CAAP;EACD,CAFM,CAAP;AAGD,CAPD,C,CASA;;;AAEAN,OAAO,CAACO,IAAR,GAAe,UAAUC,EAAV,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,QAAtC,EAAgDR,QAAhD,EAA0D;EACvE,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;IAClC,OAAOX,EAAE,CAACc,IAAH,CAAQC,EAAR,EAAYC,MAAZ,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8CR,QAA9C,CAAP;EACD;;EACD,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUO,MAAV,KAAqB;IACtCpB,EAAE,CAACc,IAAH,CAAQC,EAAR,EAAYC,MAAZ,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8C,CAACE,GAAD,EAAMC,SAAN,EAAiBN,MAAjB,KAA4B;MACxE,IAAIK,GAAJ,EAAS,OAAOD,MAAM,CAACC,GAAD,CAAb;MACTR,OAAO,CAAC;QAAES,SAAF;QAAaN;MAAb,CAAD,CAAP;IACD,CAHD;EAID,CALM,CAAP;AAMD,CAVD,C,CAYA;AACA;AACA;AACA;AACA;;;AACAT,OAAO,CAACgB,KAAR,GAAgB,UAAUR,EAAV,EAAcC,MAAd,EAA+B;EAAA,kCAANQ,IAAM;IAANA,IAAM;EAAA;;EAC7C,IAAI,OAAOA,IAAI,CAACA,IAAI,CAACN,MAAL,GAAc,CAAf,CAAX,KAAiC,UAArC,EAAiD;IAC/C,OAAOlB,EAAE,CAACuB,KAAH,CAASR,EAAT,EAAaC,MAAb,EAAqB,GAAGQ,IAAxB,CAAP;EACD;;EAED,OAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUO,MAAV,KAAqB;IACtCpB,EAAE,CAACuB,KAAH,CAASR,EAAT,EAAaC,MAAb,EAAqB,GAAGQ,IAAxB,EAA8B,CAACH,GAAD,EAAMI,YAAN,EAAoBT,MAApB,KAA+B;MAC3D,IAAIK,GAAJ,EAAS,OAAOD,MAAM,CAACC,GAAD,CAAb;MACTR,OAAO,CAAC;QAAEY,YAAF;QAAgBT;MAAhB,CAAD,CAAP;IACD,CAHD;EAID,CALM,CAAP;AAMD,CAXD"},"metadata":{},"sourceType":"script"}