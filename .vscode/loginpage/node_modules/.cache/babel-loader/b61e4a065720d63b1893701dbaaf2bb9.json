{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst path = require('path');\n\nconst mkdirp = require('../mkdirs').mkdirs;\n\nconst pathExists = require('../path-exists').pathExists;\n\nconst utimes = require('../util/utimes').utimesMillis;\n\nconst notExist = Symbol('notExist');\n\nfunction copy(src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts;\n    opts = {};\n  } else if (typeof opts === 'function') {\n    opts = {\n      filter: opts\n    };\n  }\n\n  cb = cb || function () {};\n\n  opts = opts || {};\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true; // default to true for now\n\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber; // overwrite falls back to clobber\n  // Warn about using preserveTimestamps on 32-bit node\n\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`);\n  }\n\n  checkPaths(src, dest, (err, destStat) => {\n    if (err) return cb(err);\n    if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb);\n    return checkParentDir(destStat, src, dest, opts, cb);\n  });\n}\n\nfunction checkParentDir(destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest);\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err);\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb);\n    mkdirp(destParent, err => {\n      if (err) return cb(err);\n      return startCopy(destStat, src, dest, opts, cb);\n    });\n  });\n}\n\nfunction handleFilter(onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) {\n      if (destStat) return onInclude(destStat, src, dest, opts, cb);\n      return onInclude(src, dest, opts, cb);\n    }\n\n    return cb();\n  }, error => cb(error));\n}\n\nfunction startCopy(destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb);\n  return getStats(destStat, src, dest, opts, cb);\n}\n\nfunction getStats(destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat;\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err);\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb);else if (srcStat.isFile() || srcStat.isCharacterDevice() || srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb);else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb);\n  });\n}\n\nfunction onFile(srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return copyFile(srcStat, src, dest, opts, cb);\n  return mayCopyFile(srcStat, src, dest, opts, cb);\n}\n\nfunction mayCopyFile(srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err);\n      return copyFile(srcStat, src, dest, opts, cb);\n    });\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`));\n  } else return cb();\n}\n\nfunction copyFile(srcStat, src, dest, opts, cb) {\n  if (typeof fs.copyFile === 'function') {\n    return fs.copyFile(src, dest, err => {\n      if (err) return cb(err);\n      return setDestModeAndTimestamps(srcStat, dest, opts, cb);\n    });\n  }\n\n  return copyFileFallback(srcStat, src, dest, opts, cb);\n}\n\nfunction copyFileFallback(srcStat, src, dest, opts, cb) {\n  const rs = fs.createReadStream(src);\n  rs.on('error', err => cb(err)).once('open', () => {\n    const ws = fs.createWriteStream(dest, {\n      mode: srcStat.mode\n    });\n    ws.on('error', err => cb(err)).on('open', () => rs.pipe(ws)).once('close', () => setDestModeAndTimestamps(srcStat, dest, opts, cb));\n  });\n}\n\nfunction setDestModeAndTimestamps(srcStat, dest, opts, cb) {\n  fs.chmod(dest, srcStat.mode, err => {\n    if (err) return cb(err);\n\n    if (opts.preserveTimestamps) {\n      return utimes(dest, srcStat.atime, srcStat.mtime, cb);\n    }\n\n    return cb();\n  });\n}\n\nfunction onDir(srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return mkDirAndCopy(srcStat, src, dest, opts, cb);\n\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`));\n  }\n\n  return copyDir(src, dest, opts, cb);\n}\n\nfunction mkDirAndCopy(srcStat, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err);\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err);\n      return fs.chmod(dest, srcStat.mode, cb);\n    });\n  });\n}\n\nfunction copyDir(src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err);\n    return copyDirItems(items, src, dest, opts, cb);\n  });\n}\n\nfunction copyDirItems(items, src, dest, opts, cb) {\n  const item = items.pop();\n  if (!item) return cb();\n  return copyDirItem(items, item, src, dest, opts, cb);\n}\n\nfunction copyDirItem(items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item);\n  const destItem = path.join(dest, item);\n  checkPaths(srcItem, destItem, (err, destStat) => {\n    if (err) return cb(err);\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err);\n      return copyDirItems(items, src, dest, opts, cb);\n    });\n  });\n}\n\nfunction onLink(destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err);\n\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc);\n    }\n\n    if (destStat === notExist) {\n      return fs.symlink(resolvedSrc, dest, cb);\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb);\n          return cb(err);\n        }\n\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest);\n        }\n\n        if (isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`));\n        } // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n\n\n        if (destStat.isDirectory() && isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`));\n        }\n\n        return copyLink(resolvedSrc, dest, cb);\n      });\n    }\n  });\n}\n\nfunction copyLink(resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err);\n    return fs.symlink(resolvedSrc, dest, cb);\n  });\n} // return true if dest is a subdir of src, otherwise false.\n\n\nfunction isSrcSubdir(src, dest) {\n  const srcArray = path.resolve(src).split(path.sep);\n  const destArray = path.resolve(dest).split(path.sep);\n  return srcArray.reduce((acc, current, i) => acc && destArray[i] === current, true);\n}\n\nfunction checkStats(src, dest, cb) {\n  fs.stat(src, (err, srcStat) => {\n    if (err) return cb(err);\n    fs.stat(dest, (err, destStat) => {\n      if (err) {\n        if (err.code === 'ENOENT') return cb(null, {\n          srcStat,\n          destStat: notExist\n        });\n        return cb(err);\n      }\n\n      return cb(null, {\n        srcStat,\n        destStat\n      });\n    });\n  });\n}\n\nfunction checkPaths(src, dest, cb) {\n  checkStats(src, dest, (err, stats) => {\n    if (err) return cb(err);\n    const {\n      srcStat,\n      destStat\n    } = stats;\n\n    if (destStat.ino && destStat.ino === srcStat.ino) {\n      return cb(new Error('Source and destination must not be the same.'));\n    }\n\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(`Cannot copy '${src}' to a subdirectory of itself, '${dest}'.`));\n    }\n\n    return cb(null, destStat);\n  });\n}\n\nmodule.exports = copy;","map":{"version":3,"names":["fs","require","path","mkdirp","mkdirs","pathExists","utimes","utimesMillis","notExist","Symbol","copy","src","dest","opts","cb","filter","clobber","overwrite","preserveTimestamps","process","arch","console","warn","checkPaths","err","destStat","handleFilter","checkParentDir","destParent","dirname","dirExists","startCopy","onInclude","Promise","resolve","then","include","error","getStats","stat","dereference","lstat","srcStat","isDirectory","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","copyFile","mayCopyFile","unlink","errorOnExist","Error","setDestModeAndTimestamps","copyFileFallback","rs","createReadStream","on","once","ws","createWriteStream","mode","pipe","chmod","atime","mtime","mkDirAndCopy","copyDir","mkdir","readdir","items","copyDirItems","item","pop","copyDirItem","srcItem","join","destItem","readlink","resolvedSrc","cwd","symlink","resolvedDest","code","isSrcSubdir","copyLink","srcArray","split","sep","destArray","reduce","acc","current","i","checkStats","stats","ino","module","exports"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/hardhat/node_modules/fs-extra/lib/copy/copy.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirp = require('../mkdirs').mkdirs\nconst pathExists = require('../path-exists').pathExists\nconst utimes = require('../util/utimes').utimesMillis\n\nconst notExist = Symbol('notExist')\n\nfunction copy (src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts\n    opts = {}\n  } else if (typeof opts === 'function') {\n    opts = {filter: opts}\n  }\n\n  cb = cb || function () {}\n  opts = opts || {}\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  checkPaths(src, dest, (err, destStat) => {\n    if (err) return cb(err)\n    if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb)\n    return checkParentDir(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction checkParentDir (destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest)\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err)\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb)\n    mkdirp(destParent, err => {\n      if (err) return cb(err)\n      return startCopy(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction handleFilter (onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) {\n      if (destStat) return onInclude(destStat, src, dest, opts, cb)\n      return onInclude(src, dest, opts, cb)\n    }\n    return cb()\n  }, error => cb(error))\n}\n\nfunction startCopy (destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb)\n  return getStats(destStat, src, dest, opts, cb)\n}\n\nfunction getStats (destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isFile() ||\n             srcStat.isCharacterDevice() ||\n             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return copyFile(srcStat, src, dest, opts, cb)\n  return mayCopyFile(srcStat, src, dest, opts, cb)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err)\n      return copyFile(srcStat, src, dest, opts, cb)\n    })\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`))\n  } else return cb()\n}\n\nfunction copyFile (srcStat, src, dest, opts, cb) {\n  if (typeof fs.copyFile === 'function') {\n    return fs.copyFile(src, dest, err => {\n      if (err) return cb(err)\n      return setDestModeAndTimestamps(srcStat, dest, opts, cb)\n    })\n  }\n  return copyFileFallback(srcStat, src, dest, opts, cb)\n}\n\nfunction copyFileFallback (srcStat, src, dest, opts, cb) {\n  const rs = fs.createReadStream(src)\n  rs.on('error', err => cb(err)).once('open', () => {\n    const ws = fs.createWriteStream(dest, { mode: srcStat.mode })\n    ws.on('error', err => cb(err))\n      .on('open', () => rs.pipe(ws))\n      .once('close', () => setDestModeAndTimestamps(srcStat, dest, opts, cb))\n  })\n}\n\nfunction setDestModeAndTimestamps (srcStat, dest, opts, cb) {\n  fs.chmod(dest, srcStat.mode, err => {\n    if (err) return cb(err)\n    if (opts.preserveTimestamps) {\n      return utimes(dest, srcStat.atime, srcStat.mtime, cb)\n    }\n    return cb()\n  })\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return mkDirAndCopy(srcStat, src, dest, opts, cb)\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))\n  }\n  return copyDir(src, dest, opts, cb)\n}\n\nfunction mkDirAndCopy (srcStat, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err)\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err)\n      return fs.chmod(dest, srcStat.mode, cb)\n    })\n  })\n}\n\nfunction copyDir (src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err)\n    return copyDirItems(items, src, dest, opts, cb)\n  })\n}\n\nfunction copyDirItems (items, src, dest, opts, cb) {\n  const item = items.pop()\n  if (!item) return cb()\n  return copyDirItem(items, item, src, dest, opts, cb)\n}\n\nfunction copyDirItem (items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  checkPaths(srcItem, destItem, (err, destStat) => {\n    if (err) return cb(err)\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err)\n      return copyDirItems(items, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction onLink (destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err)\n\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n    }\n\n    if (destStat === notExist) {\n      return fs.symlink(resolvedSrc, dest, cb)\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)\n          return cb(err)\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest)\n        }\n        if (isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (destStat.isDirectory() && isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))\n        }\n        return copyLink(resolvedSrc, dest, cb)\n      })\n    }\n  })\n}\n\nfunction copyLink (resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err)\n    return fs.symlink(resolvedSrc, dest, cb)\n  })\n}\n\n// return true if dest is a subdir of src, otherwise false.\nfunction isSrcSubdir (src, dest) {\n  const srcArray = path.resolve(src).split(path.sep)\n  const destArray = path.resolve(dest).split(path.sep)\n  return srcArray.reduce((acc, current, i) => acc && destArray[i] === current, true)\n}\n\nfunction checkStats (src, dest, cb) {\n  fs.stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n    fs.stat(dest, (err, destStat) => {\n      if (err) {\n        if (err.code === 'ENOENT') return cb(null, {srcStat, destStat: notExist})\n        return cb(err)\n      }\n      return cb(null, {srcStat, destStat})\n    })\n  })\n}\n\nfunction checkPaths (src, dest, cb) {\n  checkStats(src, dest, (err, stats) => {\n    if (err) return cb(err)\n    const {srcStat, destStat} = stats\n    if (destStat.ino && destStat.ino === srcStat.ino) {\n      return cb(new Error('Source and destination must not be the same.'))\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(`Cannot copy '${src}' to a subdirectory of itself, '${dest}'.`))\n    }\n    return cb(null, destStat)\n  })\n}\n\nmodule.exports = copy\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}