{"ast":null,"code":"/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/* eslint-disable @typescript-eslint/typedef */\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n/** SyncPromise internal states */\n\nvar States;\n\n(function (States) {\n  /** Pending */\n  States[\"PENDING\"] = \"PENDING\";\n  /** Resolved / OK */\n\n  States[\"RESOLVED\"] = \"RESOLVED\";\n  /** Rejected / Error */\n\n  States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\n\n\nvar SyncPromise =\n/** @class */\nfunction () {\n  function SyncPromise(executor) {\n    var _this = this;\n\n    this._state = States.PENDING;\n    this._handlers = [];\n    /** JSDoc */\n\n    this._resolve = function (value) {\n      _this._setResult(States.RESOLVED, value);\n    };\n    /** JSDoc */\n\n\n    this._reject = function (reason) {\n      _this._setResult(States.REJECTED, reason);\n    };\n    /** JSDoc */\n\n\n    this._setResult = function (state, value) {\n      if (_this._state !== States.PENDING) {\n        return;\n      }\n\n      if (isThenable(value)) {\n        value.then(_this._resolve, _this._reject);\n        return;\n      }\n\n      _this._state = state;\n      _this._value = value;\n\n      _this._executeHandlers();\n    }; // TODO: FIXME\n\n    /** JSDoc */\n\n\n    this._attachHandler = function (handler) {\n      _this._handlers = _this._handlers.concat(handler);\n\n      _this._executeHandlers();\n    };\n    /** JSDoc */\n\n\n    this._executeHandlers = function () {\n      if (_this._state === States.PENDING) {\n        return;\n      }\n\n      var cachedHandlers = _this._handlers.slice();\n\n      _this._handlers = [];\n      cachedHandlers.forEach(function (handler) {\n        if (handler.done) {\n          return;\n        }\n\n        if (_this._state === States.RESOLVED) {\n          if (handler.onfulfilled) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            handler.onfulfilled(_this._value);\n          }\n        }\n\n        if (_this._state === States.REJECTED) {\n          if (handler.onrejected) {\n            handler.onrejected(_this._value);\n          }\n        }\n\n        handler.done = true;\n      });\n    };\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n  /** JSDoc */\n\n\n  SyncPromise.resolve = function (value) {\n    return new SyncPromise(function (resolve) {\n      resolve(value);\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.reject = function (reason) {\n    return new SyncPromise(function (_, reject) {\n      reject(reason);\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.all = function (collection) {\n    return new SyncPromise(function (resolve, reject) {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(\"Promise.all requires an array as input.\"));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      var counter = collection.length;\n      var resolvedCollection = [];\n      collection.forEach(function (item, index) {\n        SyncPromise.resolve(item).then(function (value) {\n          resolvedCollection[index] = value;\n          counter -= 1;\n\n          if (counter !== 0) {\n            return;\n          }\n\n          resolve(resolvedCollection);\n        }).then(null, reject);\n      });\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n    var _this = this;\n\n    return new SyncPromise(function (resolve, reject) {\n      _this._attachHandler({\n        done: false,\n        onfulfilled: function (result) {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result);\n            return;\n          }\n\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: function (reason) {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        }\n      });\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.prototype.catch = function (onrejected) {\n    return this.then(function (val) {\n      return val;\n    }, onrejected);\n  };\n  /** JSDoc */\n\n\n  SyncPromise.prototype.finally = function (onfinally) {\n    var _this = this;\n\n    return new SyncPromise(function (resolve, reject) {\n      var val;\n      var isRejected;\n      return _this.then(function (value) {\n        isRejected = false;\n        val = value;\n\n        if (onfinally) {\n          onfinally();\n        }\n      }, function (reason) {\n        isRejected = true;\n        val = reason;\n\n        if (onfinally) {\n          onfinally();\n        }\n      }).then(function () {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val);\n      });\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.prototype.toString = function () {\n    return '[object SyncPromise]';\n  };\n\n  return SyncPromise;\n}();\n\nexport { SyncPromise };","map":{"version":3,"mappings":"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","names":["isThenable","States","executor","PENDING","value","_this","_setResult","RESOLVED","reason","REJECTED","state","_state","then","_resolve","_reject","_value","_executeHandlers","handler","_handlers","concat","cachedHandlers","slice","forEach","done","onfulfilled","onrejected","e","SyncPromise","resolve","_","reject","collection","Array","isArray","TypeError","length","counter","resolvedCollection","item","index","_attachHandler","result","onfinally","val","isRejected"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\utils\\src\\syncpromise.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    done: boolean;\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        done: false,\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve((val as unknown) as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    done: boolean;\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler.done) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        if (handler.onfulfilled) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handler.onfulfilled((this._value as unknown) as any);\n        }\n      }\n\n      if (this._state === States.REJECTED) {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      }\n\n      handler.done = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n"]},"metadata":{},"sourceType":"module"}