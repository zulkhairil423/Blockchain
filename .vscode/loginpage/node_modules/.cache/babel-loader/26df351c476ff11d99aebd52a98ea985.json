{"ast":null,"code":"// https://github.com/Ethan-Arrowood/undici-fetch\n'use strict';\n\nconst {\n  kHeadersList\n} = require('../core/symbols');\n\nconst {\n  kGuard\n} = require('./symbols');\n\nconst {\n  kEnumerableProperty\n} = require('../core/util');\n\nconst {\n  makeIterator,\n  isValidHeaderName,\n  isValidHeaderValue\n} = require('./util');\n\nconst {\n  webidl\n} = require('./webidl');\n\nconst kHeadersMap = Symbol('headers map');\nconst kHeadersSortedMap = Symbol('headers map sorted');\n/**\n * @see https://fetch.spec.whatwg.org/#concept-header-value-normalize\n * @param {string} potentialValue\n */\n\nfunction headerValueNormalize(potentialValue) {\n  //  To normalize a byte sequence potentialValue, remove\n  //  any leading and trailing HTTP whitespace bytes from\n  //  potentialValue.\n  return potentialValue.replace(/^[\\r\\n\\t ]+|[\\r\\n\\t ]+$/g, '');\n}\n\nfunction fill(headers, object) {\n  // To fill a Headers object headers with a given object object, run these steps:\n  // 1. If object is a sequence, then for each header in object:\n  // Note: webidl conversion to array has already been done.\n  if (Array.isArray(object)) {\n    for (const header of object) {\n      // 1. If header does not contain exactly two items, then throw a TypeError.\n      if (header.length !== 2) {\n        webidl.errors.exception({\n          header: 'Headers constructor',\n          message: `expected name/value pair to be length 2, found ${header.length}.`\n        });\n      } // 2. Append (header’s first item, header’s second item) to headers.\n\n\n      headers.append(header[0], header[1]);\n    }\n  } else if (typeof object === 'object' && object !== null) {\n    // Note: null should throw\n    // 2. Otherwise, object is a record, then for each key → value in object,\n    //    append (key, value) to headers\n    for (const [key, value] of Object.entries(object)) {\n      headers.append(key, value);\n    }\n  } else {\n    webidl.errors.conversionFailed({\n      prefix: 'Headers constructor',\n      argument: 'Argument 1',\n      types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n    });\n  }\n}\n\nclass HeadersList {\n  constructor(init) {\n    if (init instanceof HeadersList) {\n      this[kHeadersMap] = new Map(init[kHeadersMap]);\n      this[kHeadersSortedMap] = init[kHeadersSortedMap];\n    } else {\n      this[kHeadersMap] = new Map(init);\n      this[kHeadersSortedMap] = null;\n    }\n  } // https://fetch.spec.whatwg.org/#header-list-contains\n\n\n  contains(name) {\n    // A header list list contains a header name name if list\n    // contains a header whose name is a byte-case-insensitive\n    // match for name.\n    name = name.toLowerCase();\n    return this[kHeadersMap].has(name);\n  }\n\n  clear() {\n    this[kHeadersMap].clear();\n    this[kHeadersSortedMap] = null;\n  } // https://fetch.spec.whatwg.org/#concept-header-list-append\n\n\n  append(name, value) {\n    this[kHeadersSortedMap] = null; // 1. If list contains name, then set name to the first such\n    //    header’s name.\n\n    name = name.toLowerCase();\n    const exists = this[kHeadersMap].get(name); // 2. Append (name, value) to list.\n\n    if (exists) {\n      this[kHeadersMap].set(name, `${exists}, ${value}`);\n    } else {\n      this[kHeadersMap].set(name, `${value}`);\n    }\n  } // https://fetch.spec.whatwg.org/#concept-header-list-set\n\n\n  set(name, value) {\n    this[kHeadersSortedMap] = null;\n    name = name.toLowerCase(); // 1. If list contains name, then set the value of\n    //    the first such header to value and remove the\n    //    others.\n    // 2. Otherwise, append header (name, value) to list.\n\n    return this[kHeadersMap].set(name, value);\n  } // https://fetch.spec.whatwg.org/#concept-header-list-delete\n\n\n  delete(name) {\n    this[kHeadersSortedMap] = null;\n    name = name.toLowerCase();\n    return this[kHeadersMap].delete(name);\n  } // https://fetch.spec.whatwg.org/#concept-header-list-get\n\n\n  get(name) {\n    name = name.toLowerCase(); // 1. If list does not contain name, then return null.\n\n    if (!this.contains(name)) {\n      return null;\n    } // 2. Return the values of all headers in list whose name\n    //    is a byte-case-insensitive match for name,\n    //    separated from each other by 0x2C 0x20, in order.\n\n\n    return this[kHeadersMap].get(name) ?? null;\n  }\n\n  has(name) {\n    name = name.toLowerCase();\n    return this[kHeadersMap].has(name);\n  }\n\n  keys() {\n    return this[kHeadersMap].keys();\n  }\n\n  values() {\n    return this[kHeadersMap].values();\n  }\n\n  entries() {\n    return this[kHeadersMap].entries();\n  }\n\n  [Symbol.iterator]() {\n    return this[kHeadersMap][Symbol.iterator]();\n  }\n\n} // https://fetch.spec.whatwg.org/#headers-class\n\n\nclass Headers {\n  constructor() {\n    let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    this[kHeadersList] = new HeadersList(); // The new Headers(init) constructor steps are:\n    // 1. Set this’s guard to \"none\".\n\n    this[kGuard] = 'none'; // 2. If init is given, then fill this with init.\n\n    if (init !== undefined) {\n      init = webidl.converters.HeadersInit(init);\n      fill(this, init);\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.constructor.name;\n  } // https://fetch.spec.whatwg.org/#dom-headers-append\n\n\n  append(name, value) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to execute 'append' on 'Headers': 2 arguments required, but only ${arguments.length} present.`);\n    }\n\n    name = webidl.converters.ByteString(name);\n    value = webidl.converters.ByteString(value); // 1. Normalize value.\n\n    value = headerValueNormalize(value); // 2. If name is not a header name or value is not a\n    //    header value, then throw a TypeError.\n\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.append',\n        value: name,\n        type: 'header name'\n      });\n    } else if (!isValidHeaderValue(value)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.append',\n        value,\n        type: 'header value'\n      });\n    } // 3. If headers’s guard is \"immutable\", then throw a TypeError.\n    // 4. Otherwise, if headers’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // Note: undici does not implement forbidden header names\n\n\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable');\n    } else if (this[kGuard] === 'request-no-cors') {// 5. Otherwise, if headers’s guard is \"request-no-cors\":\n      // TODO\n    } // 6. Otherwise, if headers’s guard is \"response\" and name is a\n    //    forbidden response-header name, return.\n    // 7. Append (name, value) to headers’s header list.\n    // 8. If headers’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from headers\n\n\n    return this[kHeadersList].append(name, value);\n  } // https://fetch.spec.whatwg.org/#dom-headers-delete\n\n\n  delete(name) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(`Failed to execute 'delete' on 'Headers': 1 argument required, but only ${arguments.length} present.`);\n    }\n\n    name = webidl.converters.ByteString(name); // 1. If name is not a header name, then throw a TypeError.\n\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.delete',\n        value: name,\n        type: 'header name'\n      });\n    } // 2. If this’s guard is \"immutable\", then throw a TypeError.\n    // 3. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 4. Otherwise, if this’s guard is \"request-no-cors\", name\n    //    is not a no-CORS-safelisted request-header name, and\n    //    name is not a privileged no-CORS request-header name,\n    //    return.\n    // 5. Otherwise, if this’s guard is \"response\" and name is\n    //    a forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n\n\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable');\n    } else if (this[kGuard] === 'request-no-cors') {// TODO\n    } // 6. If this’s header list does not contain name, then\n    //    return.\n\n\n    if (!this[kHeadersList].contains(name)) {\n      return;\n    } // 7. Delete name from this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this.\n\n\n    return this[kHeadersList].delete(name);\n  } // https://fetch.spec.whatwg.org/#dom-headers-get\n\n\n  get(name) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(`Failed to execute 'get' on 'Headers': 1 argument required, but only ${arguments.length} present.`);\n    }\n\n    name = webidl.converters.ByteString(name); // 1. If name is not a header name, then throw a TypeError.\n\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.get',\n        value: name,\n        type: 'header name'\n      });\n    } // 2. Return the result of getting name from this’s header\n    //    list.\n\n\n    return this[kHeadersList].get(name);\n  } // https://fetch.spec.whatwg.org/#dom-headers-has\n\n\n  has(name) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(`Failed to execute 'has' on 'Headers': 1 argument required, but only ${arguments.length} present.`);\n    }\n\n    name = webidl.converters.ByteString(name); // 1. If name is not a header name, then throw a TypeError.\n\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.has',\n        value: name,\n        type: 'header name'\n      });\n    } // 2. Return true if this’s header list contains name;\n    //    otherwise false.\n\n\n    return this[kHeadersList].contains(name);\n  } // https://fetch.spec.whatwg.org/#dom-headers-set\n\n\n  set(name, value) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to execute 'set' on 'Headers': 2 arguments required, but only ${arguments.length} present.`);\n    }\n\n    name = webidl.converters.ByteString(name);\n    value = webidl.converters.ByteString(value); // 1. Normalize value.\n\n    value = headerValueNormalize(value); // 2. If name is not a header name or value is not a\n    //    header value, then throw a TypeError.\n\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.set',\n        value: name,\n        type: 'header name'\n      });\n    } else if (!isValidHeaderValue(value)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.set',\n        value,\n        type: 'header value'\n      });\n    } // 3. If this’s guard is \"immutable\", then throw a TypeError.\n    // 4. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 5. Otherwise, if this’s guard is \"request-no-cors\" and\n    //    name/value is not a no-CORS-safelisted request-header,\n    //    return.\n    // 6. Otherwise, if this’s guard is \"response\" and name is a\n    //    forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n\n\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable');\n    } else if (this[kGuard] === 'request-no-cors') {// TODO\n    } // 7. Set (name, value) in this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this\n\n\n    return this[kHeadersList].set(name, value);\n  }\n\n  get [kHeadersSortedMap]() {\n    if (!this[kHeadersList][kHeadersSortedMap]) {\n      this[kHeadersList][kHeadersSortedMap] = new Map([...this[kHeadersList]].sort((a, b) => a[0] < b[0] ? -1 : 1));\n    }\n\n    return this[kHeadersList][kHeadersSortedMap];\n  }\n\n  keys() {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n\n    return makeIterator(this[kHeadersSortedMap].keys(), 'Headers');\n  }\n\n  values() {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n\n    return makeIterator(this[kHeadersSortedMap].values(), 'Headers');\n  }\n\n  entries() {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n\n    return makeIterator(this[kHeadersSortedMap].entries(), 'Headers');\n  }\n  /**\n   * @param {(value: string, key: string, self: Headers) => void} callbackFn\n   * @param {unknown} thisArg\n   */\n\n\n  forEach(callbackFn) {\n    let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalThis;\n\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(`Failed to execute 'forEach' on 'Headers': 1 argument required, but only ${arguments.length} present.`);\n    }\n\n    if (typeof callbackFn !== 'function') {\n      throw new TypeError(\"Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'.\");\n    }\n\n    for (const [key, value] of this) {\n      callbackFn.apply(thisArg, [value, key, this]);\n    }\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n\n    return this[kHeadersList];\n  }\n\n}\n\nHeaders.prototype[Symbol.iterator] = Headers.prototype.entries;\nObject.defineProperties(Headers.prototype, {\n  append: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  get: kEnumerableProperty,\n  has: kEnumerableProperty,\n  set: kEnumerableProperty,\n  keys: kEnumerableProperty,\n  values: kEnumerableProperty,\n  entries: kEnumerableProperty,\n  forEach: kEnumerableProperty\n});\n\nwebidl.converters.HeadersInit = function (V) {\n  if (webidl.util.Type(V) === 'Object') {\n    if (V[Symbol.iterator]) {\n      return webidl.converters['sequence<sequence<ByteString>>'](V);\n    }\n\n    return webidl.converters['record<ByteString, ByteString>'](V);\n  }\n\n  webidl.errors.conversionFailed({\n    prefix: 'Headers constructor',\n    argument: 'Argument 1',\n    types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n  });\n};\n\nmodule.exports = {\n  fill,\n  Headers,\n  HeadersList\n};","map":{"version":3,"names":["kHeadersList","require","kGuard","kEnumerableProperty","makeIterator","isValidHeaderName","isValidHeaderValue","webidl","kHeadersMap","Symbol","kHeadersSortedMap","headerValueNormalize","potentialValue","replace","fill","headers","object","Array","isArray","header","length","errors","exception","message","append","key","value","Object","entries","conversionFailed","prefix","argument","types","HeadersList","constructor","init","Map","contains","name","toLowerCase","has","clear","exists","get","set","delete","keys","values","iterator","Headers","undefined","converters","HeadersInit","toStringTag","TypeError","arguments","ByteString","invalidArgument","type","sort","a","b","forEach","callbackFn","thisArg","globalThis","apply","for","prototype","defineProperties","V","util","Type","module","exports"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/undici/lib/fetch/headers.js"],"sourcesContent":["// https://github.com/Ethan-Arrowood/undici-fetch\n\n'use strict'\n\nconst { kHeadersList } = require('../core/symbols')\nconst { kGuard } = require('./symbols')\nconst { kEnumerableProperty } = require('../core/util')\nconst {\n  makeIterator,\n  isValidHeaderName,\n  isValidHeaderValue\n} = require('./util')\nconst { webidl } = require('./webidl')\n\nconst kHeadersMap = Symbol('headers map')\nconst kHeadersSortedMap = Symbol('headers map sorted')\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-header-value-normalize\n * @param {string} potentialValue\n */\nfunction headerValueNormalize (potentialValue) {\n  //  To normalize a byte sequence potentialValue, remove\n  //  any leading and trailing HTTP whitespace bytes from\n  //  potentialValue.\n  return potentialValue.replace(\n    /^[\\r\\n\\t ]+|[\\r\\n\\t ]+$/g,\n    ''\n  )\n}\n\nfunction fill (headers, object) {\n  // To fill a Headers object headers with a given object object, run these steps:\n\n  // 1. If object is a sequence, then for each header in object:\n  // Note: webidl conversion to array has already been done.\n  if (Array.isArray(object)) {\n    for (const header of object) {\n      // 1. If header does not contain exactly two items, then throw a TypeError.\n      if (header.length !== 2) {\n        webidl.errors.exception({\n          header: 'Headers constructor',\n          message: `expected name/value pair to be length 2, found ${header.length}.`\n        })\n      }\n\n      // 2. Append (header’s first item, header’s second item) to headers.\n      headers.append(header[0], header[1])\n    }\n  } else if (typeof object === 'object' && object !== null) {\n    // Note: null should throw\n\n    // 2. Otherwise, object is a record, then for each key → value in object,\n    //    append (key, value) to headers\n    for (const [key, value] of Object.entries(object)) {\n      headers.append(key, value)\n    }\n  } else {\n    webidl.errors.conversionFailed({\n      prefix: 'Headers constructor',\n      argument: 'Argument 1',\n      types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n    })\n  }\n}\n\nclass HeadersList {\n  constructor (init) {\n    if (init instanceof HeadersList) {\n      this[kHeadersMap] = new Map(init[kHeadersMap])\n      this[kHeadersSortedMap] = init[kHeadersSortedMap]\n    } else {\n      this[kHeadersMap] = new Map(init)\n      this[kHeadersSortedMap] = null\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#header-list-contains\n  contains (name) {\n    // A header list list contains a header name name if list\n    // contains a header whose name is a byte-case-insensitive\n    // match for name.\n    name = name.toLowerCase()\n\n    return this[kHeadersMap].has(name)\n  }\n\n  clear () {\n    this[kHeadersMap].clear()\n    this[kHeadersSortedMap] = null\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-append\n  append (name, value) {\n    this[kHeadersSortedMap] = null\n\n    // 1. If list contains name, then set name to the first such\n    //    header’s name.\n    name = name.toLowerCase()\n    const exists = this[kHeadersMap].get(name)\n\n    // 2. Append (name, value) to list.\n    if (exists) {\n      this[kHeadersMap].set(name, `${exists}, ${value}`)\n    } else {\n      this[kHeadersMap].set(name, `${value}`)\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-set\n  set (name, value) {\n    this[kHeadersSortedMap] = null\n    name = name.toLowerCase()\n\n    // 1. If list contains name, then set the value of\n    //    the first such header to value and remove the\n    //    others.\n    // 2. Otherwise, append header (name, value) to list.\n    return this[kHeadersMap].set(name, value)\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-delete\n  delete (name) {\n    this[kHeadersSortedMap] = null\n\n    name = name.toLowerCase()\n    return this[kHeadersMap].delete(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-get\n  get (name) {\n    name = name.toLowerCase()\n\n    // 1. If list does not contain name, then return null.\n    if (!this.contains(name)) {\n      return null\n    }\n\n    // 2. Return the values of all headers in list whose name\n    //    is a byte-case-insensitive match for name,\n    //    separated from each other by 0x2C 0x20, in order.\n    return this[kHeadersMap].get(name) ?? null\n  }\n\n  has (name) {\n    name = name.toLowerCase()\n    return this[kHeadersMap].has(name)\n  }\n\n  keys () {\n    return this[kHeadersMap].keys()\n  }\n\n  values () {\n    return this[kHeadersMap].values()\n  }\n\n  entries () {\n    return this[kHeadersMap].entries()\n  }\n\n  [Symbol.iterator] () {\n    return this[kHeadersMap][Symbol.iterator]()\n  }\n}\n\n// https://fetch.spec.whatwg.org/#headers-class\nclass Headers {\n  constructor (init = undefined) {\n    this[kHeadersList] = new HeadersList()\n\n    // The new Headers(init) constructor steps are:\n\n    // 1. Set this’s guard to \"none\".\n    this[kGuard] = 'none'\n\n    // 2. If init is given, then fill this with init.\n    if (init !== undefined) {\n      init = webidl.converters.HeadersInit(init)\n      fill(this, init)\n    }\n  }\n\n  get [Symbol.toStringTag] () {\n    return this.constructor.name\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-append\n  append (name, value) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    if (arguments.length < 2) {\n      throw new TypeError(\n        `Failed to execute 'append' on 'Headers': 2 arguments required, but only ${arguments.length} present.`\n      )\n    }\n\n    name = webidl.converters.ByteString(name)\n    value = webidl.converters.ByteString(value)\n\n    // 1. Normalize value.\n    value = headerValueNormalize(value)\n\n    // 2. If name is not a header name or value is not a\n    //    header value, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.append',\n        value: name,\n        type: 'header name'\n      })\n    } else if (!isValidHeaderValue(value)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.append',\n        value,\n        type: 'header value'\n      })\n    }\n\n    // 3. If headers’s guard is \"immutable\", then throw a TypeError.\n    // 4. Otherwise, if headers’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable')\n    } else if (this[kGuard] === 'request-no-cors') {\n      // 5. Otherwise, if headers’s guard is \"request-no-cors\":\n      // TODO\n    }\n\n    // 6. Otherwise, if headers’s guard is \"response\" and name is a\n    //    forbidden response-header name, return.\n\n    // 7. Append (name, value) to headers’s header list.\n    // 8. If headers’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from headers\n    return this[kHeadersList].append(name, value)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-delete\n  delete (name) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        `Failed to execute 'delete' on 'Headers': 1 argument required, but only ${arguments.length} present.`\n      )\n    }\n\n    name = webidl.converters.ByteString(name)\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.delete',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. If this’s guard is \"immutable\", then throw a TypeError.\n    // 3. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 4. Otherwise, if this’s guard is \"request-no-cors\", name\n    //    is not a no-CORS-safelisted request-header name, and\n    //    name is not a privileged no-CORS request-header name,\n    //    return.\n    // 5. Otherwise, if this’s guard is \"response\" and name is\n    //    a forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable')\n    } else if (this[kGuard] === 'request-no-cors') {\n      // TODO\n    }\n\n    // 6. If this’s header list does not contain name, then\n    //    return.\n    if (!this[kHeadersList].contains(name)) {\n      return\n    }\n\n    // 7. Delete name from this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this.\n    return this[kHeadersList].delete(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-get\n  get (name) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        `Failed to execute 'get' on 'Headers': 1 argument required, but only ${arguments.length} present.`\n      )\n    }\n\n    name = webidl.converters.ByteString(name)\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.get',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. Return the result of getting name from this’s header\n    //    list.\n    return this[kHeadersList].get(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-has\n  has (name) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        `Failed to execute 'has' on 'Headers': 1 argument required, but only ${arguments.length} present.`\n      )\n    }\n\n    name = webidl.converters.ByteString(name)\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.has',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. Return true if this’s header list contains name;\n    //    otherwise false.\n    return this[kHeadersList].contains(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-set\n  set (name, value) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    if (arguments.length < 2) {\n      throw new TypeError(\n        `Failed to execute 'set' on 'Headers': 2 arguments required, but only ${arguments.length} present.`\n      )\n    }\n\n    name = webidl.converters.ByteString(name)\n    value = webidl.converters.ByteString(value)\n\n    // 1. Normalize value.\n    value = headerValueNormalize(value)\n\n    // 2. If name is not a header name or value is not a\n    //    header value, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.set',\n        value: name,\n        type: 'header name'\n      })\n    } else if (!isValidHeaderValue(value)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.set',\n        value,\n        type: 'header value'\n      })\n    }\n\n    // 3. If this’s guard is \"immutable\", then throw a TypeError.\n    // 4. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 5. Otherwise, if this’s guard is \"request-no-cors\" and\n    //    name/value is not a no-CORS-safelisted request-header,\n    //    return.\n    // 6. Otherwise, if this’s guard is \"response\" and name is a\n    //    forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable')\n    } else if (this[kGuard] === 'request-no-cors') {\n      // TODO\n    }\n\n    // 7. Set (name, value) in this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this\n    return this[kHeadersList].set(name, value)\n  }\n\n  get [kHeadersSortedMap] () {\n    if (!this[kHeadersList][kHeadersSortedMap]) {\n      this[kHeadersList][kHeadersSortedMap] = new Map([...this[kHeadersList]].sort((a, b) => a[0] < b[0] ? -1 : 1))\n    }\n    return this[kHeadersList][kHeadersSortedMap]\n  }\n\n  keys () {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    return makeIterator(this[kHeadersSortedMap].keys(), 'Headers')\n  }\n\n  values () {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    return makeIterator(this[kHeadersSortedMap].values(), 'Headers')\n  }\n\n  entries () {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    return makeIterator(this[kHeadersSortedMap].entries(), 'Headers')\n  }\n\n  /**\n   * @param {(value: string, key: string, self: Headers) => void} callbackFn\n   * @param {unknown} thisArg\n   */\n  forEach (callbackFn, thisArg = globalThis) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        `Failed to execute 'forEach' on 'Headers': 1 argument required, but only ${arguments.length} present.`\n      )\n    }\n\n    if (typeof callbackFn !== 'function') {\n      throw new TypeError(\n        \"Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'.\"\n      )\n    }\n\n    for (const [key, value] of this) {\n      callbackFn.apply(thisArg, [value, key, this])\n    }\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    return this[kHeadersList]\n  }\n}\n\nHeaders.prototype[Symbol.iterator] = Headers.prototype.entries\n\nObject.defineProperties(Headers.prototype, {\n  append: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  get: kEnumerableProperty,\n  has: kEnumerableProperty,\n  set: kEnumerableProperty,\n  keys: kEnumerableProperty,\n  values: kEnumerableProperty,\n  entries: kEnumerableProperty,\n  forEach: kEnumerableProperty\n})\n\nwebidl.converters.HeadersInit = function (V) {\n  if (webidl.util.Type(V) === 'Object') {\n    if (V[Symbol.iterator]) {\n      return webidl.converters['sequence<sequence<ByteString>>'](V)\n    }\n\n    return webidl.converters['record<ByteString, ByteString>'](V)\n  }\n\n  webidl.errors.conversionFailed({\n    prefix: 'Headers constructor',\n    argument: 'Argument 1',\n    types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n  })\n}\n\nmodule.exports = {\n  fill,\n  Headers,\n  HeadersList\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}