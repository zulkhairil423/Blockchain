{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\n\nconst _assert_js_1 = require(\"./_assert.js\");\n\nconst hmac_js_1 = require(\"./hmac.js\");\n\nconst utils_js_1 = require(\"./utils.js\"); // Common prologue and epilogue for sync/async functions\n\n\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n  _assert_js_1.default.hash(hash);\n\n  const opts = (0, utils_js_1.checkOpts)({\n    dkLen: 32,\n    asyncTick: 10\n  }, _opts);\n  const {\n    c,\n    dkLen,\n    asyncTick\n  } = opts;\n\n  _assert_js_1.default.number(c);\n\n  _assert_js_1.default.number(dkLen);\n\n  _assert_js_1.default.number(asyncTick);\n\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = (0, utils_js_1.toBytes)(_password);\n  const salt = (0, utils_js_1.toBytes)(_salt); // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n\n  const DK = new Uint8Array(dkLen); // U1 = PRF(Password, Salt + INT_32_BE(i))\n\n  const PRF = hmac_js_1.hmac.create(hash, password);\n\n  const PRFSalt = PRF._cloneInto().update(salt);\n\n  return {\n    c,\n    dkLen,\n    asyncTick,\n    DK,\n    PRF,\n    PRFSalt\n  };\n}\n\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\n\n\nfunction pbkdf2(hash, password, salt, opts) {\n  const {\n    c,\n    dkLen,\n    DK,\n    PRF,\n    PRFSalt\n  } = pbkdf2Init(hash, password, salt, opts);\n  let prfW; // Working copy\n\n  const arr = new Uint8Array(4);\n  const view = (0, utils_js_1.createView)(arr);\n  const u = new Uint8Array(PRF.outputLen); // DK = T1 + T2 + ⋯ + Tdklen/hlen\n\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false); // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n\n    Ti.set(u.subarray(0, Ti.length));\n\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexports.pbkdf2 = pbkdf2;\n\nasync function pbkdf2Async(hash, password, salt, opts) {\n  const {\n    c,\n    dkLen,\n    asyncTick,\n    DK,\n    PRF,\n    PRFSalt\n  } = pbkdf2Init(hash, password, salt, opts);\n  let prfW; // Working copy\n\n  const arr = new Uint8Array(4);\n  const view = (0, utils_js_1.createView)(arr);\n  const u = new Uint8Array(PRF.outputLen); // DK = T1 + T2 + ⋯ + Tdklen/hlen\n\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false); // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n\n    Ti.set(u.subarray(0, Ti.length));\n    await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, i => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexports.pbkdf2Async = pbkdf2Async;","map":{"version":3,"names":["Object","defineProperty","exports","value","pbkdf2Async","pbkdf2","_assert_js_1","require","hmac_js_1","utils_js_1","pbkdf2Init","hash","_password","_salt","_opts","default","opts","checkOpts","dkLen","asyncTick","c","number","Error","password","toBytes","salt","DK","Uint8Array","PRF","hmac","create","PRFSalt","_cloneInto","update","pbkdf2Output","prfW","u","destroy","fill","arr","view","createView","outputLen","ti","pos","Ti","subarray","setInt32","digestInto","set","length","ui","i","asyncLoop"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/@noble/hashes/pbkdf2.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst hmac_js_1 = require(\"./hmac.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    _assert_js_1.default.hash(hash);\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    _assert_js_1.default.number(c);\n    _assert_js_1.default.number(dkLen);\n    _assert_js_1.default.number(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0, utils_js_1.toBytes)(_password);\n    const salt = (0, utils_js_1.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac_js_1.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2Async = pbkdf2Async;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsBF,OAAO,CAACG,MAAR,GAAiB,KAAK,CAA5C;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B,C,CACA;;;AACA,SAASG,UAAT,CAAoBC,IAApB,EAA0BC,SAA1B,EAAqCC,KAArC,EAA4CC,KAA5C,EAAmD;EAC/CR,YAAY,CAACS,OAAb,CAAqBJ,IAArB,CAA0BA,IAA1B;;EACA,MAAMK,IAAI,GAAG,CAAC,GAAGP,UAAU,CAACQ,SAAf,EAA0B;IAAEC,KAAK,EAAE,EAAT;IAAaC,SAAS,EAAE;EAAxB,CAA1B,EAAwDL,KAAxD,CAAb;EACA,MAAM;IAAEM,CAAF;IAAKF,KAAL;IAAYC;EAAZ,IAA0BH,IAAhC;;EACAV,YAAY,CAACS,OAAb,CAAqBM,MAArB,CAA4BD,CAA5B;;EACAd,YAAY,CAACS,OAAb,CAAqBM,MAArB,CAA4BH,KAA5B;;EACAZ,YAAY,CAACS,OAAb,CAAqBM,MAArB,CAA4BF,SAA5B;;EACA,IAAIC,CAAC,GAAG,CAAR,EACI,MAAM,IAAIE,KAAJ,CAAU,uCAAV,CAAN;EACJ,MAAMC,QAAQ,GAAG,CAAC,GAAGd,UAAU,CAACe,OAAf,EAAwBZ,SAAxB,CAAjB;EACA,MAAMa,IAAI,GAAG,CAAC,GAAGhB,UAAU,CAACe,OAAf,EAAwBX,KAAxB,CAAb,CAV+C,CAW/C;;EACA,MAAMa,EAAE,GAAG,IAAIC,UAAJ,CAAeT,KAAf,CAAX,CAZ+C,CAa/C;;EACA,MAAMU,GAAG,GAAGpB,SAAS,CAACqB,IAAV,CAAeC,MAAf,CAAsBnB,IAAtB,EAA4BY,QAA5B,CAAZ;;EACA,MAAMQ,OAAO,GAAGH,GAAG,CAACI,UAAJ,GAAiBC,MAAjB,CAAwBR,IAAxB,CAAhB;;EACA,OAAO;IAAEL,CAAF;IAAKF,KAAL;IAAYC,SAAZ;IAAuBO,EAAvB;IAA2BE,GAA3B;IAAgCG;EAAhC,CAAP;AACH;;AACD,SAASG,YAAT,CAAsBN,GAAtB,EAA2BG,OAA3B,EAAoCL,EAApC,EAAwCS,IAAxC,EAA8CC,CAA9C,EAAiD;EAC7CR,GAAG,CAACS,OAAJ;EACAN,OAAO,CAACM,OAAR;EACA,IAAIF,IAAJ,EACIA,IAAI,CAACE,OAAL;EACJD,CAAC,CAACE,IAAF,CAAO,CAAP;EACA,OAAOZ,EAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASrB,MAAT,CAAgBM,IAAhB,EAAsBY,QAAtB,EAAgCE,IAAhC,EAAsCT,IAAtC,EAA4C;EACxC,MAAM;IAAEI,CAAF;IAAKF,KAAL;IAAYQ,EAAZ;IAAgBE,GAAhB;IAAqBG;EAArB,IAAiCrB,UAAU,CAACC,IAAD,EAAOY,QAAP,EAAiBE,IAAjB,EAAuBT,IAAvB,CAAjD;EACA,IAAImB,IAAJ,CAFwC,CAE9B;;EACV,MAAMI,GAAG,GAAG,IAAIZ,UAAJ,CAAe,CAAf,CAAZ;EACA,MAAMa,IAAI,GAAG,CAAC,GAAG/B,UAAU,CAACgC,UAAf,EAA2BF,GAA3B,CAAb;EACA,MAAMH,CAAC,GAAG,IAAIT,UAAJ,CAAeC,GAAG,CAACc,SAAnB,CAAV,CALwC,CAMxC;;EACA,KAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,GAAG,GAAG,CAAvB,EAA0BA,GAAG,GAAG1B,KAAhC,EAAuCyB,EAAE,IAAIC,GAAG,IAAIhB,GAAG,CAACc,SAAxD,EAAmE;IAC/D;IACA,MAAMG,EAAE,GAAGnB,EAAE,CAACoB,QAAH,CAAYF,GAAZ,EAAiBA,GAAG,GAAGhB,GAAG,CAACc,SAA3B,CAAX;IACAF,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBJ,EAAjB,EAAqB,KAArB,EAH+D,CAI/D;IACA;;IACA,CAACR,IAAI,GAAGJ,OAAO,CAACC,UAAR,CAAmBG,IAAnB,CAAR,EAAkCF,MAAlC,CAAyCM,GAAzC,EAA8CS,UAA9C,CAAyDZ,CAAzD;;IACAS,EAAE,CAACI,GAAH,CAAOb,CAAC,CAACU,QAAF,CAAW,CAAX,EAAcD,EAAE,CAACK,MAAjB,CAAP;;IACA,KAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG/B,CAAtB,EAAyB+B,EAAE,EAA3B,EAA+B;MAC3B;MACAvB,GAAG,CAACI,UAAJ,CAAeG,IAAf,EAAqBF,MAArB,CAA4BG,CAA5B,EAA+BY,UAA/B,CAA0CZ,CAA1C;;MACA,KAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,EAAE,CAACK,MAAvB,EAA+BE,CAAC,EAAhC,EACIP,EAAE,CAACO,CAAD,CAAF,IAAShB,CAAC,CAACgB,CAAD,CAAV;IACP;EACJ;;EACD,OAAOlB,YAAY,CAACN,GAAD,EAAMG,OAAN,EAAeL,EAAf,EAAmBS,IAAnB,EAAyBC,CAAzB,CAAnB;AACH;;AACDlC,OAAO,CAACG,MAAR,GAAiBA,MAAjB;;AACA,eAAeD,WAAf,CAA2BO,IAA3B,EAAiCY,QAAjC,EAA2CE,IAA3C,EAAiDT,IAAjD,EAAuD;EACnD,MAAM;IAAEI,CAAF;IAAKF,KAAL;IAAYC,SAAZ;IAAuBO,EAAvB;IAA2BE,GAA3B;IAAgCG;EAAhC,IAA4CrB,UAAU,CAACC,IAAD,EAAOY,QAAP,EAAiBE,IAAjB,EAAuBT,IAAvB,CAA5D;EACA,IAAImB,IAAJ,CAFmD,CAEzC;;EACV,MAAMI,GAAG,GAAG,IAAIZ,UAAJ,CAAe,CAAf,CAAZ;EACA,MAAMa,IAAI,GAAG,CAAC,GAAG/B,UAAU,CAACgC,UAAf,EAA2BF,GAA3B,CAAb;EACA,MAAMH,CAAC,GAAG,IAAIT,UAAJ,CAAeC,GAAG,CAACc,SAAnB,CAAV,CALmD,CAMnD;;EACA,KAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,GAAG,GAAG,CAAvB,EAA0BA,GAAG,GAAG1B,KAAhC,EAAuCyB,EAAE,IAAIC,GAAG,IAAIhB,GAAG,CAACc,SAAxD,EAAmE;IAC/D;IACA,MAAMG,EAAE,GAAGnB,EAAE,CAACoB,QAAH,CAAYF,GAAZ,EAAiBA,GAAG,GAAGhB,GAAG,CAACc,SAA3B,CAAX;IACAF,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBJ,EAAjB,EAAqB,KAArB,EAH+D,CAI/D;IACA;;IACA,CAACR,IAAI,GAAGJ,OAAO,CAACC,UAAR,CAAmBG,IAAnB,CAAR,EAAkCF,MAAlC,CAAyCM,GAAzC,EAA8CS,UAA9C,CAAyDZ,CAAzD;;IACAS,EAAE,CAACI,GAAH,CAAOb,CAAC,CAACU,QAAF,CAAW,CAAX,EAAcD,EAAE,CAACK,MAAjB,CAAP;IACA,MAAM,CAAC,GAAGzC,UAAU,CAAC4C,SAAf,EAA0BjC,CAAC,GAAG,CAA9B,EAAiCD,SAAjC,EAA6CiC,CAAD,IAAO;MACrD;MACAxB,GAAG,CAACI,UAAJ,CAAeG,IAAf,EAAqBF,MAArB,CAA4BG,CAA5B,EAA+BY,UAA/B,CAA0CZ,CAA1C;;MACA,KAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,EAAE,CAACK,MAAvB,EAA+BE,CAAC,EAAhC,EACIP,EAAE,CAACO,CAAD,CAAF,IAAShB,CAAC,CAACgB,CAAD,CAAV;IACP,CALK,CAAN;EAMH;;EACD,OAAOlB,YAAY,CAACN,GAAD,EAAMG,OAAN,EAAeL,EAAf,EAAmBS,IAAnB,EAAyBC,CAAzB,CAAnB;AACH;;AACDlC,OAAO,CAACE,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"script"}