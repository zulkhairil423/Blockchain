{"ast":null,"code":"var util = require('util');\n\nmodule.exports = function tsort(initial) {\n  var graph = new Graph();\n\n  if (initial) {\n    initial.forEach(function (entry) {\n      Graph.prototype.add.apply(graph, entry);\n    });\n  }\n\n  return graph;\n};\n\nfunction Graph() {\n  this.nodes = {};\n} // Add sorted items to the graph\n\n\nGraph.prototype.add = function () {\n  var self = this;\n  var items = [].slice.call(arguments);\n  if (items.length == 1 && util.isArray(items[0])) items = items[0];\n  items.forEach(function (item) {\n    if (!self.nodes[item]) self.nodes[item] = [];\n  });\n\n  for (var i = 1; i < items.length; i++) {\n    var from = items[i];\n    var to = items[i - 1];\n    self.nodes[from].push(to);\n  }\n\n  return self;\n}; // Depth first search\n// As given in http://en.wikipedia.org/wiki/Topological_sorting\n\n\nGraph.prototype.sort = function () {\n  var self = this;\n  var nodes = Object.keys(this.nodes);\n  var sorted = [];\n  var marks = {};\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (!marks[node]) visit(node);\n  }\n\n  return sorted;\n\n  function visit(node) {\n    if (marks[node] === 'temp') throw new Error(\"There is a cycle in the graph. It is not possible to derive a topological sort.\");else if (marks[node]) return;\n    marks[node] = 'temp';\n    self.nodes[node].forEach(visit);\n    marks[node] = 'perm';\n    sorted.push(node);\n  }\n};","map":{"version":3,"names":["util","require","module","exports","tsort","initial","graph","Graph","forEach","entry","prototype","add","apply","nodes","self","items","slice","call","arguments","length","isArray","item","i","from","to","push","sort","Object","keys","sorted","marks","node","visit","Error"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/tsort/index.js"],"sourcesContent":["var util = require('util');\n\nmodule.exports = function tsort(initial) {\n  var graph = new Graph();\n\n  if (initial) {\n    initial.forEach(function(entry) {\n      Graph.prototype.add.apply(graph, entry);\n    });\n  }\n\n  return graph;\n}\n\nfunction Graph() {\n  this.nodes = {};\n}\n\n// Add sorted items to the graph\nGraph.prototype.add = function() {\n  var self = this;\n  var items = [].slice.call(arguments);\n\n  if (items.length == 1 && util.isArray(items[0]))\n    items = items[0];\n\n  items.forEach(function(item) {\n    if (!self.nodes[item])\n      self.nodes[item] = [];\n  });\n\n  for (var i = 1; i < items.length; i++) {\n    var from = items[i];\n    var to = items[i - 1];\n\n    self.nodes[from].push(to);\n  }\n\n  return self;\n};\n\n// Depth first search\n// As given in http://en.wikipedia.org/wiki/Topological_sorting\nGraph.prototype.sort = function() {\n  var self = this;\n  var nodes = Object.keys(this.nodes);\n\n  var sorted = [];\n  var marks = {};\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n\n    if (!marks[node])\n      visit(node);\n  }\n\n  return sorted;\n\n  function visit(node) {\n    if (marks[node] === 'temp')\n      throw new Error(\"There is a cycle in the graph. It is not possible to derive a topological sort.\");\n    else if (marks[node])\n      return;\n\n    marks[node] = 'temp';\n    self.nodes[node].forEach(visit);\n    marks[node] = 'perm';\n\n    sorted.push(node);\n  }\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,OAAf,EAAwB;EACvC,IAAIC,KAAK,GAAG,IAAIC,KAAJ,EAAZ;;EAEA,IAAIF,OAAJ,EAAa;IACXA,OAAO,CAACG,OAAR,CAAgB,UAASC,KAAT,EAAgB;MAC9BF,KAAK,CAACG,SAAN,CAAgBC,GAAhB,CAAoBC,KAApB,CAA0BN,KAA1B,EAAiCG,KAAjC;IACD,CAFD;EAGD;;EAED,OAAOH,KAAP;AACD,CAVD;;AAYA,SAASC,KAAT,GAAiB;EACf,KAAKM,KAAL,GAAa,EAAb;AACD,C,CAED;;;AACAN,KAAK,CAACG,SAAN,CAAgBC,GAAhB,GAAsB,YAAW;EAC/B,IAAIG,IAAI,GAAG,IAAX;EACA,IAAIC,KAAK,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcC,SAAd,CAAZ;EAEA,IAAIH,KAAK,CAACI,MAAN,IAAgB,CAAhB,IAAqBnB,IAAI,CAACoB,OAAL,CAAaL,KAAK,CAAC,CAAD,CAAlB,CAAzB,EACEA,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAb;EAEFA,KAAK,CAACP,OAAN,CAAc,UAASa,IAAT,EAAe;IAC3B,IAAI,CAACP,IAAI,CAACD,KAAL,CAAWQ,IAAX,CAAL,EACEP,IAAI,CAACD,KAAL,CAAWQ,IAAX,IAAmB,EAAnB;EACH,CAHD;;EAKA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACI,MAA1B,EAAkCG,CAAC,EAAnC,EAAuC;IACrC,IAAIC,IAAI,GAAGR,KAAK,CAACO,CAAD,CAAhB;IACA,IAAIE,EAAE,GAAGT,KAAK,CAACO,CAAC,GAAG,CAAL,CAAd;IAEAR,IAAI,CAACD,KAAL,CAAWU,IAAX,EAAiBE,IAAjB,CAAsBD,EAAtB;EACD;;EAED,OAAOV,IAAP;AACD,CApBD,C,CAsBA;AACA;;;AACAP,KAAK,CAACG,SAAN,CAAgBgB,IAAhB,GAAuB,YAAW;EAChC,IAAIZ,IAAI,GAAG,IAAX;EACA,IAAID,KAAK,GAAGc,MAAM,CAACC,IAAP,CAAY,KAAKf,KAAjB,CAAZ;EAEA,IAAIgB,MAAM,GAAG,EAAb;EACA,IAAIC,KAAK,GAAG,EAAZ;;EAEA,KAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAAK,CAACM,MAA1B,EAAkCG,CAAC,EAAnC,EAAuC;IACrC,IAAIS,IAAI,GAAGlB,KAAK,CAACS,CAAD,CAAhB;IAEA,IAAI,CAACQ,KAAK,CAACC,IAAD,CAAV,EACEC,KAAK,CAACD,IAAD,CAAL;EACH;;EAED,OAAOF,MAAP;;EAEA,SAASG,KAAT,CAAeD,IAAf,EAAqB;IACnB,IAAID,KAAK,CAACC,IAAD,CAAL,KAAgB,MAApB,EACE,MAAM,IAAIE,KAAJ,CAAU,iFAAV,CAAN,CADF,KAEK,IAAIH,KAAK,CAACC,IAAD,CAAT,EACH;IAEFD,KAAK,CAACC,IAAD,CAAL,GAAc,MAAd;IACAjB,IAAI,CAACD,KAAL,CAAWkB,IAAX,EAAiBvB,OAAjB,CAAyBwB,KAAzB;IACAF,KAAK,CAACC,IAAD,CAAL,GAAc,MAAd;IAEAF,MAAM,CAACJ,IAAP,CAAYM,IAAZ;EACD;AACF,CA5BD"},"metadata":{},"sourceType":"script"}