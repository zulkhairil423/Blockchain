{"ast":null,"code":"import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\n\nexport function initAndBind(clientClass, options) {\n  if (options.debug === true) {\n    logger.enable();\n  }\n\n  var hub = getCurrentHub();\n  var client = new clientClass(options);\n  hub.bindClient(client);\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,aAA9B;AAEA,SAASC,MAAT,QAAuB,eAAvB;AAKA;;;;;;;;AAOA,OAAM,SAAUC,WAAV,CAA2DC,WAA3D,EAA2FC,OAA3F,EAAqG;EACzG,IAAIA,OAAO,CAACC,KAAR,KAAkB,IAAtB,EAA4B;IAC1BJ,MAAM,CAACK,MAAP;EACD;;EACD,IAAMC,GAAG,GAAGP,aAAa,EAAzB;EACA,IAAMQ,MAAM,GAAG,IAAIL,WAAJ,CAAgBC,OAAhB,CAAf;EACAG,GAAG,CAACE,UAAJ,CAAeD,MAAf;AACD","names":["getCurrentHub","logger","initAndBind","clientClass","options","debug","enable","hub","client","bindClient"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\core\\src\\sdk.ts"],"sourcesContent":["import { getCurrentHub } from '@sentry/hub';\nimport { Client, Options } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\n/** A class object that can instantiate Client objects. */\nexport type ClientClass<F extends Client, O extends Options> = new (options: O) => F;\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind<F extends Client, O extends Options>(clientClass: ClientClass<F, O>, options: O): void {\n  if (options.debug === true) {\n    logger.enable();\n  }\n  const hub = getCurrentHub();\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n"]},"metadata":{},"sourceType":"module"}