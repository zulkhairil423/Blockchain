{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar inputPromise;\nexport var whenInput = function () {\n  if (!inputPromise) {\n    inputPromise = new Promise(function (r) {\n      return ['scroll', 'keydown', 'pointerdown'].map(function (type) {\n        addEventListener(type, r, {\n          once: true,\n          passive: true,\n          capture: true\n        });\n      });\n    });\n  }\n\n  return inputPromise;\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,IAAIA,YAAJ;AAEA,OAAO,IAAMC,SAAS,GAAG;EACvB,IAAI,CAACD,YAAL,EAAmB;IACjBA,YAAY,GAAG,IAAIE,OAAJ,CAAY,aAAC;MAC1B,OAAO,CAAC,QAAD,EAAW,SAAX,EAAsB,aAAtB,EAAqCC,GAArC,CAAyC,gBAAI;QAClDC,gBAAgB,CAACC,IAAD,EAAOC,CAAP,EAAU;UACxBC,IAAI,EAAE,IADkB;UAExBC,OAAO,EAAE,IAFe;UAGxBC,OAAO,EAAE;QAHe,CAAV,CAAhB;MAKD,CANM,CAAP;IAOD,CARc,CAAf;EASD;;EACD,OAAOT,YAAP;AACD,CAbM","names":["inputPromise","whenInput","Promise","map","addEventListener","type","r","once","passive","capture"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\tracing\\src\\browser\\web-vitals\\lib\\whenInput.ts"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet inputPromise: Promise<Event>;\n\nexport const whenInput = (): Promise<Event> => {\n  if (!inputPromise) {\n    inputPromise = new Promise(r => {\n      return ['scroll', 'keydown', 'pointerdown'].map(type => {\n        addEventListener(type, r, {\n          once: true,\n          passive: true,\n          capture: true,\n        });\n      });\n    });\n  }\n  return inputPromise;\n};\n"]},"metadata":{},"sourceType":"module"}