{"ast":null,"code":"'use strict';\n/**\n * Provides a factory function for a {@link StatsCollector} object.\n * @module\n */\n\nvar constants = require('./runner').constants;\n\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_TEST_END = constants.EVENT_TEST_END;\n/**\n * Test statistics collector.\n *\n * @public\n * @typedef {Object} StatsCollector\n * @property {number} suites - integer count of suites run.\n * @property {number} tests - integer count of tests run.\n * @property {number} passes - integer count of passing tests.\n * @property {number} pending - integer count of pending tests.\n * @property {number} failures - integer count of failed tests.\n * @property {Date} start - time when testing began.\n * @property {Date} end - time when testing concluded.\n * @property {number} duration - number of msecs that testing took.\n */\n\nvar Date = global.Date;\n/**\n * Provides stats such as test duration, number of tests passed / failed etc., by listening for events emitted by `runner`.\n *\n * @private\n * @param {Runner} runner - Runner instance\n * @throws {TypeError} If falsy `runner`\n */\n\nfunction createStatsCollector(runner) {\n  /**\n   * @type StatsCollector\n   */\n  var stats = {\n    suites: 0,\n    tests: 0,\n    passes: 0,\n    pending: 0,\n    failures: 0\n  };\n\n  if (!runner) {\n    throw new TypeError('Missing runner argument');\n  }\n\n  runner.stats = stats;\n  runner.once(EVENT_RUN_BEGIN, function () {\n    stats.start = new Date();\n  });\n  runner.on(EVENT_SUITE_BEGIN, function (suite) {\n    suite.root || stats.suites++;\n  });\n  runner.on(EVENT_TEST_PASS, function () {\n    stats.passes++;\n  });\n  runner.on(EVENT_TEST_FAIL, function () {\n    stats.failures++;\n  });\n  runner.on(EVENT_TEST_PENDING, function () {\n    stats.pending++;\n  });\n  runner.on(EVENT_TEST_END, function () {\n    stats.tests++;\n  });\n  runner.once(EVENT_RUN_END, function () {\n    stats.end = new Date();\n    stats.duration = stats.end - stats.start;\n  });\n}\n\nmodule.exports = createStatsCollector;","map":{"version":3,"names":["constants","require","EVENT_TEST_PASS","EVENT_TEST_FAIL","EVENT_SUITE_BEGIN","EVENT_RUN_BEGIN","EVENT_TEST_PENDING","EVENT_RUN_END","EVENT_TEST_END","Date","global","createStatsCollector","runner","stats","suites","tests","passes","pending","failures","TypeError","once","start","on","suite","root","end","duration","module","exports"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/mocha/lib/stats-collector.js"],"sourcesContent":["'use strict';\n\n/**\n * Provides a factory function for a {@link StatsCollector} object.\n * @module\n */\n\nvar constants = require('./runner').constants;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_TEST_END = constants.EVENT_TEST_END;\n\n/**\n * Test statistics collector.\n *\n * @public\n * @typedef {Object} StatsCollector\n * @property {number} suites - integer count of suites run.\n * @property {number} tests - integer count of tests run.\n * @property {number} passes - integer count of passing tests.\n * @property {number} pending - integer count of pending tests.\n * @property {number} failures - integer count of failed tests.\n * @property {Date} start - time when testing began.\n * @property {Date} end - time when testing concluded.\n * @property {number} duration - number of msecs that testing took.\n */\n\nvar Date = global.Date;\n\n/**\n * Provides stats such as test duration, number of tests passed / failed etc., by listening for events emitted by `runner`.\n *\n * @private\n * @param {Runner} runner - Runner instance\n * @throws {TypeError} If falsy `runner`\n */\nfunction createStatsCollector(runner) {\n  /**\n   * @type StatsCollector\n   */\n  var stats = {\n    suites: 0,\n    tests: 0,\n    passes: 0,\n    pending: 0,\n    failures: 0\n  };\n\n  if (!runner) {\n    throw new TypeError('Missing runner argument');\n  }\n\n  runner.stats = stats;\n\n  runner.once(EVENT_RUN_BEGIN, function () {\n    stats.start = new Date();\n  });\n  runner.on(EVENT_SUITE_BEGIN, function (suite) {\n    suite.root || stats.suites++;\n  });\n  runner.on(EVENT_TEST_PASS, function () {\n    stats.passes++;\n  });\n  runner.on(EVENT_TEST_FAIL, function () {\n    stats.failures++;\n  });\n  runner.on(EVENT_TEST_PENDING, function () {\n    stats.pending++;\n  });\n  runner.on(EVENT_TEST_END, function () {\n    stats.tests++;\n  });\n  runner.once(EVENT_RUN_END, function () {\n    stats.end = new Date();\n    stats.duration = stats.end - stats.start;\n  });\n}\n\nmodule.exports = createStatsCollector;\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBD,SAApC;;AACA,IAAIE,eAAe,GAAGF,SAAS,CAACE,eAAhC;AACA,IAAIC,eAAe,GAAGH,SAAS,CAACG,eAAhC;AACA,IAAIC,iBAAiB,GAAGJ,SAAS,CAACI,iBAAlC;AACA,IAAIC,eAAe,GAAGL,SAAS,CAACK,eAAhC;AACA,IAAIC,kBAAkB,GAAGN,SAAS,CAACM,kBAAnC;AACA,IAAIC,aAAa,GAAGP,SAAS,CAACO,aAA9B;AACA,IAAIC,cAAc,GAAGR,SAAS,CAACQ,cAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,oBAAT,CAA8BC,MAA9B,EAAsC;EACpC;AACF;AACA;EACE,IAAIC,KAAK,GAAG;IACVC,MAAM,EAAE,CADE;IAEVC,KAAK,EAAE,CAFG;IAGVC,MAAM,EAAE,CAHE;IAIVC,OAAO,EAAE,CAJC;IAKVC,QAAQ,EAAE;EALA,CAAZ;;EAQA,IAAI,CAACN,MAAL,EAAa;IACX,MAAM,IAAIO,SAAJ,CAAc,yBAAd,CAAN;EACD;;EAEDP,MAAM,CAACC,KAAP,GAAeA,KAAf;EAEAD,MAAM,CAACQ,IAAP,CAAYf,eAAZ,EAA6B,YAAY;IACvCQ,KAAK,CAACQ,KAAN,GAAc,IAAIZ,IAAJ,EAAd;EACD,CAFD;EAGAG,MAAM,CAACU,EAAP,CAAUlB,iBAAV,EAA6B,UAAUmB,KAAV,EAAiB;IAC5CA,KAAK,CAACC,IAAN,IAAcX,KAAK,CAACC,MAAN,EAAd;EACD,CAFD;EAGAF,MAAM,CAACU,EAAP,CAAUpB,eAAV,EAA2B,YAAY;IACrCW,KAAK,CAACG,MAAN;EACD,CAFD;EAGAJ,MAAM,CAACU,EAAP,CAAUnB,eAAV,EAA2B,YAAY;IACrCU,KAAK,CAACK,QAAN;EACD,CAFD;EAGAN,MAAM,CAACU,EAAP,CAAUhB,kBAAV,EAA8B,YAAY;IACxCO,KAAK,CAACI,OAAN;EACD,CAFD;EAGAL,MAAM,CAACU,EAAP,CAAUd,cAAV,EAA0B,YAAY;IACpCK,KAAK,CAACE,KAAN;EACD,CAFD;EAGAH,MAAM,CAACQ,IAAP,CAAYb,aAAZ,EAA2B,YAAY;IACrCM,KAAK,CAACY,GAAN,GAAY,IAAIhB,IAAJ,EAAZ;IACAI,KAAK,CAACa,QAAN,GAAiBb,KAAK,CAACY,GAAN,GAAYZ,KAAK,CAACQ,KAAnC;EACD,CAHD;AAID;;AAEDM,MAAM,CAACC,OAAP,GAAiBjB,oBAAjB"},"metadata":{},"sourceType":"script"}