{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unsafeObjectEntries = exports.unsafeObjectKeys = void 0;\n/**\n * This function is a typed version of `Object.keys`. Note that it's type\n * unsafe. You have to be sure that `o` has exactly the same keys as `T`.\n */\n\nexports.unsafeObjectKeys = Object.keys;\n/**\n * This function is a typed version of `Object.entries`. Note that it's type\n * unsafe. You have to be sure that `o` has exactly the same keys as `T`.\n */\n\nfunction unsafeObjectEntries(o) {\n  return Object.entries(o);\n}\n\nexports.unsafeObjectEntries = unsafeObjectEntries;","map":{"version":3,"mappings":";;;;;;AAAA;;;;;AAIaA,2BAAmBC,MAAM,CAACC,IAA1B;AAIb;;;;;AAIA,SAAgBC,mBAAhB,CAAuCC,CAAvC,EAA2C;EACzC,OAAOH,MAAM,CAACI,OAAP,CAAeD,CAAf,CAAP;AACD;;AAFDJ","names":["exports","Object","keys","unsafeObjectEntries","o","entries"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\hardhat\\src\\internal\\util\\unsafe.ts"],"sourcesContent":["/**\n * This function is a typed version of `Object.keys`. Note that it's type\n * unsafe. You have to be sure that `o` has exactly the same keys as `T`.\n */\nexport const unsafeObjectKeys = Object.keys as <T>(\n  o: T\n) => Array<Extract<keyof T, string>>;\n\n/**\n * This function is a typed version of `Object.entries`. Note that it's type\n * unsafe. You have to be sure that `o` has exactly the same keys as `T`.\n */\nexport function unsafeObjectEntries<T>(o: T) {\n  return Object.entries(o) as Array<[keyof T, T[keyof T]]>;\n}\n"]},"metadata":{},"sourceType":"script"}