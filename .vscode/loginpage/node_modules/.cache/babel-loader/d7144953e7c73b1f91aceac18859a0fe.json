{"ast":null,"code":"var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\n\nvar FunctionToString =\n/** @class */\nfunction () {\n  function FunctionToString() {\n    /**\n     * @inheritDoc\n     */\n    this.name = FunctionToString.id;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  FunctionToString.prototype.setupOnce = function () {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    Function.prototype.toString = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var context = this.__sentry_original__ || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  FunctionToString.id = 'FunctionToString';\n  return FunctionToString;\n}();\n\nexport { FunctionToString };","map":{"version":3,"mappings":"AAEA,IAAIA,wBAAJ;AAEA;;AACA;AAAA;AAAA;EAAA;IAME;;;IAGO,YAAeC,gBAAgB,CAACC,EAAhC;EAeR;EAbC;;;;;EAGOD,uCAAP;IACE;IACAD,wBAAwB,GAAGG,QAAQ,CAACC,SAAT,CAAmBC,QAA9C,CAFF,CAIE;;IACAF,QAAQ,CAACC,SAAT,CAAmBC,QAAnB,GAA8B;MAAgC;;WAAA,yCAAc;QAAdC;;;MAC5D,IAAMC,OAAO,GAAG,KAAKC,mBAAL,IAA4B,IAA5C;MACA,OAAOR,wBAAwB,CAACS,KAAzB,CAA+BF,OAA/B,EAAwCD,IAAxC,CAAP;IACD,CAHD;EAID,CATM;EAbP;;;;;EAGcL,sBAAa,kBAAb;EAoBhB;AAAC,CAxBD;;SAAaA","names":["originalFunctionToString","FunctionToString","id","Function","prototype","toString","args","context","__sentry_original__","apply"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\core\\src\\integrations\\functiontostring.ts"],"sourcesContent":["import { Integration, WrappedFunction } from '@sentry/types';\n\nlet originalFunctionToString: () => void;\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class FunctionToString implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'FunctionToString';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = FunctionToString.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Function.prototype.toString = function(this: WrappedFunction, ...args: any[]): string {\n      const context = this.__sentry_original__ || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}