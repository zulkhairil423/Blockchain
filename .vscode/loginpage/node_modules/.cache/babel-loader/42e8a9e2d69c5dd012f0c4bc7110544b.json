{"ast":null,"code":"var defaultFunctionName = '<anonymous>';\n/**\n * Safely extract function name from itself\n */\n\nexport function getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}","map":{"version":3,"mappings":"AAAA,IAAMA,mBAAmB,GAAG,aAA5B;AAEA;;;;AAGA,OAAM,SAAUC,eAAV,CAA0BC,EAA1B,EAAqC;EACzC,IAAI;IACF,IAAI,CAACA,EAAD,IAAO,OAAOA,EAAP,KAAc,UAAzB,EAAqC;MACnC,OAAOF,mBAAP;IACD;;IACD,OAAOE,EAAE,CAACC,IAAH,IAAWH,mBAAlB;EACD,CALD,CAKE,OAAOI,CAAP,EAAU;IACV;IACA;IACA,OAAOJ,mBAAP;EACD;AACF","names":["defaultFunctionName","getFunctionName","fn","name","e"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\utils\\src\\stacktrace.ts"],"sourcesContent":["const defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}