{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.showForkRecommendationsBannerIfNecessary = void 0;\n\nconst chalk_1 = __importDefault(require(\"chalk\"));\n\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\n\nconst path_1 = __importDefault(require(\"path\"));\n\nfunction getAlreadyShownFilePath(forkCachePath) {\n  return path_1.default.join(forkCachePath, \"recommendations-already-shown.json\");\n}\n\nfunction displayBanner() {\n  console.warn(chalk_1.default.yellow(`You're running a network fork starting from the latest block.\nPerformance may degrade due to fetching data from the network with each run.\nIf connecting to an archival node (e.g. Alchemy), we strongly recommend setting\nblockNumber to a fixed value to increase performance with a local cache.`));\n}\n\nasync function showForkRecommendationsBannerIfNecessary(currentNetworkConfig, forkCachePath) {\n  if (!(\"forking\" in currentNetworkConfig)) {\n    return;\n  }\n\n  if (currentNetworkConfig.forking?.enabled !== true) {\n    return;\n  }\n\n  if (currentNetworkConfig.forking?.blockNumber !== undefined) {\n    return;\n  }\n\n  const shownPath = getAlreadyShownFilePath(forkCachePath);\n\n  if (await fs_extra_1.default.pathExists(shownPath)) {\n    return;\n  }\n\n  displayBanner();\n  await fs_extra_1.default.ensureDir(path_1.default.dirname(shownPath));\n  await fs_extra_1.default.writeJSON(shownPath, true);\n}\n\nexports.showForkRecommendationsBannerIfNecessary = showForkRecommendationsBannerIfNecessary;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAIA,SAASA,uBAAT,CAAiCC,aAAjC,EAAsD;EACpD,OAAOC,eAAKC,IAAL,CAAUF,aAAV,EAAyB,oCAAzB,CAAP;AACD;;AAED,SAASG,aAAT,GAAsB;EACpBC,OAAO,CAACC,IAAR,CACEC,gBAAMC,MAAN,CACE;;;yEADF,CADF;AAQD;;AAEM,eAAeC,wCAAf,CACLC,oBADK,EAELT,aAFK,EAEgB;EAErB,IAAI,EAAE,aAAaS,oBAAf,CAAJ,EAA0C;IACxC;EACD;;EAED,IAAIA,oBAAoB,CAACC,OAArB,EAA8BC,OAA9B,KAA0C,IAA9C,EAAoD;IAClD;EACD;;EAED,IAAIF,oBAAoB,CAACC,OAArB,EAA8BE,WAA9B,KAA8CC,SAAlD,EAA6D;IAC3D;EACD;;EAED,MAAMC,SAAS,GAAGf,uBAAuB,CAACC,aAAD,CAAzC;;EAEA,IAAI,MAAMe,mBAAQC,UAAR,CAAmBF,SAAnB,CAAV,EAAyC;IACvC;EACD;;EAEDX,aAAa;EAEb,MAAMY,mBAAQE,SAAR,CAAkBhB,eAAKiB,OAAL,CAAaJ,SAAb,CAAlB,CAAN;EACA,MAAMC,mBAAQI,SAAR,CAAkBL,SAAlB,EAA6B,IAA7B,CAAN;AACD;;AA1BDM","names":["getAlreadyShownFilePath","forkCachePath","path_1","join","displayBanner","console","warn","chalk_1","yellow","showForkRecommendationsBannerIfNecessary","currentNetworkConfig","forking","enabled","blockNumber","undefined","shownPath","fs_extra_1","pathExists","ensureDir","dirname","writeJSON","exports"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\hardhat\\src\\internal\\hardhat-network\\provider\\utils\\fork-recomendations-banner.ts"],"sourcesContent":["import chalk from \"chalk\";\nimport fsExtra from \"fs-extra\";\nimport path from \"path\";\n\nimport { NetworkConfig } from \"../../../../types\";\n\nfunction getAlreadyShownFilePath(forkCachePath: string) {\n  return path.join(forkCachePath, \"recommendations-already-shown.json\");\n}\n\nfunction displayBanner() {\n  console.warn(\n    chalk.yellow(\n      `You're running a network fork starting from the latest block.\nPerformance may degrade due to fetching data from the network with each run.\nIf connecting to an archival node (e.g. Alchemy), we strongly recommend setting\nblockNumber to a fixed value to increase performance with a local cache.`\n    )\n  );\n}\n\nexport async function showForkRecommendationsBannerIfNecessary(\n  currentNetworkConfig: NetworkConfig,\n  forkCachePath: string\n) {\n  if (!(\"forking\" in currentNetworkConfig)) {\n    return;\n  }\n\n  if (currentNetworkConfig.forking?.enabled !== true) {\n    return;\n  }\n\n  if (currentNetworkConfig.forking?.blockNumber !== undefined) {\n    return;\n  }\n\n  const shownPath = getAlreadyShownFilePath(forkCachePath);\n\n  if (await fsExtra.pathExists(shownPath)) {\n    return;\n  }\n\n  displayBanner();\n\n  await fsExtra.ensureDir(path.dirname(shownPath));\n  await fsExtra.writeJSON(shownPath, true);\n}\n"]},"metadata":{},"sourceType":"script"}