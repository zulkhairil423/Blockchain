{"ast":null,"code":"'use strict';\n\nconst singulars = {\n  pronoun: 'it',\n  is: 'is',\n  was: 'was',\n  this: 'this'\n};\nconst plurals = {\n  pronoun: 'they',\n  is: 'are',\n  was: 'were',\n  this: 'these'\n};\nmodule.exports = class Pluralizer {\n  constructor(singular, plural) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n\n  pluralize(count) {\n    const one = count === 1;\n    const keys = one ? singulars : plurals;\n    const noun = one ? this.singular : this.plural;\n    return { ...keys,\n      count,\n      noun\n    };\n  }\n\n};","map":{"version":3,"names":["singulars","pronoun","is","was","this","plurals","module","exports","Pluralizer","constructor","singular","plural","pluralize","count","one","keys","noun"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/undici/lib/mock/pluralizer.js"],"sourcesContent":["'use strict'\n\nconst singulars = {\n  pronoun: 'it',\n  is: 'is',\n  was: 'was',\n  this: 'this'\n}\n\nconst plurals = {\n  pronoun: 'they',\n  is: 'are',\n  was: 'were',\n  this: 'these'\n}\n\nmodule.exports = class Pluralizer {\n  constructor (singular, plural) {\n    this.singular = singular\n    this.plural = plural\n  }\n\n  pluralize (count) {\n    const one = count === 1\n    const keys = one ? singulars : plurals\n    const noun = one ? this.singular : this.plural\n    return { ...keys, count, noun }\n  }\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAG;EAChBC,OAAO,EAAE,IADO;EAEhBC,EAAE,EAAE,IAFY;EAGhBC,GAAG,EAAE,KAHW;EAIhBC,IAAI,EAAE;AAJU,CAAlB;AAOA,MAAMC,OAAO,GAAG;EACdJ,OAAO,EAAE,MADK;EAEdC,EAAE,EAAE,KAFU;EAGdC,GAAG,EAAE,MAHS;EAIdC,IAAI,EAAE;AAJQ,CAAhB;AAOAE,MAAM,CAACC,OAAP,GAAiB,MAAMC,UAAN,CAAiB;EAChCC,WAAW,CAAEC,QAAF,EAAYC,MAAZ,EAAoB;IAC7B,KAAKD,QAAL,GAAgBA,QAAhB;IACA,KAAKC,MAAL,GAAcA,MAAd;EACD;;EAEDC,SAAS,CAAEC,KAAF,EAAS;IAChB,MAAMC,GAAG,GAAGD,KAAK,KAAK,CAAtB;IACA,MAAME,IAAI,GAAGD,GAAG,GAAGd,SAAH,GAAeK,OAA/B;IACA,MAAMW,IAAI,GAAGF,GAAG,GAAG,KAAKJ,QAAR,GAAmB,KAAKC,MAAxC;IACA,OAAO,EAAE,GAAGI,IAAL;MAAWF,KAAX;MAAkBG;IAAlB,CAAP;EACD;;AAX+B,CAAlC"},"metadata":{},"sourceType":"script"}