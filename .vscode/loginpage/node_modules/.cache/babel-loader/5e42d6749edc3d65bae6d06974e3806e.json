{"ast":null,"code":"'use strict'; // In case of breaking changes, increase the version\n// number to avoid conflicts.\n\nconst globalOrigin = Symbol.for('undici.globalOrigin.1');\n\nfunction getGlobalOrigin() {\n  return globalThis[globalOrigin];\n}\n\nfunction setGlobalOrigin(newOrigin) {\n  if (newOrigin !== undefined && typeof newOrigin !== 'string' && !(newOrigin instanceof URL)) {\n    throw new Error('Invalid base url');\n  }\n\n  if (newOrigin === undefined) {\n    Object.defineProperty(globalThis, globalOrigin, {\n      value: undefined,\n      writable: true,\n      enumerable: false,\n      configurable: false\n    });\n    return;\n  }\n\n  const parsedURL = new URL(newOrigin);\n\n  if (parsedURL.protocol !== 'http:' && parsedURL.protocol !== 'https:') {\n    throw new TypeError(`Only http & https urls are allowed, received ${parsedURL.protocol}`);\n  }\n\n  Object.defineProperty(globalThis, globalOrigin, {\n    value: parsedURL,\n    writable: true,\n    enumerable: false,\n    configurable: false\n  });\n}\n\nmodule.exports = {\n  getGlobalOrigin,\n  setGlobalOrigin\n};","map":{"version":3,"names":["globalOrigin","Symbol","for","getGlobalOrigin","globalThis","setGlobalOrigin","newOrigin","undefined","URL","Error","Object","defineProperty","value","writable","enumerable","configurable","parsedURL","protocol","TypeError","module","exports"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/undici/lib/fetch/global.js"],"sourcesContent":["'use strict'\n\n// In case of breaking changes, increase the version\n// number to avoid conflicts.\nconst globalOrigin = Symbol.for('undici.globalOrigin.1')\n\nfunction getGlobalOrigin () {\n  return globalThis[globalOrigin]\n}\n\nfunction setGlobalOrigin (newOrigin) {\n  if (\n    newOrigin !== undefined &&\n    typeof newOrigin !== 'string' &&\n    !(newOrigin instanceof URL)\n  ) {\n    throw new Error('Invalid base url')\n  }\n\n  if (newOrigin === undefined) {\n    Object.defineProperty(globalThis, globalOrigin, {\n      value: undefined,\n      writable: true,\n      enumerable: false,\n      configurable: false\n    })\n\n    return\n  }\n\n  const parsedURL = new URL(newOrigin)\n\n  if (parsedURL.protocol !== 'http:' && parsedURL.protocol !== 'https:') {\n    throw new TypeError(`Only http & https urls are allowed, received ${parsedURL.protocol}`)\n  }\n\n  Object.defineProperty(globalThis, globalOrigin, {\n    value: parsedURL,\n    writable: true,\n    enumerable: false,\n    configurable: false\n  })\n}\n\nmodule.exports = {\n  getGlobalOrigin,\n  setGlobalOrigin\n}\n"],"mappings":"AAAA,a,CAEA;AACA;;AACA,MAAMA,YAAY,GAAGC,MAAM,CAACC,GAAP,CAAW,uBAAX,CAArB;;AAEA,SAASC,eAAT,GAA4B;EAC1B,OAAOC,UAAU,CAACJ,YAAD,CAAjB;AACD;;AAED,SAASK,eAAT,CAA0BC,SAA1B,EAAqC;EACnC,IACEA,SAAS,KAAKC,SAAd,IACA,OAAOD,SAAP,KAAqB,QADrB,IAEA,EAAEA,SAAS,YAAYE,GAAvB,CAHF,EAIE;IACA,MAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;EACD;;EAED,IAAIH,SAAS,KAAKC,SAAlB,EAA6B;IAC3BG,MAAM,CAACC,cAAP,CAAsBP,UAAtB,EAAkCJ,YAAlC,EAAgD;MAC9CY,KAAK,EAAEL,SADuC;MAE9CM,QAAQ,EAAE,IAFoC;MAG9CC,UAAU,EAAE,KAHkC;MAI9CC,YAAY,EAAE;IAJgC,CAAhD;IAOA;EACD;;EAED,MAAMC,SAAS,GAAG,IAAIR,GAAJ,CAAQF,SAAR,CAAlB;;EAEA,IAAIU,SAAS,CAACC,QAAV,KAAuB,OAAvB,IAAkCD,SAAS,CAACC,QAAV,KAAuB,QAA7D,EAAuE;IACrE,MAAM,IAAIC,SAAJ,CAAe,gDAA+CF,SAAS,CAACC,QAAS,EAAjF,CAAN;EACD;;EAEDP,MAAM,CAACC,cAAP,CAAsBP,UAAtB,EAAkCJ,YAAlC,EAAgD;IAC9CY,KAAK,EAAEI,SADuC;IAE9CH,QAAQ,EAAE,IAFoC;IAG9CC,UAAU,EAAE,KAHkC;IAI9CC,YAAY,EAAE;EAJgC,CAAhD;AAMD;;AAEDI,MAAM,CAACC,OAAP,GAAiB;EACfjB,eADe;EAEfE;AAFe,CAAjB"},"metadata":{},"sourceType":"script"}