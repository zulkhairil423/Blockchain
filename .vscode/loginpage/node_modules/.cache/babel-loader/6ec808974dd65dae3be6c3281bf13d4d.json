{"ast":null,"code":"'use strict';\n/**\n * @module Spec\n */\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\nvar constants = require('../runner').constants;\n\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\nvar EVENT_SUITE_END = constants.EVENT_SUITE_END;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n\nvar inherits = require('../utils').inherits;\n\nvar color = Base.color;\n/**\n * Expose `Spec`.\n */\n\nexports = module.exports = Spec;\n/**\n * Constructs a new `Spec` reporter instance.\n *\n * @public\n * @class\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\n\nfunction Spec(runner, options) {\n  Base.call(this, runner, options);\n  var self = this;\n  var indents = 0;\n  var n = 0;\n\n  function indent() {\n    return Array(indents).join('  ');\n  }\n\n  runner.on(EVENT_RUN_BEGIN, function () {\n    Base.consoleLog();\n  });\n  runner.on(EVENT_SUITE_BEGIN, function (suite) {\n    ++indents;\n    Base.consoleLog(color('suite', '%s%s'), indent(), suite.title);\n  });\n  runner.on(EVENT_SUITE_END, function () {\n    --indents;\n\n    if (indents === 1) {\n      Base.consoleLog();\n    }\n  });\n  runner.on(EVENT_TEST_PENDING, function (test) {\n    var fmt = indent() + color('pending', '  - %s');\n    Base.consoleLog(fmt, test.title);\n  });\n  runner.on(EVENT_TEST_PASS, function (test) {\n    var fmt;\n\n    if (test.speed === 'fast') {\n      fmt = indent() + color('checkmark', '  ' + Base.symbols.ok) + color('pass', ' %s');\n      Base.consoleLog(fmt, test.title);\n    } else {\n      fmt = indent() + color('checkmark', '  ' + Base.symbols.ok) + color('pass', ' %s') + color(test.speed, ' (%dms)');\n      Base.consoleLog(fmt, test.title, test.duration);\n    }\n  });\n  runner.on(EVENT_TEST_FAIL, function (test) {\n    Base.consoleLog(indent() + color('fail', '  %d) %s'), ++n, test.title);\n  });\n  runner.once(EVENT_RUN_END, self.epilogue.bind(self));\n}\n/**\n * Inherit from `Base.prototype`.\n */\n\n\ninherits(Spec, Base);\nSpec.description = 'hierarchical & verbose [default]';","map":{"version":3,"names":["Base","require","constants","EVENT_RUN_BEGIN","EVENT_RUN_END","EVENT_SUITE_BEGIN","EVENT_SUITE_END","EVENT_TEST_FAIL","EVENT_TEST_PASS","EVENT_TEST_PENDING","inherits","color","exports","module","Spec","runner","options","call","self","indents","n","indent","Array","join","on","consoleLog","suite","title","test","fmt","speed","symbols","ok","duration","once","epilogue","bind","description"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/mocha/lib/reporters/spec.js"],"sourcesContent":["'use strict';\n/**\n * @module Spec\n */\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar constants = require('../runner').constants;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\nvar EVENT_SUITE_END = constants.EVENT_SUITE_END;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar inherits = require('../utils').inherits;\nvar color = Base.color;\n\n/**\n * Expose `Spec`.\n */\n\nexports = module.exports = Spec;\n\n/**\n * Constructs a new `Spec` reporter instance.\n *\n * @public\n * @class\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction Spec(runner, options) {\n  Base.call(this, runner, options);\n\n  var self = this;\n  var indents = 0;\n  var n = 0;\n\n  function indent() {\n    return Array(indents).join('  ');\n  }\n\n  runner.on(EVENT_RUN_BEGIN, function () {\n    Base.consoleLog();\n  });\n\n  runner.on(EVENT_SUITE_BEGIN, function (suite) {\n    ++indents;\n    Base.consoleLog(color('suite', '%s%s'), indent(), suite.title);\n  });\n\n  runner.on(EVENT_SUITE_END, function () {\n    --indents;\n    if (indents === 1) {\n      Base.consoleLog();\n    }\n  });\n\n  runner.on(EVENT_TEST_PENDING, function (test) {\n    var fmt = indent() + color('pending', '  - %s');\n    Base.consoleLog(fmt, test.title);\n  });\n\n  runner.on(EVENT_TEST_PASS, function (test) {\n    var fmt;\n    if (test.speed === 'fast') {\n      fmt =\n        indent() +\n        color('checkmark', '  ' + Base.symbols.ok) +\n        color('pass', ' %s');\n      Base.consoleLog(fmt, test.title);\n    } else {\n      fmt =\n        indent() +\n        color('checkmark', '  ' + Base.symbols.ok) +\n        color('pass', ' %s') +\n        color(test.speed, ' (%dms)');\n      Base.consoleLog(fmt, test.title, test.duration);\n    }\n  });\n\n  runner.on(EVENT_TEST_FAIL, function (test) {\n    Base.consoleLog(indent() + color('fail', '  %d) %s'), ++n, test.title);\n  });\n\n  runner.once(EVENT_RUN_END, self.epilogue.bind(self));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Spec, Base);\n\nSpec.description = 'hierarchical & verbose [default]';\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}