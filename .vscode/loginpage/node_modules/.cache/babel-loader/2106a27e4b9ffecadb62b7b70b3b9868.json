{"ast":null,"code":"import { __assign } from \"tslib\";\nexport { Severity, Status } from '@sentry/types';\nexport { addGlobalEventProcessor, addBreadcrumb, captureException, captureEvent, captureMessage, configureScope, getHubFromCarrier, getCurrentHub, Hub, makeMain, Scope, startTransaction, setContext, setExtra, setExtras, setTag, setTags, setUser, withScope } from '@sentry/core';\nexport { NodeBackend } from './backend';\nexport { NodeClient } from './client';\nexport { defaultIntegrations, init, lastEventId, flush, close } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getMainCarrier } from '@sentry/hub';\nimport * as domain from 'domain';\nimport * as Handlers from './handlers';\nimport * as NodeIntegrations from './integrations';\nimport * as Transports from './transports';\n\nvar INTEGRATIONS = __assign(__assign({}, CoreIntegrations), NodeIntegrations);\n\nexport { INTEGRATIONS as Integrations, Transports, Handlers }; // We need to patch domain on the global __SENTRY__ object to make it work for node in cross-platform packages like\n// @sentry/hub. If we don't do this, browser bundlers will have troubles resolving `require('domain')`.\n\nvar carrier = getMainCarrier();\n\nif (carrier.__SENTRY__) {\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  carrier.__SENTRY__.extensions.domain = carrier.__SENTRY__.extensions.domain || domain;\n}","map":{"version":3,"mappings":";AAAA,SASEA,QATF,EAYEC,MAZF,QAeO,eAfP;AAiBA,SACEC,uBADF,EAEEC,aAFF,EAGEC,gBAHF,EAIEC,YAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,iBAPF,EAQEC,aARF,EASEC,GATF,EAUEC,QAVF,EAWEC,KAXF,EAYEC,gBAZF,EAaEC,UAbF,EAcEC,QAdF,EAeEC,SAfF,EAgBEC,MAhBF,EAiBEC,OAjBF,EAkBEC,OAlBF,EAmBEC,SAnBF,QAoBO,cApBP;AAsBA,SAASC,WAAT,QAAyC,WAAzC;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,mBAAT,EAA8BC,IAA9B,EAAoCC,WAApC,EAAiDC,KAAjD,EAAwDC,KAAxD,QAAqE,OAArE;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,WAAtC;AAEA,SAASC,YAAY,IAAIC,gBAAzB,QAAiD,cAAjD;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAO,KAAKC,gBAAZ,MAAkC,gBAAlC;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;;AAEA,IAAMC,YAAY,yBACbN,gBADa,GAEbI,gBAFa,CAAlB;;AAKA,SAASE,YAAY,IAAIP,YAAzB,EAAuCM,UAAvC,EAAmDF,QAAnD,G,CAEA;AACA;;AACA,IAAMI,OAAO,GAAGN,cAAc,EAA9B;;AACA,IAAIM,OAAO,CAACC,UAAZ,EAAwB;EACtBD,OAAO,CAACC,UAAR,CAAmBC,UAAnB,GAAgCF,OAAO,CAACC,UAAR,CAAmBC,UAAnB,IAAiC,EAAjE;EACAF,OAAO,CAACC,UAAR,CAAmBC,UAAnB,CAA8BP,MAA9B,GAAuCK,OAAO,CAACC,UAAR,CAAmBC,UAAnB,CAA8BP,MAA9B,IAAwCA,MAA/E;AACD","names":["Severity","Status","addGlobalEventProcessor","addBreadcrumb","captureException","captureEvent","captureMessage","configureScope","getHubFromCarrier","getCurrentHub","Hub","makeMain","Scope","startTransaction","setContext","setExtra","setExtras","setTag","setTags","setUser","withScope","NodeBackend","NodeClient","defaultIntegrations","init","lastEventId","flush","close","SDK_NAME","SDK_VERSION","Integrations","CoreIntegrations","getMainCarrier","domain","Handlers","NodeIntegrations","Transports","INTEGRATIONS","carrier","__SENTRY__","extensions"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\node\\src\\index.ts"],"sourcesContent":["export {\n  Breadcrumb,\n  BreadcrumbHint,\n  Request,\n  SdkInfo,\n  Event,\n  EventHint,\n  Exception,\n  Response,\n  Severity,\n  StackFrame,\n  Stacktrace,\n  Status,\n  Thread,\n  User,\n} from '@sentry/types';\n\nexport {\n  addGlobalEventProcessor,\n  addBreadcrumb,\n  captureException,\n  captureEvent,\n  captureMessage,\n  configureScope,\n  getHubFromCarrier,\n  getCurrentHub,\n  Hub,\n  makeMain,\n  Scope,\n  startTransaction,\n  setContext,\n  setExtra,\n  setExtras,\n  setTag,\n  setTags,\n  setUser,\n  withScope,\n} from '@sentry/core';\n\nexport { NodeBackend, NodeOptions } from './backend';\nexport { NodeClient } from './client';\nexport { defaultIntegrations, init, lastEventId, flush, close } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getMainCarrier } from '@sentry/hub';\nimport * as domain from 'domain';\n\nimport * as Handlers from './handlers';\nimport * as NodeIntegrations from './integrations';\nimport * as Transports from './transports';\n\nconst INTEGRATIONS = {\n  ...CoreIntegrations,\n  ...NodeIntegrations,\n};\n\nexport { INTEGRATIONS as Integrations, Transports, Handlers };\n\n// We need to patch domain on the global __SENTRY__ object to make it work for node in cross-platform packages like\n// @sentry/hub. If we don't do this, browser bundlers will have troubles resolving `require('domain')`.\nconst carrier = getMainCarrier();\nif (carrier.__SENTRY__) {\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  carrier.__SENTRY__.extensions.domain = carrier.__SENTRY__.extensions.domain || domain;\n}\n"]},"metadata":{},"sourceType":"module"}