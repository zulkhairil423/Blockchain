{"ast":null,"code":"'use strict';\n\nvar Test = require('../test');\n\nvar EVENT_FILE_PRE_REQUIRE = require('../suite').constants.EVENT_FILE_PRE_REQUIRE;\n/**\n * BDD-style interface:\n *\n *      describe('Array', function() {\n *        describe('#indexOf()', function() {\n *          it('should return -1 when not present', function() {\n *            // ...\n *          });\n *\n *          it('should return the index when present', function() {\n *            // ...\n *          });\n *        });\n *      });\n *\n * @param {Suite} suite Root suite.\n */\n\n\nmodule.exports = function bddInterface(suite) {\n  var suites = [suite];\n  suite.on(EVENT_FILE_PRE_REQUIRE, function (context, file, mocha) {\n    var common = require('./common')(suites, context, mocha);\n\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n    /**\n     * Describe a \"suite\" with the given `title`\n     * and callback `fn` containing nested suites\n     * and/or tests.\n     */\n\n    context.describe = context.context = function (title, fn) {\n      return common.suite.create({\n        title,\n        file,\n        fn\n      });\n    };\n    /**\n     * Pending describe.\n     */\n\n\n    context.xdescribe = context.xcontext = context.describe.skip = function (title, fn) {\n      return common.suite.skip({\n        title,\n        file,\n        fn\n      });\n    };\n    /**\n     * Exclusive suite.\n     */\n\n\n    context.describe.only = function (title, fn) {\n      return common.suite.only({\n        title,\n        file,\n        fn\n      });\n    };\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n\n    context.it = context.specify = function (title, fn) {\n      var suite = suites[0];\n\n      if (suite.isPending()) {\n        fn = null;\n      }\n\n      var test = new Test(title, fn);\n      test.file = file;\n      suite.addTest(test);\n      return test;\n    };\n    /**\n     * Exclusive test-case.\n     */\n\n\n    context.it.only = function (title, fn) {\n      return common.test.only(mocha, context.it(title, fn));\n    };\n    /**\n     * Pending test case.\n     */\n\n\n    context.xit = context.xspecify = context.it.skip = function (title) {\n      return context.it(title);\n    };\n  });\n};\n\nmodule.exports.description = 'BDD or RSpec style [default]';","map":{"version":3,"names":["Test","require","EVENT_FILE_PRE_REQUIRE","constants","module","exports","bddInterface","suite","suites","on","context","file","mocha","common","before","after","beforeEach","afterEach","run","options","delay","runWithSuite","describe","title","fn","create","xdescribe","xcontext","skip","only","it","specify","isPending","test","addTest","xit","xspecify","description"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/mocha/lib/interfaces/bdd.js"],"sourcesContent":["'use strict';\n\nvar Test = require('../test');\nvar EVENT_FILE_PRE_REQUIRE =\n  require('../suite').constants.EVENT_FILE_PRE_REQUIRE;\n\n/**\n * BDD-style interface:\n *\n *      describe('Array', function() {\n *        describe('#indexOf()', function() {\n *          it('should return -1 when not present', function() {\n *            // ...\n *          });\n *\n *          it('should return the index when present', function() {\n *            // ...\n *          });\n *        });\n *      });\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function bddInterface(suite) {\n  var suites = [suite];\n\n  suite.on(EVENT_FILE_PRE_REQUIRE, function (context, file, mocha) {\n    var common = require('./common')(suites, context, mocha);\n\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n    /**\n     * Describe a \"suite\" with the given `title`\n     * and callback `fn` containing nested suites\n     * and/or tests.\n     */\n\n    context.describe = context.context = function (title, fn) {\n      return common.suite.create({\n        title,\n        file,\n        fn\n      });\n    };\n\n    /**\n     * Pending describe.\n     */\n\n    context.xdescribe =\n      context.xcontext =\n      context.describe.skip =\n        function (title, fn) {\n          return common.suite.skip({\n            title,\n            file,\n            fn\n          });\n        };\n\n    /**\n     * Exclusive suite.\n     */\n\n    context.describe.only = function (title, fn) {\n      return common.suite.only({\n        title,\n        file,\n        fn\n      });\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    context.it = context.specify = function (title, fn) {\n      var suite = suites[0];\n      if (suite.isPending()) {\n        fn = null;\n      }\n      var test = new Test(title, fn);\n      test.file = file;\n      suite.addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.it.only = function (title, fn) {\n      return common.test.only(mocha, context.it(title, fn));\n    };\n\n    /**\n     * Pending test case.\n     */\n\n    context.xit =\n      context.xspecify =\n      context.it.skip =\n        function (title) {\n          return context.it(title);\n        };\n  });\n};\n\nmodule.exports.description = 'BDD or RSpec style [default]';\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}