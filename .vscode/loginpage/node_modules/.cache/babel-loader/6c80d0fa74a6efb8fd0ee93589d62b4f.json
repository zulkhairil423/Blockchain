{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { dropUndefinedKeys, timestampWithMs, uuid4 } from '@sentry/utils';\nimport { SpanStatus } from './spanstatus';\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\n\nvar SpanRecorder =\n/** @class */\nfunction () {\n  function SpanRecorder(maxlen) {\n    if (maxlen === void 0) {\n      maxlen = 1000;\n    }\n\n    this.spans = [];\n    this._maxlen = maxlen;\n  }\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n\n\n  SpanRecorder.prototype.add = function (span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  };\n\n  return SpanRecorder;\n}();\n\nexport { SpanRecorder };\n/**\n * Span contains all data about a span\n */\n\nvar Span =\n/** @class */\nfunction () {\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  function Span(spanContext) {\n    /**\n     * @inheritDoc\n     */\n    this.traceId = uuid4();\n    /**\n     * @inheritDoc\n     */\n\n    this.spanId = uuid4().substring(16);\n    /**\n     * Timestamp in seconds when the span was created.\n     */\n\n    this.startTimestamp = timestampWithMs();\n    /**\n     * @inheritDoc\n     */\n\n    this.tags = {};\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    this.data = {};\n\n    if (!spanContext) {\n      return this;\n    }\n\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    } // We want to include booleans as well here\n\n\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n  /**\n   * @inheritDoc\n   * @deprecated\n   */\n\n\n  Span.prototype.child = function (spanContext) {\n    return this.startChild(spanContext);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Span.prototype.startChild = function (spanContext) {\n    var childSpan = new Span(__assign(__assign({}, spanContext), {\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId\n    }));\n    childSpan.spanRecorder = this.spanRecorder;\n\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n    return childSpan;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Span.prototype.setTag = function (key, value) {\n    var _a;\n\n    this.tags = __assign(__assign({}, this.tags), (_a = {}, _a[key] = value, _a));\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n\n  Span.prototype.setData = function (key, value) {\n    var _a;\n\n    this.data = __assign(__assign({}, this.data), (_a = {}, _a[key] = value, _a));\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Span.prototype.setStatus = function (value) {\n    this.status = value;\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Span.prototype.setHttpStatus = function (httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    var spanStatus = SpanStatus.fromHttpCode(httpStatus);\n\n    if (spanStatus !== SpanStatus.UnknownError) {\n      this.setStatus(spanStatus);\n    }\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Span.prototype.isSuccess = function () {\n    return this.status === SpanStatus.Ok;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Span.prototype.finish = function (endTimestamp) {\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Span.prototype.toTraceparent = function () {\n    var sampledString = '';\n\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n\n    return this.traceId + \"-\" + this.spanId + sampledString;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Span.prototype.getTraceContext = function () {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Span.prototype.toJSON = function () {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId\n    });\n  };\n\n  return Span;\n}();\n\nexport { Span };","map":{"version":3,"mappings":"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","names":["dropUndefinedKeys","timestampWithMs","uuid4","SpanStatus","maxlen","_maxlen","SpanRecorder","span","spans","length","spanRecorder","undefined","push","spanContext","substring","traceId","spanId","parentSpanId","sampled","op","description","data","tags","status","startTimestamp","endTimestamp","Span","startChild","childSpan","__assign","add","transaction","key","value","_a","httpStatus","setTag","String","spanStatus","fromHttpCode","UnknownError","setStatus","Ok","sampledString","Object","keys","parent_span_id","span_id","trace_id","start_timestamp","timestamp"],"sources":["C:\\Users\\LeonyX\\Documents\\Blockchain\\.vscode\\loginpage\\node_modules\\@sentry\\tracing\\src\\span.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport { Primitive, Span as SpanInterface, SpanContext, Transaction } from '@sentry/types';\nimport { dropUndefinedKeys, timestampWithMs, uuid4 } from '@sentry/utils';\n\nimport { SpanStatus } from './spanstatus';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nexport class SpanRecorder {\n  public spans: Span[] = [];\n\n  private readonly _maxlen: number;\n\n  public constructor(maxlen: number = 1000) {\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n  public add(span: Span): void {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nexport class Span implements SpanInterface {\n  /**\n   * @inheritDoc\n   */\n  public traceId: string = uuid4();\n\n  /**\n   * @inheritDoc\n   */\n  public spanId: string = uuid4().substring(16);\n\n  /**\n   * @inheritDoc\n   */\n  public parentSpanId?: string;\n\n  /**\n   * Internal keeper of the status\n   */\n  public status?: SpanStatus | string;\n\n  /**\n   * @inheritDoc\n   */\n  public sampled?: boolean;\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n  public startTimestamp: number = timestampWithMs();\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n  public endTimestamp?: number;\n\n  /**\n   * @inheritDoc\n   */\n  public op?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public description?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public tags: { [key: string]: Primitive } = {};\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public data: { [key: string]: any } = {};\n\n  /**\n   * List of spans that were finalized\n   */\n  public spanRecorder?: SpanRecorder;\n\n  /**\n   * @inheritDoc\n   */\n  public transaction?: Transaction;\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(spanContext?: SpanContext) {\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated\n   */\n  public child(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'spanId' | 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): Span {\n    return this.startChild(spanContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startChild(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'spanId' | 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): Span {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public setData(key: string, value: any): this {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setStatus(value: SpanStatus): this {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setHttpStatus(httpStatus: number): this {\n    this.setTag('http.status_code', String(httpStatus));\n    const spanStatus = SpanStatus.fromHttpCode(httpStatus);\n    if (spanStatus !== SpanStatus.UnknownError) {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isSuccess(): boolean {\n    return this.status === SpanStatus.Ok;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public finish(endTimestamp?: number): void {\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toTraceparent(): string {\n    let sampledString = '';\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n    return `${this.traceId}-${this.spanId}${sampledString}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTraceContext(): {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: { [key: string]: any };\n    description?: string;\n    op?: string;\n    parent_span_id?: string;\n    span_id: string;\n    status?: string;\n    tags?: { [key: string]: Primitive };\n    trace_id: string;\n  } {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toJSON(): {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: { [key: string]: any };\n    description?: string;\n    op?: string;\n    parent_span_id?: string;\n    span_id: string;\n    start_timestamp: number;\n    status?: string;\n    tags?: { [key: string]: Primitive };\n    timestamp?: number;\n    trace_id: string;\n  } {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}