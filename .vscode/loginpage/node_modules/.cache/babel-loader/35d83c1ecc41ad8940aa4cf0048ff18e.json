{"ast":null,"code":"'use strict';\n/**\n * @module JSON\n */\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nconst createUnsupportedError = require('../errors').createUnsupportedError;\n\nconst utils = require('../utils');\n\nvar constants = require('../runner').constants;\n\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_TEST_END = constants.EVENT_TEST_END;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\n/**\n * Expose `JSON`.\n */\n\nexports = module.exports = JSONReporter;\n/**\n * Constructs a new `JSON` reporter instance.\n *\n * @public\n * @class JSON\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\n\nfunction JSONReporter(runner) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  Base.call(this, runner, options);\n  var self = this;\n  var tests = [];\n  var pending = [];\n  var failures = [];\n  var passes = [];\n  var output;\n\n  if (options.reporterOption && options.reporterOption.output) {\n    if (utils.isBrowser()) {\n      throw createUnsupportedError('file output not supported in browser');\n    }\n\n    output = options.reporterOption.output;\n  }\n\n  runner.on(EVENT_TEST_END, function (test) {\n    tests.push(test);\n  });\n  runner.on(EVENT_TEST_PASS, function (test) {\n    passes.push(test);\n  });\n  runner.on(EVENT_TEST_FAIL, function (test) {\n    failures.push(test);\n  });\n  runner.on(EVENT_TEST_PENDING, function (test) {\n    pending.push(test);\n  });\n  runner.once(EVENT_RUN_END, function () {\n    var obj = {\n      stats: self.stats,\n      tests: tests.map(clean),\n      pending: pending.map(clean),\n      failures: failures.map(clean),\n      passes: passes.map(clean)\n    };\n    runner.testResults = obj;\n    var json = JSON.stringify(obj, null, 2);\n\n    if (output) {\n      try {\n        fs.mkdirSync(path.dirname(output), {\n          recursive: true\n        });\n        fs.writeFileSync(output, json);\n      } catch (err) {\n        console.error(`${Base.symbols.err} [mocha] writing output to \"${output}\" failed: ${err.message}\\n`);\n        process.stdout.write(json);\n      }\n    } else {\n      process.stdout.write(json);\n    }\n  });\n}\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @private\n * @param {Object} test\n * @return {Object}\n */\n\n\nfunction clean(test) {\n  var err = test.err || {};\n\n  if (err instanceof Error) {\n    err = errorJSON(err);\n  }\n\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    file: test.file,\n    duration: test.duration,\n    currentRetry: test.currentRetry(),\n    speed: test.speed,\n    err: cleanCycles(err)\n  };\n}\n/**\n * Replaces any circular references inside `obj` with '[object Object]'\n *\n * @private\n * @param {Object} obj\n * @return {Object}\n */\n\n\nfunction cleanCycles(obj) {\n  var cache = [];\n  return JSON.parse(JSON.stringify(obj, function (key, value) {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.indexOf(value) !== -1) {\n        // Instead of going in a circle, we'll print [object Object]\n        return '' + value;\n      }\n\n      cache.push(value);\n    }\n\n    return value;\n  }));\n}\n/**\n * Transform an Error object into a JSON object.\n *\n * @private\n * @param {Error} err\n * @return {Object}\n */\n\n\nfunction errorJSON(err) {\n  var res = {};\n  Object.getOwnPropertyNames(err).forEach(function (key) {\n    res[key] = err[key];\n  }, err);\n  return res;\n}\n\nJSONReporter.description = 'single JSON object';","map":{"version":3,"names":["Base","require","fs","path","createUnsupportedError","utils","constants","EVENT_TEST_PASS","EVENT_TEST_PENDING","EVENT_TEST_FAIL","EVENT_TEST_END","EVENT_RUN_END","exports","module","JSONReporter","runner","options","call","self","tests","pending","failures","passes","output","reporterOption","isBrowser","on","test","push","once","obj","stats","map","clean","testResults","json","JSON","stringify","mkdirSync","dirname","recursive","writeFileSync","err","console","error","symbols","message","process","stdout","write","Error","errorJSON","title","fullTitle","file","duration","currentRetry","speed","cleanCycles","cache","parse","key","value","indexOf","res","Object","getOwnPropertyNames","forEach","description"],"sources":["C:/Users/LeonyX/Documents/Blockchain/.vscode/loginpage/node_modules/mocha/lib/reporters/json.js"],"sourcesContent":["'use strict';\n/**\n * @module JSON\n */\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar fs = require('fs');\nvar path = require('path');\nconst createUnsupportedError = require('../errors').createUnsupportedError;\nconst utils = require('../utils');\nvar constants = require('../runner').constants;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_TEST_END = constants.EVENT_TEST_END;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\n\n/**\n * Expose `JSON`.\n */\n\nexports = module.exports = JSONReporter;\n\n/**\n * Constructs a new `JSON` reporter instance.\n *\n * @public\n * @class JSON\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction JSONReporter(runner, options = {}) {\n  Base.call(this, runner, options);\n\n  var self = this;\n  var tests = [];\n  var pending = [];\n  var failures = [];\n  var passes = [];\n  var output;\n\n  if (options.reporterOption && options.reporterOption.output) {\n    if (utils.isBrowser()) {\n      throw createUnsupportedError('file output not supported in browser');\n    }\n    output = options.reporterOption.output;\n  }\n\n  runner.on(EVENT_TEST_END, function (test) {\n    tests.push(test);\n  });\n\n  runner.on(EVENT_TEST_PASS, function (test) {\n    passes.push(test);\n  });\n\n  runner.on(EVENT_TEST_FAIL, function (test) {\n    failures.push(test);\n  });\n\n  runner.on(EVENT_TEST_PENDING, function (test) {\n    pending.push(test);\n  });\n\n  runner.once(EVENT_RUN_END, function () {\n    var obj = {\n      stats: self.stats,\n      tests: tests.map(clean),\n      pending: pending.map(clean),\n      failures: failures.map(clean),\n      passes: passes.map(clean)\n    };\n\n    runner.testResults = obj;\n\n    var json = JSON.stringify(obj, null, 2);\n    if (output) {\n      try {\n        fs.mkdirSync(path.dirname(output), {recursive: true});\n        fs.writeFileSync(output, json);\n      } catch (err) {\n        console.error(\n          `${Base.symbols.err} [mocha] writing output to \"${output}\" failed: ${err.message}\\n`\n        );\n        process.stdout.write(json);\n      }\n    } else {\n      process.stdout.write(json);\n    }\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @private\n * @param {Object} test\n * @return {Object}\n */\nfunction clean(test) {\n  var err = test.err || {};\n  if (err instanceof Error) {\n    err = errorJSON(err);\n  }\n\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    file: test.file,\n    duration: test.duration,\n    currentRetry: test.currentRetry(),\n    speed: test.speed,\n    err: cleanCycles(err)\n  };\n}\n\n/**\n * Replaces any circular references inside `obj` with '[object Object]'\n *\n * @private\n * @param {Object} obj\n * @return {Object}\n */\nfunction cleanCycles(obj) {\n  var cache = [];\n  return JSON.parse(\n    JSON.stringify(obj, function (key, value) {\n      if (typeof value === 'object' && value !== null) {\n        if (cache.indexOf(value) !== -1) {\n          // Instead of going in a circle, we'll print [object Object]\n          return '' + value;\n        }\n        cache.push(value);\n      }\n\n      return value;\n    })\n  );\n}\n\n/**\n * Transform an Error object into a JSON object.\n *\n * @private\n * @param {Error} err\n * @return {Object}\n */\nfunction errorJSON(err) {\n  var res = {};\n  Object.getOwnPropertyNames(err).forEach(function (key) {\n    res[key] = err[key];\n  }, err);\n  return res;\n}\n\nJSONReporter.description = 'single JSON object';\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}